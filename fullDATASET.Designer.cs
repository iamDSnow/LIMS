//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LIMS_system_Prototype {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("fullDATASET")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class fullDATASET : global::System.Data.DataSet {
        
        private customerDATADataTable tablecustomerDATA;
        
        private indexDATADataTable tableindexDATA;
        
        private metalsDATADataTable tablemetalsDATA;
        
        private microbialDATADataTable tablemicrobialDATA;
        
        private mycotoxinsDATADataTable tablemycotoxinsDATA;
        
        private PesticidesDATADataTable tablePesticidesDATA;
        
        private PotencyDATADataTable tablePotencyDATA;
        
        private SolventsDATADataTable tableSolventsDATA;
        
        private terpenesDATADataTable tableterpenesDATA;
        
        private wADATADataTable tablewADATA;
        
        private dataDTDataTable tabledataDT;
        
        private PestiDTDataTable tablePestiDT;
        
        private SolventDTDataTable tableSolventDT;
        
        private metalsDTDataTable tablemetalsDT;
        
        private microbialDTDataTable tablemicrobialDT;
        
        private mycotoxinDTDataTable tablemycotoxinDT;
        
        private wADTDataTable tablewADT;
        
        private TerpeneDTDataTable tableTerpeneDT;
        
        private complianceDTDataTable tablecomplianceDT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public fullDATASET() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected fullDATASET(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["customerDATA"] != null)) {
                    base.Tables.Add(new customerDATADataTable(ds.Tables["customerDATA"]));
                }
                if ((ds.Tables["indexDATA"] != null)) {
                    base.Tables.Add(new indexDATADataTable(ds.Tables["indexDATA"]));
                }
                if ((ds.Tables["metalsDATA"] != null)) {
                    base.Tables.Add(new metalsDATADataTable(ds.Tables["metalsDATA"]));
                }
                if ((ds.Tables["microbialDATA"] != null)) {
                    base.Tables.Add(new microbialDATADataTable(ds.Tables["microbialDATA"]));
                }
                if ((ds.Tables["mycotoxinsDATA"] != null)) {
                    base.Tables.Add(new mycotoxinsDATADataTable(ds.Tables["mycotoxinsDATA"]));
                }
                if ((ds.Tables["PesticidesDATA"] != null)) {
                    base.Tables.Add(new PesticidesDATADataTable(ds.Tables["PesticidesDATA"]));
                }
                if ((ds.Tables["PotencyDATA"] != null)) {
                    base.Tables.Add(new PotencyDATADataTable(ds.Tables["PotencyDATA"]));
                }
                if ((ds.Tables["SolventsDATA"] != null)) {
                    base.Tables.Add(new SolventsDATADataTable(ds.Tables["SolventsDATA"]));
                }
                if ((ds.Tables["terpenesDATA"] != null)) {
                    base.Tables.Add(new terpenesDATADataTable(ds.Tables["terpenesDATA"]));
                }
                if ((ds.Tables["wADATA"] != null)) {
                    base.Tables.Add(new wADATADataTable(ds.Tables["wADATA"]));
                }
                if ((ds.Tables["dataDT"] != null)) {
                    base.Tables.Add(new dataDTDataTable(ds.Tables["dataDT"]));
                }
                if ((ds.Tables["PestiDT"] != null)) {
                    base.Tables.Add(new PestiDTDataTable(ds.Tables["PestiDT"]));
                }
                if ((ds.Tables["SolventDT"] != null)) {
                    base.Tables.Add(new SolventDTDataTable(ds.Tables["SolventDT"]));
                }
                if ((ds.Tables["metalsDT"] != null)) {
                    base.Tables.Add(new metalsDTDataTable(ds.Tables["metalsDT"]));
                }
                if ((ds.Tables["microbialDT"] != null)) {
                    base.Tables.Add(new microbialDTDataTable(ds.Tables["microbialDT"]));
                }
                if ((ds.Tables["mycotoxinDT"] != null)) {
                    base.Tables.Add(new mycotoxinDTDataTable(ds.Tables["mycotoxinDT"]));
                }
                if ((ds.Tables["wADT"] != null)) {
                    base.Tables.Add(new wADTDataTable(ds.Tables["wADT"]));
                }
                if ((ds.Tables["TerpeneDT"] != null)) {
                    base.Tables.Add(new TerpeneDTDataTable(ds.Tables["TerpeneDT"]));
                }
                if ((ds.Tables["complianceDT"] != null)) {
                    base.Tables.Add(new complianceDTDataTable(ds.Tables["complianceDT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public customerDATADataTable customerDATA {
            get {
                return this.tablecustomerDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public indexDATADataTable indexDATA {
            get {
                return this.tableindexDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public metalsDATADataTable metalsDATA {
            get {
                return this.tablemetalsDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public microbialDATADataTable microbialDATA {
            get {
                return this.tablemicrobialDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mycotoxinsDATADataTable mycotoxinsDATA {
            get {
                return this.tablemycotoxinsDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PesticidesDATADataTable PesticidesDATA {
            get {
                return this.tablePesticidesDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PotencyDATADataTable PotencyDATA {
            get {
                return this.tablePotencyDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SolventsDATADataTable SolventsDATA {
            get {
                return this.tableSolventsDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public terpenesDATADataTable terpenesDATA {
            get {
                return this.tableterpenesDATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public wADATADataTable wADATA {
            get {
                return this.tablewADATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataDTDataTable dataDT {
            get {
                return this.tabledataDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PestiDTDataTable PestiDT {
            get {
                return this.tablePestiDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SolventDTDataTable SolventDT {
            get {
                return this.tableSolventDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public metalsDTDataTable metalsDT {
            get {
                return this.tablemetalsDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public microbialDTDataTable microbialDT {
            get {
                return this.tablemicrobialDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mycotoxinDTDataTable mycotoxinDT {
            get {
                return this.tablemycotoxinDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public wADTDataTable wADT {
            get {
                return this.tablewADT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TerpeneDTDataTable TerpeneDT {
            get {
                return this.tableTerpeneDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public complianceDTDataTable complianceDT {
            get {
                return this.tablecomplianceDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            fullDATASET cln = ((fullDATASET)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["customerDATA"] != null)) {
                    base.Tables.Add(new customerDATADataTable(ds.Tables["customerDATA"]));
                }
                if ((ds.Tables["indexDATA"] != null)) {
                    base.Tables.Add(new indexDATADataTable(ds.Tables["indexDATA"]));
                }
                if ((ds.Tables["metalsDATA"] != null)) {
                    base.Tables.Add(new metalsDATADataTable(ds.Tables["metalsDATA"]));
                }
                if ((ds.Tables["microbialDATA"] != null)) {
                    base.Tables.Add(new microbialDATADataTable(ds.Tables["microbialDATA"]));
                }
                if ((ds.Tables["mycotoxinsDATA"] != null)) {
                    base.Tables.Add(new mycotoxinsDATADataTable(ds.Tables["mycotoxinsDATA"]));
                }
                if ((ds.Tables["PesticidesDATA"] != null)) {
                    base.Tables.Add(new PesticidesDATADataTable(ds.Tables["PesticidesDATA"]));
                }
                if ((ds.Tables["PotencyDATA"] != null)) {
                    base.Tables.Add(new PotencyDATADataTable(ds.Tables["PotencyDATA"]));
                }
                if ((ds.Tables["SolventsDATA"] != null)) {
                    base.Tables.Add(new SolventsDATADataTable(ds.Tables["SolventsDATA"]));
                }
                if ((ds.Tables["terpenesDATA"] != null)) {
                    base.Tables.Add(new terpenesDATADataTable(ds.Tables["terpenesDATA"]));
                }
                if ((ds.Tables["wADATA"] != null)) {
                    base.Tables.Add(new wADATADataTable(ds.Tables["wADATA"]));
                }
                if ((ds.Tables["dataDT"] != null)) {
                    base.Tables.Add(new dataDTDataTable(ds.Tables["dataDT"]));
                }
                if ((ds.Tables["PestiDT"] != null)) {
                    base.Tables.Add(new PestiDTDataTable(ds.Tables["PestiDT"]));
                }
                if ((ds.Tables["SolventDT"] != null)) {
                    base.Tables.Add(new SolventDTDataTable(ds.Tables["SolventDT"]));
                }
                if ((ds.Tables["metalsDT"] != null)) {
                    base.Tables.Add(new metalsDTDataTable(ds.Tables["metalsDT"]));
                }
                if ((ds.Tables["microbialDT"] != null)) {
                    base.Tables.Add(new microbialDTDataTable(ds.Tables["microbialDT"]));
                }
                if ((ds.Tables["mycotoxinDT"] != null)) {
                    base.Tables.Add(new mycotoxinDTDataTable(ds.Tables["mycotoxinDT"]));
                }
                if ((ds.Tables["wADT"] != null)) {
                    base.Tables.Add(new wADTDataTable(ds.Tables["wADT"]));
                }
                if ((ds.Tables["TerpeneDT"] != null)) {
                    base.Tables.Add(new TerpeneDTDataTable(ds.Tables["TerpeneDT"]));
                }
                if ((ds.Tables["complianceDT"] != null)) {
                    base.Tables.Add(new complianceDTDataTable(ds.Tables["complianceDT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablecustomerDATA = ((customerDATADataTable)(base.Tables["customerDATA"]));
            if ((initTable == true)) {
                if ((this.tablecustomerDATA != null)) {
                    this.tablecustomerDATA.InitVars();
                }
            }
            this.tableindexDATA = ((indexDATADataTable)(base.Tables["indexDATA"]));
            if ((initTable == true)) {
                if ((this.tableindexDATA != null)) {
                    this.tableindexDATA.InitVars();
                }
            }
            this.tablemetalsDATA = ((metalsDATADataTable)(base.Tables["metalsDATA"]));
            if ((initTable == true)) {
                if ((this.tablemetalsDATA != null)) {
                    this.tablemetalsDATA.InitVars();
                }
            }
            this.tablemicrobialDATA = ((microbialDATADataTable)(base.Tables["microbialDATA"]));
            if ((initTable == true)) {
                if ((this.tablemicrobialDATA != null)) {
                    this.tablemicrobialDATA.InitVars();
                }
            }
            this.tablemycotoxinsDATA = ((mycotoxinsDATADataTable)(base.Tables["mycotoxinsDATA"]));
            if ((initTable == true)) {
                if ((this.tablemycotoxinsDATA != null)) {
                    this.tablemycotoxinsDATA.InitVars();
                }
            }
            this.tablePesticidesDATA = ((PesticidesDATADataTable)(base.Tables["PesticidesDATA"]));
            if ((initTable == true)) {
                if ((this.tablePesticidesDATA != null)) {
                    this.tablePesticidesDATA.InitVars();
                }
            }
            this.tablePotencyDATA = ((PotencyDATADataTable)(base.Tables["PotencyDATA"]));
            if ((initTable == true)) {
                if ((this.tablePotencyDATA != null)) {
                    this.tablePotencyDATA.InitVars();
                }
            }
            this.tableSolventsDATA = ((SolventsDATADataTable)(base.Tables["SolventsDATA"]));
            if ((initTable == true)) {
                if ((this.tableSolventsDATA != null)) {
                    this.tableSolventsDATA.InitVars();
                }
            }
            this.tableterpenesDATA = ((terpenesDATADataTable)(base.Tables["terpenesDATA"]));
            if ((initTable == true)) {
                if ((this.tableterpenesDATA != null)) {
                    this.tableterpenesDATA.InitVars();
                }
            }
            this.tablewADATA = ((wADATADataTable)(base.Tables["wADATA"]));
            if ((initTable == true)) {
                if ((this.tablewADATA != null)) {
                    this.tablewADATA.InitVars();
                }
            }
            this.tabledataDT = ((dataDTDataTable)(base.Tables["dataDT"]));
            if ((initTable == true)) {
                if ((this.tabledataDT != null)) {
                    this.tabledataDT.InitVars();
                }
            }
            this.tablePestiDT = ((PestiDTDataTable)(base.Tables["PestiDT"]));
            if ((initTable == true)) {
                if ((this.tablePestiDT != null)) {
                    this.tablePestiDT.InitVars();
                }
            }
            this.tableSolventDT = ((SolventDTDataTable)(base.Tables["SolventDT"]));
            if ((initTable == true)) {
                if ((this.tableSolventDT != null)) {
                    this.tableSolventDT.InitVars();
                }
            }
            this.tablemetalsDT = ((metalsDTDataTable)(base.Tables["metalsDT"]));
            if ((initTable == true)) {
                if ((this.tablemetalsDT != null)) {
                    this.tablemetalsDT.InitVars();
                }
            }
            this.tablemicrobialDT = ((microbialDTDataTable)(base.Tables["microbialDT"]));
            if ((initTable == true)) {
                if ((this.tablemicrobialDT != null)) {
                    this.tablemicrobialDT.InitVars();
                }
            }
            this.tablemycotoxinDT = ((mycotoxinDTDataTable)(base.Tables["mycotoxinDT"]));
            if ((initTable == true)) {
                if ((this.tablemycotoxinDT != null)) {
                    this.tablemycotoxinDT.InitVars();
                }
            }
            this.tablewADT = ((wADTDataTable)(base.Tables["wADT"]));
            if ((initTable == true)) {
                if ((this.tablewADT != null)) {
                    this.tablewADT.InitVars();
                }
            }
            this.tableTerpeneDT = ((TerpeneDTDataTable)(base.Tables["TerpeneDT"]));
            if ((initTable == true)) {
                if ((this.tableTerpeneDT != null)) {
                    this.tableTerpeneDT.InitVars();
                }
            }
            this.tablecomplianceDT = ((complianceDTDataTable)(base.Tables["complianceDT"]));
            if ((initTable == true)) {
                if ((this.tablecomplianceDT != null)) {
                    this.tablecomplianceDT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "fullDATASET";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/fullDATASET.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecustomerDATA = new customerDATADataTable();
            base.Tables.Add(this.tablecustomerDATA);
            this.tableindexDATA = new indexDATADataTable();
            base.Tables.Add(this.tableindexDATA);
            this.tablemetalsDATA = new metalsDATADataTable();
            base.Tables.Add(this.tablemetalsDATA);
            this.tablemicrobialDATA = new microbialDATADataTable();
            base.Tables.Add(this.tablemicrobialDATA);
            this.tablemycotoxinsDATA = new mycotoxinsDATADataTable();
            base.Tables.Add(this.tablemycotoxinsDATA);
            this.tablePesticidesDATA = new PesticidesDATADataTable();
            base.Tables.Add(this.tablePesticidesDATA);
            this.tablePotencyDATA = new PotencyDATADataTable();
            base.Tables.Add(this.tablePotencyDATA);
            this.tableSolventsDATA = new SolventsDATADataTable();
            base.Tables.Add(this.tableSolventsDATA);
            this.tableterpenesDATA = new terpenesDATADataTable();
            base.Tables.Add(this.tableterpenesDATA);
            this.tablewADATA = new wADATADataTable();
            base.Tables.Add(this.tablewADATA);
            this.tabledataDT = new dataDTDataTable();
            base.Tables.Add(this.tabledataDT);
            this.tablePestiDT = new PestiDTDataTable();
            base.Tables.Add(this.tablePestiDT);
            this.tableSolventDT = new SolventDTDataTable();
            base.Tables.Add(this.tableSolventDT);
            this.tablemetalsDT = new metalsDTDataTable();
            base.Tables.Add(this.tablemetalsDT);
            this.tablemicrobialDT = new microbialDTDataTable();
            base.Tables.Add(this.tablemicrobialDT);
            this.tablemycotoxinDT = new mycotoxinDTDataTable();
            base.Tables.Add(this.tablemycotoxinDT);
            this.tablewADT = new wADTDataTable();
            base.Tables.Add(this.tablewADT);
            this.tableTerpeneDT = new TerpeneDTDataTable();
            base.Tables.Add(this.tableTerpeneDT);
            this.tablecomplianceDT = new complianceDTDataTable();
            base.Tables.Add(this.tablecomplianceDT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializecustomerDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeindexDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemetalsDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemicrobialDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemycotoxinsDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePesticidesDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePotencyDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSolventsDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeterpenesDATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializewADATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializedataDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePestiDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSolventDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemetalsDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemicrobialDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializemycotoxinDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializewADT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTerpeneDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializecomplianceDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            fullDATASET ds = new fullDATASET();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void customerDATARowChangeEventHandler(object sender, customerDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void indexDATARowChangeEventHandler(object sender, indexDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void metalsDATARowChangeEventHandler(object sender, metalsDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void microbialDATARowChangeEventHandler(object sender, microbialDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void mycotoxinsDATARowChangeEventHandler(object sender, mycotoxinsDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PesticidesDATARowChangeEventHandler(object sender, PesticidesDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PotencyDATARowChangeEventHandler(object sender, PotencyDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SolventsDATARowChangeEventHandler(object sender, SolventsDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void terpenesDATARowChangeEventHandler(object sender, terpenesDATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void wADATARowChangeEventHandler(object sender, wADATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void dataDTRowChangeEventHandler(object sender, dataDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PestiDTRowChangeEventHandler(object sender, PestiDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SolventDTRowChangeEventHandler(object sender, SolventDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void metalsDTRowChangeEventHandler(object sender, metalsDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void microbialDTRowChangeEventHandler(object sender, microbialDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void mycotoxinDTRowChangeEventHandler(object sender, mycotoxinDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void wADTRowChangeEventHandler(object sender, wADTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TerpeneDTRowChangeEventHandler(object sender, TerpeneDTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void complianceDTRowChangeEventHandler(object sender, complianceDTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class customerDATADataTable : global::System.Data.TypedTableBase<customerDATARow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncustomer;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnlicense;
            
            private global::System.Data.DataColumn columnaddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATADataTable() {
                this.TableName = "customerDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal customerDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected customerDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn customerColumn {
                get {
                    return this.columncustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn licenseColumn {
                get {
                    return this.columnlicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARow this[int index] {
                get {
                    return ((customerDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event customerDATARowChangeEventHandler customerDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event customerDATARowChangeEventHandler customerDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event customerDATARowChangeEventHandler customerDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event customerDATARowChangeEventHandler customerDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddcustomerDATARow(customerDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARow AddcustomerDATARow(string customer, string email, string license, string address) {
                customerDATARow rowcustomerDATARow = ((customerDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        customer,
                        email,
                        license,
                        address};
                rowcustomerDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcustomerDATARow);
                return rowcustomerDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARow FindByid(int id) {
                return ((customerDATARow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                customerDATADataTable cln = ((customerDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new customerDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncustomer = base.Columns["customer"];
                this.columnemail = base.Columns["email"];
                this.columnlicense = base.Columns["license"];
                this.columnaddress = base.Columns["address"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncustomer = new global::System.Data.DataColumn("customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnlicense = new global::System.Data.DataColumn("license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicense);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columncustomer.MaxLength = 50;
                this.columnemail.MaxLength = 50;
                this.columnlicense.MaxLength = 50;
                this.columnaddress.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARow NewcustomerDATARow() {
                return ((customerDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new customerDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(customerDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.customerDATARowChanged != null)) {
                    this.customerDATARowChanged(this, new customerDATARowChangeEvent(((customerDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.customerDATARowChanging != null)) {
                    this.customerDATARowChanging(this, new customerDATARowChangeEvent(((customerDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.customerDATARowDeleted != null)) {
                    this.customerDATARowDeleted(this, new customerDATARowChangeEvent(((customerDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.customerDATARowDeleting != null)) {
                    this.customerDATARowDeleting(this, new customerDATARowChangeEvent(((customerDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovecustomerDATARow(customerDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "customerDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class indexDATADataTable : global::System.Data.TypedTableBase<indexDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATADataTable() {
                this.TableName = "indexDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal indexDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected indexDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATARow this[int index] {
                get {
                    return ((indexDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event indexDATARowChangeEventHandler indexDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event indexDATARowChangeEventHandler indexDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event indexDATARowChangeEventHandler indexDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event indexDATARowChangeEventHandler indexDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddindexDATARow(indexDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATARow AddindexDATARow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage) {
                indexDATARow rowindexDATARow = ((indexDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage};
                rowindexDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowindexDATARow);
                return rowindexDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                indexDATADataTable cln = ((indexDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new indexDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATARow NewindexDATARow() {
                return ((indexDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new indexDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(indexDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.indexDATARowChanged != null)) {
                    this.indexDATARowChanged(this, new indexDATARowChangeEvent(((indexDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.indexDATARowChanging != null)) {
                    this.indexDATARowChanging(this, new indexDATARowChangeEvent(((indexDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.indexDATARowDeleted != null)) {
                    this.indexDATARowDeleted(this, new indexDATARowChangeEvent(((indexDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.indexDATARowDeleting != null)) {
                    this.indexDATARowDeleting(this, new indexDATARowChangeEvent(((indexDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveindexDATARow(indexDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "indexDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class metalsDATADataTable : global::System.Data.TypedTableBase<metalsDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnAASID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnMetalsWeight;
            
            private global::System.Data.DataColumn columnArsenic;
            
            private global::System.Data.DataColumn columnCadmium;
            
            private global::System.Data.DataColumn columnLead;
            
            private global::System.Data.DataColumn columnMercury;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATADataTable() {
                this.TableName = "metalsDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal metalsDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected metalsDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AASIDColumn {
                get {
                    return this.columnAASID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalsWeightColumn {
                get {
                    return this.columnMetalsWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArsenicColumn {
                get {
                    return this.columnArsenic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CadmiumColumn {
                get {
                    return this.columnCadmium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LeadColumn {
                get {
                    return this.columnLead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MercuryColumn {
                get {
                    return this.columnMercury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARow this[int index] {
                get {
                    return ((metalsDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDATARowChangeEventHandler metalsDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDATARowChangeEventHandler metalsDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDATARowChangeEventHandler metalsDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDATARowChangeEventHandler metalsDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmetalsDATARow(metalsDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARow AddmetalsDATARow(string SAMPLEID, string AASID, string Method, string Technique, string MetalsWeight, string Arsenic, string Cadmium, string Lead, string Mercury) {
                metalsDATARow rowmetalsDATARow = ((metalsDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SAMPLEID,
                        AASID,
                        Method,
                        Technique,
                        MetalsWeight,
                        Arsenic,
                        Cadmium,
                        Lead,
                        Mercury};
                rowmetalsDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmetalsDATARow);
                return rowmetalsDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARow FindByID(int ID) {
                return ((metalsDATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                metalsDATADataTable cln = ((metalsDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new metalsDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnAASID = base.Columns["AASID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnMetalsWeight = base.Columns["MetalsWeight"];
                this.columnArsenic = base.Columns["Arsenic"];
                this.columnCadmium = base.Columns["Cadmium"];
                this.columnLead = base.Columns["Lead"];
                this.columnMercury = base.Columns["Mercury"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnAASID = new global::System.Data.DataColumn("AASID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAASID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnMetalsWeight = new global::System.Data.DataColumn("MetalsWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalsWeight);
                this.columnArsenic = new global::System.Data.DataColumn("Arsenic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArsenic);
                this.columnCadmium = new global::System.Data.DataColumn("Cadmium", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCadmium);
                this.columnLead = new global::System.Data.DataColumn("Lead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLead);
                this.columnMercury = new global::System.Data.DataColumn("Mercury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMercury);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSAMPLEID.AllowDBNull = false;
                this.columnSAMPLEID.MaxLength = 20;
                this.columnAASID.AllowDBNull = false;
                this.columnAASID.MaxLength = 20;
                this.columnMethod.AllowDBNull = false;
                this.columnMethod.MaxLength = 25;
                this.columnTechnique.AllowDBNull = false;
                this.columnTechnique.MaxLength = 20;
                this.columnMetalsWeight.AllowDBNull = false;
                this.columnMetalsWeight.MaxLength = 20;
                this.columnArsenic.AllowDBNull = false;
                this.columnArsenic.MaxLength = 20;
                this.columnCadmium.AllowDBNull = false;
                this.columnCadmium.MaxLength = 20;
                this.columnLead.AllowDBNull = false;
                this.columnLead.MaxLength = 20;
                this.columnMercury.AllowDBNull = false;
                this.columnMercury.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARow NewmetalsDATARow() {
                return ((metalsDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new metalsDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(metalsDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.metalsDATARowChanged != null)) {
                    this.metalsDATARowChanged(this, new metalsDATARowChangeEvent(((metalsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.metalsDATARowChanging != null)) {
                    this.metalsDATARowChanging(this, new metalsDATARowChangeEvent(((metalsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.metalsDATARowDeleted != null)) {
                    this.metalsDATARowDeleted(this, new metalsDATARowChangeEvent(((metalsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.metalsDATARowDeleting != null)) {
                    this.metalsDATARowDeleting(this, new metalsDATARowChangeEvent(((metalsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemetalsDATARow(metalsDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "metalsDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class microbialDATADataTable : global::System.Data.TypedTableBase<microbialDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnMicrobialWeight;
            
            private global::System.Data.DataColumn columnAspergillus;
            
            private global::System.Data.DataColumn columnShigaToxin;
            
            private global::System.Data.DataColumn columnSalmonella;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATADataTable() {
                this.TableName = "microbialDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal microbialDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected microbialDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MicrobialWeightColumn {
                get {
                    return this.columnMicrobialWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AspergillusColumn {
                get {
                    return this.columnAspergillus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShigaToxinColumn {
                get {
                    return this.columnShigaToxin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalmonellaColumn {
                get {
                    return this.columnSalmonella;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARow this[int index] {
                get {
                    return ((microbialDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDATARowChangeEventHandler microbialDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDATARowChangeEventHandler microbialDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDATARowChangeEventHandler microbialDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDATARowChangeEventHandler microbialDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmicrobialDATARow(microbialDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARow AddmicrobialDATARow(string SAMPLEID, string Method, string Technique, string MicrobialWeight, string Aspergillus, string ShigaToxin, string Salmonella) {
                microbialDATARow rowmicrobialDATARow = ((microbialDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SAMPLEID,
                        Method,
                        Technique,
                        MicrobialWeight,
                        Aspergillus,
                        ShigaToxin,
                        Salmonella};
                rowmicrobialDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmicrobialDATARow);
                return rowmicrobialDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARow FindByID(int ID) {
                return ((microbialDATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                microbialDATADataTable cln = ((microbialDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new microbialDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnMicrobialWeight = base.Columns["MicrobialWeight"];
                this.columnAspergillus = base.Columns["Aspergillus"];
                this.columnShigaToxin = base.Columns["ShigaToxin"];
                this.columnSalmonella = base.Columns["Salmonella"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnMicrobialWeight = new global::System.Data.DataColumn("MicrobialWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicrobialWeight);
                this.columnAspergillus = new global::System.Data.DataColumn("Aspergillus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAspergillus);
                this.columnShigaToxin = new global::System.Data.DataColumn("ShigaToxin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShigaToxin);
                this.columnSalmonella = new global::System.Data.DataColumn("Salmonella", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalmonella);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSAMPLEID.MaxLength = 25;
                this.columnMethod.MaxLength = 25;
                this.columnTechnique.MaxLength = 25;
                this.columnMicrobialWeight.MaxLength = 25;
                this.columnAspergillus.MaxLength = 25;
                this.columnShigaToxin.MaxLength = 25;
                this.columnSalmonella.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARow NewmicrobialDATARow() {
                return ((microbialDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new microbialDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(microbialDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.microbialDATARowChanged != null)) {
                    this.microbialDATARowChanged(this, new microbialDATARowChangeEvent(((microbialDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.microbialDATARowChanging != null)) {
                    this.microbialDATARowChanging(this, new microbialDATARowChangeEvent(((microbialDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.microbialDATARowDeleted != null)) {
                    this.microbialDATARowDeleted(this, new microbialDATARowChangeEvent(((microbialDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.microbialDATARowDeleting != null)) {
                    this.microbialDATARowDeleting(this, new microbialDATARowChangeEvent(((microbialDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemicrobialDATARow(microbialDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "microbialDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mycotoxinsDATADataTable : global::System.Data.TypedTableBase<mycotoxinsDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnSampleID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnLCMSID;
            
            private global::System.Data.DataColumn columnMycoWeight;
            
            private global::System.Data.DataColumn columnAB1;
            
            private global::System.Data.DataColumn columnAB2;
            
            private global::System.Data.DataColumn columnAG1;
            
            private global::System.Data.DataColumn columnAG2;
            
            private global::System.Data.DataColumn columnOTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATADataTable() {
                this.TableName = "mycotoxinsDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal mycotoxinsDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected mycotoxinsDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIDColumn {
                get {
                    return this.columnSampleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LCMSIDColumn {
                get {
                    return this.columnLCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MycoWeightColumn {
                get {
                    return this.columnMycoWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AB1Column {
                get {
                    return this.columnAB1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AB2Column {
                get {
                    return this.columnAB2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AG1Column {
                get {
                    return this.columnAG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AG2Column {
                get {
                    return this.columnAG2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTAColumn {
                get {
                    return this.columnOTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARow this[int index] {
                get {
                    return ((mycotoxinsDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinsDATARowChangeEventHandler mycotoxinsDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinsDATARowChangeEventHandler mycotoxinsDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinsDATARowChangeEventHandler mycotoxinsDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinsDATARowChangeEventHandler mycotoxinsDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmycotoxinsDATARow(mycotoxinsDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARow AddmycotoxinsDATARow(string Date, string SampleID, string Method, string Technique, string LCMSID, string MycoWeight, string AB1, string AB2, string AG1, string AG2, string OTA) {
                mycotoxinsDATARow rowmycotoxinsDATARow = ((mycotoxinsDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        SampleID,
                        Method,
                        Technique,
                        LCMSID,
                        MycoWeight,
                        AB1,
                        AB2,
                        AG1,
                        AG2,
                        OTA};
                rowmycotoxinsDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmycotoxinsDATARow);
                return rowmycotoxinsDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARow FindByID(int ID) {
                return ((mycotoxinsDATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mycotoxinsDATADataTable cln = ((mycotoxinsDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mycotoxinsDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDate = base.Columns["Date"];
                this.columnSampleID = base.Columns["SampleID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnLCMSID = base.Columns["LCMSID"];
                this.columnMycoWeight = base.Columns["MycoWeight"];
                this.columnAB1 = base.Columns["AB1"];
                this.columnAB2 = base.Columns["AB2"];
                this.columnAG1 = base.Columns["AG1"];
                this.columnAG2 = base.Columns["AG2"];
                this.columnOTA = base.Columns["OTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnSampleID = new global::System.Data.DataColumn("SampleID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnLCMSID = new global::System.Data.DataColumn("LCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMSID);
                this.columnMycoWeight = new global::System.Data.DataColumn("MycoWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMycoWeight);
                this.columnAB1 = new global::System.Data.DataColumn("AB1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB1);
                this.columnAB2 = new global::System.Data.DataColumn("AB2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB2);
                this.columnAG1 = new global::System.Data.DataColumn("AG1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG1);
                this.columnAG2 = new global::System.Data.DataColumn("AG2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG2);
                this.columnOTA = new global::System.Data.DataColumn("OTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDate.MaxLength = 25;
                this.columnSampleID.MaxLength = 25;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnLCMSID.MaxLength = 25;
                this.columnMycoWeight.MaxLength = 25;
                this.columnAB1.MaxLength = 50;
                this.columnAB2.MaxLength = 50;
                this.columnAG1.MaxLength = 50;
                this.columnAG2.MaxLength = 50;
                this.columnOTA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARow NewmycotoxinsDATARow() {
                return ((mycotoxinsDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mycotoxinsDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mycotoxinsDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mycotoxinsDATARowChanged != null)) {
                    this.mycotoxinsDATARowChanged(this, new mycotoxinsDATARowChangeEvent(((mycotoxinsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mycotoxinsDATARowChanging != null)) {
                    this.mycotoxinsDATARowChanging(this, new mycotoxinsDATARowChangeEvent(((mycotoxinsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mycotoxinsDATARowDeleted != null)) {
                    this.mycotoxinsDATARowDeleted(this, new mycotoxinsDATARowChangeEvent(((mycotoxinsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mycotoxinsDATARowDeleting != null)) {
                    this.mycotoxinsDATARowDeleting(this, new mycotoxinsDATARowChangeEvent(((mycotoxinsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemycotoxinsDATARow(mycotoxinsDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mycotoxinsDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PesticidesDATADataTable : global::System.Data.TypedTableBase<PesticidesDATARow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSampleID;
            
            private global::System.Data.DataColumn columnLCMSID;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnPestInputWt;
            
            private global::System.Data.DataColumn columnAbamectin;
            
            private global::System.Data.DataColumn columnAcephate;
            
            private global::System.Data.DataColumn columnAcequinocyl;
            
            private global::System.Data.DataColumn columnAcetamiprid;
            
            private global::System.Data.DataColumn columnAldicarb;
            
            private global::System.Data.DataColumn columnAzoxystrobin;
            
            private global::System.Data.DataColumn columnBifenazate;
            
            private global::System.Data.DataColumn columnBifenthrin;
            
            private global::System.Data.DataColumn columnBoscalid;
            
            private global::System.Data.DataColumn columnCaptan;
            
            private global::System.Data.DataColumn columnCarbaryl;
            
            private global::System.Data.DataColumn columnCarbofuran;
            
            private global::System.Data.DataColumn columnChlorantranilprole;
            
            private global::System.Data.DataColumn columnChlordane;
            
            private global::System.Data.DataColumn columnChlorfenapyr;
            
            private global::System.Data.DataColumn columnChlorpyrifos;
            
            private global::System.Data.DataColumn columnClofentezine;
            
            private global::System.Data.DataColumn columnCoumaphos;
            
            private global::System.Data.DataColumn columnCyfluthrin;
            
            private global::System.Data.DataColumn columnCypermethrin;
            
            private global::System.Data.DataColumn columnDaminozide;
            
            private global::System.Data.DataColumn columnDichlorvos;
            
            private global::System.Data.DataColumn columnDiazinon;
            
            private global::System.Data.DataColumn columnDimethoate;
            
            private global::System.Data.DataColumn columnDimethomorph;
            
            private global::System.Data.DataColumn columnEthoprophos;
            
            private global::System.Data.DataColumn columnEtofenprox;
            
            private global::System.Data.DataColumn columnEtoxazole;
            
            private global::System.Data.DataColumn columnFenhexamid;
            
            private global::System.Data.DataColumn columnFenoxycarb;
            
            private global::System.Data.DataColumn columnFenpyroximate;
            
            private global::System.Data.DataColumn columnFipronil;
            
            private global::System.Data.DataColumn columnFlonicamid;
            
            private global::System.Data.DataColumn columnFludioxonil;
            
            private global::System.Data.DataColumn columnHexythiazox;
            
            private global::System.Data.DataColumn columnImazalil;
            
            private global::System.Data.DataColumn columnImidacloprid;
            
            private global::System.Data.DataColumn columnKresoximMethyl;
            
            private global::System.Data.DataColumn columnMalathion;
            
            private global::System.Data.DataColumn columnMetalaxyl;
            
            private global::System.Data.DataColumn columnMethiocarb;
            
            private global::System.Data.DataColumn columnMethomyl;
            
            private global::System.Data.DataColumn columnMethylParathion;
            
            private global::System.Data.DataColumn columnMevinphos;
            
            private global::System.Data.DataColumn columnMyclobutanil;
            
            private global::System.Data.DataColumn columnNaled;
            
            private global::System.Data.DataColumn columnOxamyl;
            
            private global::System.Data.DataColumn columnPentachloronitrobenzene;
            
            private global::System.Data.DataColumn columnPermethrins;
            
            private global::System.Data.DataColumn columnPhosmet;
            
            private global::System.Data.DataColumn columnPiperonylButoxide;
            
            private global::System.Data.DataColumn columnPrallethrin;
            
            private global::System.Data.DataColumn columnPropiconazole;
            
            private global::System.Data.DataColumn columnPropoxur;
            
            private global::System.Data.DataColumn columnPyrethrins;
            
            private global::System.Data.DataColumn columnPyridaben;
            
            private global::System.Data.DataColumn columnSpinetoramJ;
            
            private global::System.Data.DataColumn columnSpinetoramL;
            
            private global::System.Data.DataColumn columnSpinosadA;
            
            private global::System.Data.DataColumn columnSpinosadD;
            
            private global::System.Data.DataColumn columnSpiromesifen;
            
            private global::System.Data.DataColumn columnSpirotetramat;
            
            private global::System.Data.DataColumn columnSpiroxamine;
            
            private global::System.Data.DataColumn columnTebuconazole;
            
            private global::System.Data.DataColumn columnThiacloprid;
            
            private global::System.Data.DataColumn columnThiamethoxam;
            
            private global::System.Data.DataColumn columnTrifloxystrobin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATADataTable() {
                this.TableName = "PesticidesDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PesticidesDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PesticidesDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIDColumn {
                get {
                    return this.columnSampleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LCMSIDColumn {
                get {
                    return this.columnLCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PestInputWtColumn {
                get {
                    return this.columnPestInputWt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AbamectinColumn {
                get {
                    return this.columnAbamectin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcephateColumn {
                get {
                    return this.columnAcephate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcequinocylColumn {
                get {
                    return this.columnAcequinocyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetamipridColumn {
                get {
                    return this.columnAcetamiprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AldicarbColumn {
                get {
                    return this.columnAldicarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AzoxystrobinColumn {
                get {
                    return this.columnAzoxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenazateColumn {
                get {
                    return this.columnBifenazate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenthrinColumn {
                get {
                    return this.columnBifenthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BoscalidColumn {
                get {
                    return this.columnBoscalid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CaptanColumn {
                get {
                    return this.columnCaptan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbarylColumn {
                get {
                    return this.columnCarbaryl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbofuranColumn {
                get {
                    return this.columnCarbofuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorantranilproleColumn {
                get {
                    return this.columnChlorantranilprole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlordaneColumn {
                get {
                    return this.columnChlordane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorfenapyrColumn {
                get {
                    return this.columnChlorfenapyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorpyrifosColumn {
                get {
                    return this.columnChlorpyrifos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClofentezineColumn {
                get {
                    return this.columnClofentezine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CoumaphosColumn {
                get {
                    return this.columnCoumaphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CyfluthrinColumn {
                get {
                    return this.columnCyfluthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CypermethrinColumn {
                get {
                    return this.columnCypermethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DaminozideColumn {
                get {
                    return this.columnDaminozide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DichlorvosColumn {
                get {
                    return this.columnDichlorvos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiazinonColumn {
                get {
                    return this.columnDiazinon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethoateColumn {
                get {
                    return this.columnDimethoate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethomorphColumn {
                get {
                    return this.columnDimethomorph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthoprophosColumn {
                get {
                    return this.columnEthoprophos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtofenproxColumn {
                get {
                    return this.columnEtofenprox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtoxazoleColumn {
                get {
                    return this.columnEtoxazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenhexamidColumn {
                get {
                    return this.columnFenhexamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenoxycarbColumn {
                get {
                    return this.columnFenoxycarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenpyroximateColumn {
                get {
                    return this.columnFenpyroximate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FipronilColumn {
                get {
                    return this.columnFipronil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FlonicamidColumn {
                get {
                    return this.columnFlonicamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FludioxonilColumn {
                get {
                    return this.columnFludioxonil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HexythiazoxColumn {
                get {
                    return this.columnHexythiazox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImazalilColumn {
                get {
                    return this.columnImazalil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImidaclopridColumn {
                get {
                    return this.columnImidacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KresoximMethylColumn {
                get {
                    return this.columnKresoximMethyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MalathionColumn {
                get {
                    return this.columnMalathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalaxylColumn {
                get {
                    return this.columnMetalaxyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethiocarbColumn {
                get {
                    return this.columnMethiocarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethomylColumn {
                get {
                    return this.columnMethomyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethylParathionColumn {
                get {
                    return this.columnMethylParathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MevinphosColumn {
                get {
                    return this.columnMevinphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MyclobutanilColumn {
                get {
                    return this.columnMyclobutanil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NaledColumn {
                get {
                    return this.columnNaled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OxamylColumn {
                get {
                    return this.columnOxamyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PentachloronitrobenzeneColumn {
                get {
                    return this.columnPentachloronitrobenzene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermethrinsColumn {
                get {
                    return this.columnPermethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhosmetColumn {
                get {
                    return this.columnPhosmet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PiperonylButoxideColumn {
                get {
                    return this.columnPiperonylButoxide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrallethrinColumn {
                get {
                    return this.columnPrallethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropiconazoleColumn {
                get {
                    return this.columnPropiconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropoxurColumn {
                get {
                    return this.columnPropoxur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyrethrinsColumn {
                get {
                    return this.columnPyrethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyridabenColumn {
                get {
                    return this.columnPyridaben;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramJColumn {
                get {
                    return this.columnSpinetoramJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramLColumn {
                get {
                    return this.columnSpinetoramL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadAColumn {
                get {
                    return this.columnSpinosadA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadDColumn {
                get {
                    return this.columnSpinosadD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiromesifenColumn {
                get {
                    return this.columnSpiromesifen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpirotetramatColumn {
                get {
                    return this.columnSpirotetramat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiroxamineColumn {
                get {
                    return this.columnSpiroxamine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TebuconazoleColumn {
                get {
                    return this.columnTebuconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiaclopridColumn {
                get {
                    return this.columnThiacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiamethoxamColumn {
                get {
                    return this.columnThiamethoxam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrifloxystrobinColumn {
                get {
                    return this.columnTrifloxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARow this[int index] {
                get {
                    return ((PesticidesDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PesticidesDATARowChangeEventHandler PesticidesDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PesticidesDATARowChangeEventHandler PesticidesDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PesticidesDATARowChangeEventHandler PesticidesDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PesticidesDATARowChangeEventHandler PesticidesDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPesticidesDATARow(PesticidesDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARow AddPesticidesDATARow(
                        string SampleID, 
                        string LCMSID, 
                        string GCMSID, 
                        string PestInputWt, 
                        string Abamectin, 
                        string Acephate, 
                        string Acequinocyl, 
                        string Acetamiprid, 
                        string Aldicarb, 
                        string Azoxystrobin, 
                        string Bifenazate, 
                        string Bifenthrin, 
                        string Boscalid, 
                        string Captan, 
                        string Carbaryl, 
                        string Carbofuran, 
                        string Chlorantranilprole, 
                        string Chlordane, 
                        string Chlorfenapyr, 
                        string Chlorpyrifos, 
                        string Clofentezine, 
                        string Coumaphos, 
                        string Cyfluthrin, 
                        string Cypermethrin, 
                        string Daminozide, 
                        string Dichlorvos, 
                        string Diazinon, 
                        string Dimethoate, 
                        string Dimethomorph, 
                        string Ethoprophos, 
                        string Etofenprox, 
                        string Etoxazole, 
                        string Fenhexamid, 
                        string Fenoxycarb, 
                        string Fenpyroximate, 
                        string Fipronil, 
                        string Flonicamid, 
                        string Fludioxonil, 
                        string Hexythiazox, 
                        string Imazalil, 
                        string Imidacloprid, 
                        string KresoximMethyl, 
                        string Malathion, 
                        string Metalaxyl, 
                        string Methiocarb, 
                        string Methomyl, 
                        string MethylParathion, 
                        string Mevinphos, 
                        string Myclobutanil, 
                        string Naled, 
                        string Oxamyl, 
                        string Pentachloronitrobenzene, 
                        string Permethrins, 
                        string Phosmet, 
                        string PiperonylButoxide, 
                        string Prallethrin, 
                        string Propiconazole, 
                        string Propoxur, 
                        string Pyrethrins, 
                        string Pyridaben, 
                        string SpinetoramJ, 
                        string SpinetoramL, 
                        string SpinosadA, 
                        string SpinosadD, 
                        string Spiromesifen, 
                        string Spirotetramat, 
                        string Spiroxamine, 
                        string Tebuconazole, 
                        string Thiacloprid, 
                        string Thiamethoxam, 
                        string Trifloxystrobin) {
                PesticidesDATARow rowPesticidesDATARow = ((PesticidesDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SampleID,
                        LCMSID,
                        GCMSID,
                        PestInputWt,
                        Abamectin,
                        Acephate,
                        Acequinocyl,
                        Acetamiprid,
                        Aldicarb,
                        Azoxystrobin,
                        Bifenazate,
                        Bifenthrin,
                        Boscalid,
                        Captan,
                        Carbaryl,
                        Carbofuran,
                        Chlorantranilprole,
                        Chlordane,
                        Chlorfenapyr,
                        Chlorpyrifos,
                        Clofentezine,
                        Coumaphos,
                        Cyfluthrin,
                        Cypermethrin,
                        Daminozide,
                        Dichlorvos,
                        Diazinon,
                        Dimethoate,
                        Dimethomorph,
                        Ethoprophos,
                        Etofenprox,
                        Etoxazole,
                        Fenhexamid,
                        Fenoxycarb,
                        Fenpyroximate,
                        Fipronil,
                        Flonicamid,
                        Fludioxonil,
                        Hexythiazox,
                        Imazalil,
                        Imidacloprid,
                        KresoximMethyl,
                        Malathion,
                        Metalaxyl,
                        Methiocarb,
                        Methomyl,
                        MethylParathion,
                        Mevinphos,
                        Myclobutanil,
                        Naled,
                        Oxamyl,
                        Pentachloronitrobenzene,
                        Permethrins,
                        Phosmet,
                        PiperonylButoxide,
                        Prallethrin,
                        Propiconazole,
                        Propoxur,
                        Pyrethrins,
                        Pyridaben,
                        SpinetoramJ,
                        SpinetoramL,
                        SpinosadA,
                        SpinosadD,
                        Spiromesifen,
                        Spirotetramat,
                        Spiroxamine,
                        Tebuconazole,
                        Thiacloprid,
                        Thiamethoxam,
                        Trifloxystrobin};
                rowPesticidesDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPesticidesDATARow);
                return rowPesticidesDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARow FindById(int Id) {
                return ((PesticidesDATARow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PesticidesDATADataTable cln = ((PesticidesDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PesticidesDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSampleID = base.Columns["SampleID"];
                this.columnLCMSID = base.Columns["LCMSID"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnPestInputWt = base.Columns["PestInputWt"];
                this.columnAbamectin = base.Columns["Abamectin"];
                this.columnAcephate = base.Columns["Acephate"];
                this.columnAcequinocyl = base.Columns["Acequinocyl"];
                this.columnAcetamiprid = base.Columns["Acetamiprid"];
                this.columnAldicarb = base.Columns["Aldicarb"];
                this.columnAzoxystrobin = base.Columns["Azoxystrobin"];
                this.columnBifenazate = base.Columns["Bifenazate"];
                this.columnBifenthrin = base.Columns["Bifenthrin"];
                this.columnBoscalid = base.Columns["Boscalid"];
                this.columnCaptan = base.Columns["Captan"];
                this.columnCarbaryl = base.Columns["Carbaryl"];
                this.columnCarbofuran = base.Columns["Carbofuran"];
                this.columnChlorantranilprole = base.Columns["Chlorantranilprole"];
                this.columnChlordane = base.Columns["Chlordane"];
                this.columnChlorfenapyr = base.Columns["Chlorfenapyr"];
                this.columnChlorpyrifos = base.Columns["Chlorpyrifos"];
                this.columnClofentezine = base.Columns["Clofentezine"];
                this.columnCoumaphos = base.Columns["Coumaphos"];
                this.columnCyfluthrin = base.Columns["Cyfluthrin"];
                this.columnCypermethrin = base.Columns["Cypermethrin"];
                this.columnDaminozide = base.Columns["Daminozide"];
                this.columnDichlorvos = base.Columns["Dichlorvos"];
                this.columnDiazinon = base.Columns["Diazinon"];
                this.columnDimethoate = base.Columns["Dimethoate"];
                this.columnDimethomorph = base.Columns["Dimethomorph"];
                this.columnEthoprophos = base.Columns["Ethoprophos"];
                this.columnEtofenprox = base.Columns["Etofenprox"];
                this.columnEtoxazole = base.Columns["Etoxazole"];
                this.columnFenhexamid = base.Columns["Fenhexamid"];
                this.columnFenoxycarb = base.Columns["Fenoxycarb"];
                this.columnFenpyroximate = base.Columns["Fenpyroximate"];
                this.columnFipronil = base.Columns["Fipronil"];
                this.columnFlonicamid = base.Columns["Flonicamid"];
                this.columnFludioxonil = base.Columns["Fludioxonil"];
                this.columnHexythiazox = base.Columns["Hexythiazox"];
                this.columnImazalil = base.Columns["Imazalil"];
                this.columnImidacloprid = base.Columns["Imidacloprid"];
                this.columnKresoximMethyl = base.Columns["KresoximMethyl"];
                this.columnMalathion = base.Columns["Malathion"];
                this.columnMetalaxyl = base.Columns["Metalaxyl"];
                this.columnMethiocarb = base.Columns["Methiocarb"];
                this.columnMethomyl = base.Columns["Methomyl"];
                this.columnMethylParathion = base.Columns["MethylParathion"];
                this.columnMevinphos = base.Columns["Mevinphos"];
                this.columnMyclobutanil = base.Columns["Myclobutanil"];
                this.columnNaled = base.Columns["Naled"];
                this.columnOxamyl = base.Columns["Oxamyl"];
                this.columnPentachloronitrobenzene = base.Columns["Pentachloronitrobenzene"];
                this.columnPermethrins = base.Columns["Permethrins"];
                this.columnPhosmet = base.Columns["Phosmet"];
                this.columnPiperonylButoxide = base.Columns["PiperonylButoxide"];
                this.columnPrallethrin = base.Columns["Prallethrin"];
                this.columnPropiconazole = base.Columns["Propiconazole"];
                this.columnPropoxur = base.Columns["Propoxur"];
                this.columnPyrethrins = base.Columns["Pyrethrins"];
                this.columnPyridaben = base.Columns["Pyridaben"];
                this.columnSpinetoramJ = base.Columns["SpinetoramJ"];
                this.columnSpinetoramL = base.Columns["SpinetoramL"];
                this.columnSpinosadA = base.Columns["SpinosadA"];
                this.columnSpinosadD = base.Columns["SpinosadD"];
                this.columnSpiromesifen = base.Columns["Spiromesifen"];
                this.columnSpirotetramat = base.Columns["Spirotetramat"];
                this.columnSpiroxamine = base.Columns["Spiroxamine"];
                this.columnTebuconazole = base.Columns["Tebuconazole"];
                this.columnThiacloprid = base.Columns["Thiacloprid"];
                this.columnThiamethoxam = base.Columns["Thiamethoxam"];
                this.columnTrifloxystrobin = base.Columns["Trifloxystrobin"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSampleID = new global::System.Data.DataColumn("SampleID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleID);
                this.columnLCMSID = new global::System.Data.DataColumn("LCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMSID);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnPestInputWt = new global::System.Data.DataColumn("PestInputWt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPestInputWt);
                this.columnAbamectin = new global::System.Data.DataColumn("Abamectin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbamectin);
                this.columnAcephate = new global::System.Data.DataColumn("Acephate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcephate);
                this.columnAcequinocyl = new global::System.Data.DataColumn("Acequinocyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcequinocyl);
                this.columnAcetamiprid = new global::System.Data.DataColumn("Acetamiprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetamiprid);
                this.columnAldicarb = new global::System.Data.DataColumn("Aldicarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAldicarb);
                this.columnAzoxystrobin = new global::System.Data.DataColumn("Azoxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAzoxystrobin);
                this.columnBifenazate = new global::System.Data.DataColumn("Bifenazate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenazate);
                this.columnBifenthrin = new global::System.Data.DataColumn("Bifenthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenthrin);
                this.columnBoscalid = new global::System.Data.DataColumn("Boscalid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoscalid);
                this.columnCaptan = new global::System.Data.DataColumn("Captan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaptan);
                this.columnCarbaryl = new global::System.Data.DataColumn("Carbaryl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbaryl);
                this.columnCarbofuran = new global::System.Data.DataColumn("Carbofuran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbofuran);
                this.columnChlorantranilprole = new global::System.Data.DataColumn("Chlorantranilprole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorantranilprole);
                this.columnChlordane = new global::System.Data.DataColumn("Chlordane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlordane);
                this.columnChlorfenapyr = new global::System.Data.DataColumn("Chlorfenapyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorfenapyr);
                this.columnChlorpyrifos = new global::System.Data.DataColumn("Chlorpyrifos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorpyrifos);
                this.columnClofentezine = new global::System.Data.DataColumn("Clofentezine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClofentezine);
                this.columnCoumaphos = new global::System.Data.DataColumn("Coumaphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoumaphos);
                this.columnCyfluthrin = new global::System.Data.DataColumn("Cyfluthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCyfluthrin);
                this.columnCypermethrin = new global::System.Data.DataColumn("Cypermethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCypermethrin);
                this.columnDaminozide = new global::System.Data.DataColumn("Daminozide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaminozide);
                this.columnDichlorvos = new global::System.Data.DataColumn("Dichlorvos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDichlorvos);
                this.columnDiazinon = new global::System.Data.DataColumn("Diazinon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiazinon);
                this.columnDimethoate = new global::System.Data.DataColumn("Dimethoate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethoate);
                this.columnDimethomorph = new global::System.Data.DataColumn("Dimethomorph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethomorph);
                this.columnEthoprophos = new global::System.Data.DataColumn("Ethoprophos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthoprophos);
                this.columnEtofenprox = new global::System.Data.DataColumn("Etofenprox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtofenprox);
                this.columnEtoxazole = new global::System.Data.DataColumn("Etoxazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtoxazole);
                this.columnFenhexamid = new global::System.Data.DataColumn("Fenhexamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenhexamid);
                this.columnFenoxycarb = new global::System.Data.DataColumn("Fenoxycarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenoxycarb);
                this.columnFenpyroximate = new global::System.Data.DataColumn("Fenpyroximate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenpyroximate);
                this.columnFipronil = new global::System.Data.DataColumn("Fipronil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFipronil);
                this.columnFlonicamid = new global::System.Data.DataColumn("Flonicamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlonicamid);
                this.columnFludioxonil = new global::System.Data.DataColumn("Fludioxonil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFludioxonil);
                this.columnHexythiazox = new global::System.Data.DataColumn("Hexythiazox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHexythiazox);
                this.columnImazalil = new global::System.Data.DataColumn("Imazalil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImazalil);
                this.columnImidacloprid = new global::System.Data.DataColumn("Imidacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImidacloprid);
                this.columnKresoximMethyl = new global::System.Data.DataColumn("KresoximMethyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKresoximMethyl);
                this.columnMalathion = new global::System.Data.DataColumn("Malathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMalathion);
                this.columnMetalaxyl = new global::System.Data.DataColumn("Metalaxyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalaxyl);
                this.columnMethiocarb = new global::System.Data.DataColumn("Methiocarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethiocarb);
                this.columnMethomyl = new global::System.Data.DataColumn("Methomyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethomyl);
                this.columnMethylParathion = new global::System.Data.DataColumn("MethylParathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethylParathion);
                this.columnMevinphos = new global::System.Data.DataColumn("Mevinphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMevinphos);
                this.columnMyclobutanil = new global::System.Data.DataColumn("Myclobutanil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyclobutanil);
                this.columnNaled = new global::System.Data.DataColumn("Naled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaled);
                this.columnOxamyl = new global::System.Data.DataColumn("Oxamyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxamyl);
                this.columnPentachloronitrobenzene = new global::System.Data.DataColumn("Pentachloronitrobenzene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPentachloronitrobenzene);
                this.columnPermethrins = new global::System.Data.DataColumn("Permethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermethrins);
                this.columnPhosmet = new global::System.Data.DataColumn("Phosmet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhosmet);
                this.columnPiperonylButoxide = new global::System.Data.DataColumn("PiperonylButoxide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiperonylButoxide);
                this.columnPrallethrin = new global::System.Data.DataColumn("Prallethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrallethrin);
                this.columnPropiconazole = new global::System.Data.DataColumn("Propiconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropiconazole);
                this.columnPropoxur = new global::System.Data.DataColumn("Propoxur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropoxur);
                this.columnPyrethrins = new global::System.Data.DataColumn("Pyrethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyrethrins);
                this.columnPyridaben = new global::System.Data.DataColumn("Pyridaben", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyridaben);
                this.columnSpinetoramJ = new global::System.Data.DataColumn("SpinetoramJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramJ);
                this.columnSpinetoramL = new global::System.Data.DataColumn("SpinetoramL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramL);
                this.columnSpinosadA = new global::System.Data.DataColumn("SpinosadA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadA);
                this.columnSpinosadD = new global::System.Data.DataColumn("SpinosadD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadD);
                this.columnSpiromesifen = new global::System.Data.DataColumn("Spiromesifen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiromesifen);
                this.columnSpirotetramat = new global::System.Data.DataColumn("Spirotetramat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpirotetramat);
                this.columnSpiroxamine = new global::System.Data.DataColumn("Spiroxamine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiroxamine);
                this.columnTebuconazole = new global::System.Data.DataColumn("Tebuconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTebuconazole);
                this.columnThiacloprid = new global::System.Data.DataColumn("Thiacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiacloprid);
                this.columnThiamethoxam = new global::System.Data.DataColumn("Thiamethoxam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiamethoxam);
                this.columnTrifloxystrobin = new global::System.Data.DataColumn("Trifloxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrifloxystrobin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSampleID.MaxLength = 25;
                this.columnLCMSID.MaxLength = 25;
                this.columnGCMSID.MaxLength = 25;
                this.columnPestInputWt.MaxLength = 20;
                this.columnAbamectin.MaxLength = 25;
                this.columnAcephate.MaxLength = 25;
                this.columnAcequinocyl.MaxLength = 25;
                this.columnAcetamiprid.MaxLength = 25;
                this.columnAldicarb.MaxLength = 25;
                this.columnAzoxystrobin.MaxLength = 25;
                this.columnBifenazate.MaxLength = 25;
                this.columnBifenthrin.MaxLength = 25;
                this.columnBoscalid.MaxLength = 25;
                this.columnCaptan.MaxLength = 25;
                this.columnCarbaryl.MaxLength = 25;
                this.columnCarbofuran.MaxLength = 25;
                this.columnChlorantranilprole.MaxLength = 25;
                this.columnChlordane.MaxLength = 25;
                this.columnChlorfenapyr.MaxLength = 25;
                this.columnChlorpyrifos.MaxLength = 25;
                this.columnClofentezine.MaxLength = 25;
                this.columnCoumaphos.MaxLength = 25;
                this.columnCyfluthrin.MaxLength = 25;
                this.columnCypermethrin.MaxLength = 25;
                this.columnDaminozide.MaxLength = 25;
                this.columnDichlorvos.MaxLength = 25;
                this.columnDiazinon.MaxLength = 25;
                this.columnDimethoate.MaxLength = 25;
                this.columnDimethomorph.MaxLength = 25;
                this.columnEthoprophos.MaxLength = 25;
                this.columnEtofenprox.MaxLength = 25;
                this.columnEtoxazole.MaxLength = 25;
                this.columnFenhexamid.MaxLength = 25;
                this.columnFenoxycarb.MaxLength = 25;
                this.columnFenpyroximate.MaxLength = 25;
                this.columnFipronil.MaxLength = 25;
                this.columnFlonicamid.MaxLength = 25;
                this.columnFludioxonil.MaxLength = 25;
                this.columnHexythiazox.MaxLength = 25;
                this.columnImazalil.MaxLength = 25;
                this.columnImidacloprid.MaxLength = 25;
                this.columnKresoximMethyl.MaxLength = 25;
                this.columnMalathion.MaxLength = 25;
                this.columnMetalaxyl.MaxLength = 25;
                this.columnMethiocarb.MaxLength = 25;
                this.columnMethomyl.MaxLength = 25;
                this.columnMethylParathion.MaxLength = 25;
                this.columnMevinphos.MaxLength = 25;
                this.columnMyclobutanil.MaxLength = 25;
                this.columnNaled.MaxLength = 25;
                this.columnOxamyl.MaxLength = 25;
                this.columnPentachloronitrobenzene.MaxLength = 25;
                this.columnPermethrins.MaxLength = 25;
                this.columnPhosmet.MaxLength = 25;
                this.columnPiperonylButoxide.MaxLength = 25;
                this.columnPrallethrin.MaxLength = 25;
                this.columnPropiconazole.MaxLength = 25;
                this.columnPropoxur.MaxLength = 25;
                this.columnPyrethrins.MaxLength = 25;
                this.columnPyridaben.MaxLength = 25;
                this.columnSpinetoramJ.MaxLength = 25;
                this.columnSpinetoramL.MaxLength = 25;
                this.columnSpinosadA.MaxLength = 25;
                this.columnSpinosadD.MaxLength = 25;
                this.columnSpiromesifen.MaxLength = 25;
                this.columnSpirotetramat.MaxLength = 25;
                this.columnSpiroxamine.MaxLength = 25;
                this.columnTebuconazole.MaxLength = 25;
                this.columnThiacloprid.MaxLength = 25;
                this.columnThiamethoxam.MaxLength = 25;
                this.columnTrifloxystrobin.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARow NewPesticidesDATARow() {
                return ((PesticidesDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PesticidesDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PesticidesDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PesticidesDATARowChanged != null)) {
                    this.PesticidesDATARowChanged(this, new PesticidesDATARowChangeEvent(((PesticidesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PesticidesDATARowChanging != null)) {
                    this.PesticidesDATARowChanging(this, new PesticidesDATARowChangeEvent(((PesticidesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PesticidesDATARowDeleted != null)) {
                    this.PesticidesDATARowDeleted(this, new PesticidesDATARowChangeEvent(((PesticidesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PesticidesDATARowDeleting != null)) {
                    this.PesticidesDATARowDeleting(this, new PesticidesDATARowChangeEvent(((PesticidesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePesticidesDATARow(PesticidesDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PesticidesDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PotencyDATADataTable : global::System.Data.TypedTableBase<PotencyDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSampleId;
            
            private global::System.Data.DataColumn columnPotencyID;
            
            private global::System.Data.DataColumn columnCBDV;
            
            private global::System.Data.DataColumn columnCBD;
            
            private global::System.Data.DataColumn columnCBG;
            
            private global::System.Data.DataColumn columnTHCV;
            
            private global::System.Data.DataColumn columnCBDA;
            
            private global::System.Data.DataColumn columnCBN;
            
            private global::System.Data.DataColumn columnCBGA;
            
            private global::System.Data.DataColumn columnD9THC;
            
            private global::System.Data.DataColumn columnD8THC;
            
            private global::System.Data.DataColumn columnTHCA;
            
            private global::System.Data.DataColumn columnCBC;
            
            private global::System.Data.DataColumn columnDRYWEIGHT;
            
            private global::System.Data.DataColumn columnHPLCWEIGHT;
            
            private global::System.Data.DataColumn columnWETWEIGHT;
            
            private global::System.Data.DataColumn columnTargetTHC;
            
            private global::System.Data.DataColumn columnTargetCBD;
            
            private global::System.Data.DataColumn columnCBDVP;
            
            private global::System.Data.DataColumn columnCBDP;
            
            private global::System.Data.DataColumn columnCBGP;
            
            private global::System.Data.DataColumn columnTHCVP;
            
            private global::System.Data.DataColumn columnCBDAP;
            
            private global::System.Data.DataColumn columnCBNP;
            
            private global::System.Data.DataColumn columnCBGAP;
            
            private global::System.Data.DataColumn columnD9THCP;
            
            private global::System.Data.DataColumn columnD8THCP;
            
            private global::System.Data.DataColumn columnTHCAP;
            
            private global::System.Data.DataColumn columnCBCP;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnTEST;
            
            private global::System.Data.DataColumn columnTotalTHC;
            
            private global::System.Data.DataColumn columnTotalCBD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATADataTable() {
                this.TableName = "PotencyDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PotencyDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PotencyDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIdColumn {
                get {
                    return this.columnSampleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PotencyIDColumn {
                get {
                    return this.columnPotencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVColumn {
                get {
                    return this.columnCBDV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDColumn {
                get {
                    return this.columnCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGColumn {
                get {
                    return this.columnCBG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVColumn {
                get {
                    return this.columnTHCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAColumn {
                get {
                    return this.columnCBDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNColumn {
                get {
                    return this.columnCBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAColumn {
                get {
                    return this.columnCBGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCColumn {
                get {
                    return this.columnD9THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCColumn {
                get {
                    return this.columnD8THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAColumn {
                get {
                    return this.columnTHCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCColumn {
                get {
                    return this.columnCBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DRYWEIGHTColumn {
                get {
                    return this.columnDRYWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HPLCWEIGHTColumn {
                get {
                    return this.columnHPLCWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WETWEIGHTColumn {
                get {
                    return this.columnWETWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TargetTHCColumn {
                get {
                    return this.columnTargetTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TargetCBDColumn {
                get {
                    return this.columnTargetCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVPColumn {
                get {
                    return this.columnCBDVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDPColumn {
                get {
                    return this.columnCBDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGPColumn {
                get {
                    return this.columnCBGP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVPColumn {
                get {
                    return this.columnTHCVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAPColumn {
                get {
                    return this.columnCBDAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNPColumn {
                get {
                    return this.columnCBNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAPColumn {
                get {
                    return this.columnCBGAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCPColumn {
                get {
                    return this.columnD9THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCPColumn {
                get {
                    return this.columnD8THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAPColumn {
                get {
                    return this.columnTHCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCPColumn {
                get {
                    return this.columnCBCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TESTColumn {
                get {
                    return this.columnTEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTHCColumn {
                get {
                    return this.columnTotalTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalCBDColumn {
                get {
                    return this.columnTotalCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATARow this[int index] {
                get {
                    return ((PotencyDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PotencyDATARowChangeEventHandler PotencyDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PotencyDATARowChangeEventHandler PotencyDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PotencyDATARowChangeEventHandler PotencyDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PotencyDATARowChangeEventHandler PotencyDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPotencyDATARow(PotencyDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATARow AddPotencyDATARow(
                        string SampleId, 
                        string PotencyID, 
                        double CBDV, 
                        double CBD, 
                        double CBG, 
                        double THCV, 
                        double CBDA, 
                        double CBN, 
                        double CBGA, 
                        double D9THC, 
                        double D8THC, 
                        double THCA, 
                        double CBC, 
                        double DRYWEIGHT, 
                        double HPLCWEIGHT, 
                        double WETWEIGHT, 
                        double TargetTHC, 
                        double TargetCBD, 
                        string CBDVP, 
                        string CBDP, 
                        string CBGP, 
                        string THCVP, 
                        string CBDAP, 
                        string CBNP, 
                        string CBGAP, 
                        string D9THCP, 
                        string D8THCP, 
                        string THCAP, 
                        string CBCP, 
                        string METHOD, 
                        string TEST, 
                        string TotalTHC, 
                        string TotalCBD) {
                PotencyDATARow rowPotencyDATARow = ((PotencyDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SampleId,
                        PotencyID,
                        CBDV,
                        CBD,
                        CBG,
                        THCV,
                        CBDA,
                        CBN,
                        CBGA,
                        D9THC,
                        D8THC,
                        THCA,
                        CBC,
                        DRYWEIGHT,
                        HPLCWEIGHT,
                        WETWEIGHT,
                        TargetTHC,
                        TargetCBD,
                        CBDVP,
                        CBDP,
                        CBGP,
                        THCVP,
                        CBDAP,
                        CBNP,
                        CBGAP,
                        D9THCP,
                        D8THCP,
                        THCAP,
                        CBCP,
                        METHOD,
                        TEST,
                        TotalTHC,
                        TotalCBD};
                rowPotencyDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPotencyDATARow);
                return rowPotencyDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PotencyDATADataTable cln = ((PotencyDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PotencyDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSampleId = base.Columns["SampleId"];
                this.columnPotencyID = base.Columns["PotencyID"];
                this.columnCBDV = base.Columns["CBDV"];
                this.columnCBD = base.Columns["CBD"];
                this.columnCBG = base.Columns["CBG"];
                this.columnTHCV = base.Columns["THCV"];
                this.columnCBDA = base.Columns["CBDA"];
                this.columnCBN = base.Columns["CBN"];
                this.columnCBGA = base.Columns["CBGA"];
                this.columnD9THC = base.Columns["D9THC"];
                this.columnD8THC = base.Columns["D8THC"];
                this.columnTHCA = base.Columns["THCA"];
                this.columnCBC = base.Columns["CBC"];
                this.columnDRYWEIGHT = base.Columns["DRYWEIGHT"];
                this.columnHPLCWEIGHT = base.Columns["HPLCWEIGHT"];
                this.columnWETWEIGHT = base.Columns["WETWEIGHT"];
                this.columnTargetTHC = base.Columns["TargetTHC"];
                this.columnTargetCBD = base.Columns["TargetCBD"];
                this.columnCBDVP = base.Columns["CBDVP"];
                this.columnCBDP = base.Columns["CBDP"];
                this.columnCBGP = base.Columns["CBGP"];
                this.columnTHCVP = base.Columns["THCVP"];
                this.columnCBDAP = base.Columns["CBDAP"];
                this.columnCBNP = base.Columns["CBNP"];
                this.columnCBGAP = base.Columns["CBGAP"];
                this.columnD9THCP = base.Columns["D9THCP"];
                this.columnD8THCP = base.Columns["D8THCP"];
                this.columnTHCAP = base.Columns["THCAP"];
                this.columnCBCP = base.Columns["CBCP"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnTEST = base.Columns["TEST"];
                this.columnTotalTHC = base.Columns["TotalTHC"];
                this.columnTotalCBD = base.Columns["TotalCBD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSampleId = new global::System.Data.DataColumn("SampleId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleId);
                this.columnPotencyID = new global::System.Data.DataColumn("PotencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotencyID);
                this.columnCBDV = new global::System.Data.DataColumn("CBDV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDV);
                this.columnCBD = new global::System.Data.DataColumn("CBD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBD);
                this.columnCBG = new global::System.Data.DataColumn("CBG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBG);
                this.columnTHCV = new global::System.Data.DataColumn("THCV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCV);
                this.columnCBDA = new global::System.Data.DataColumn("CBDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDA);
                this.columnCBN = new global::System.Data.DataColumn("CBN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBN);
                this.columnCBGA = new global::System.Data.DataColumn("CBGA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGA);
                this.columnD9THC = new global::System.Data.DataColumn("D9THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THC);
                this.columnD8THC = new global::System.Data.DataColumn("D8THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THC);
                this.columnTHCA = new global::System.Data.DataColumn("THCA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCA);
                this.columnCBC = new global::System.Data.DataColumn("CBC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBC);
                this.columnDRYWEIGHT = new global::System.Data.DataColumn("DRYWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRYWEIGHT);
                this.columnHPLCWEIGHT = new global::System.Data.DataColumn("HPLCWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHPLCWEIGHT);
                this.columnWETWEIGHT = new global::System.Data.DataColumn("WETWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWETWEIGHT);
                this.columnTargetTHC = new global::System.Data.DataColumn("TargetTHC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetTHC);
                this.columnTargetCBD = new global::System.Data.DataColumn("TargetCBD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCBD);
                this.columnCBDVP = new global::System.Data.DataColumn("CBDVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDVP);
                this.columnCBDP = new global::System.Data.DataColumn("CBDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDP);
                this.columnCBGP = new global::System.Data.DataColumn("CBGP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGP);
                this.columnTHCVP = new global::System.Data.DataColumn("THCVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCVP);
                this.columnCBDAP = new global::System.Data.DataColumn("CBDAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDAP);
                this.columnCBNP = new global::System.Data.DataColumn("CBNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBNP);
                this.columnCBGAP = new global::System.Data.DataColumn("CBGAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGAP);
                this.columnD9THCP = new global::System.Data.DataColumn("D9THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THCP);
                this.columnD8THCP = new global::System.Data.DataColumn("D8THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THCP);
                this.columnTHCAP = new global::System.Data.DataColumn("THCAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCAP);
                this.columnCBCP = new global::System.Data.DataColumn("CBCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBCP);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnTEST = new global::System.Data.DataColumn("TEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEST);
                this.columnTotalTHC = new global::System.Data.DataColumn("TotalTHC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTHC);
                this.columnTotalCBD = new global::System.Data.DataColumn("TotalCBD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCBD);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSampleId.AllowDBNull = false;
                this.columnSampleId.MaxLength = 10;
                this.columnPotencyID.MaxLength = 10;
                this.columnCBDVP.MaxLength = 50;
                this.columnCBDP.MaxLength = 50;
                this.columnCBGP.MaxLength = 50;
                this.columnTHCVP.MaxLength = 50;
                this.columnCBDAP.MaxLength = 50;
                this.columnCBNP.MaxLength = 50;
                this.columnCBGAP.MaxLength = 50;
                this.columnD9THCP.MaxLength = 50;
                this.columnD8THCP.MaxLength = 50;
                this.columnTHCAP.MaxLength = 50;
                this.columnCBCP.MaxLength = 50;
                this.columnMETHOD.MaxLength = 50;
                this.columnTEST.MaxLength = 50;
                this.columnTotalTHC.MaxLength = 50;
                this.columnTotalCBD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATARow NewPotencyDATARow() {
                return ((PotencyDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PotencyDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PotencyDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PotencyDATARowChanged != null)) {
                    this.PotencyDATARowChanged(this, new PotencyDATARowChangeEvent(((PotencyDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PotencyDATARowChanging != null)) {
                    this.PotencyDATARowChanging(this, new PotencyDATARowChangeEvent(((PotencyDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PotencyDATARowDeleted != null)) {
                    this.PotencyDATARowDeleted(this, new PotencyDATARowChangeEvent(((PotencyDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PotencyDATARowDeleting != null)) {
                    this.PotencyDATARowDeleting(this, new PotencyDATARowChangeEvent(((PotencyDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePotencyDATARow(PotencyDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PotencyDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SolventsDATADataTable : global::System.Data.TypedTableBase<SolventsDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnSampleID;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnSolventInputWeight;
            
            private global::System.Data.DataColumn columnDichloroethane;
            
            private global::System.Data.DataColumn columnBenzene;
            
            private global::System.Data.DataColumn columnChloroform;
            
            private global::System.Data.DataColumn columnEthyleneOxide;
            
            private global::System.Data.DataColumn columnMethyleneChloride;
            
            private global::System.Data.DataColumn columnTrichloroethylene;
            
            private global::System.Data.DataColumn columnAcetone;
            
            private global::System.Data.DataColumn columnAcetonitrile;
            
            private global::System.Data.DataColumn columnButane;
            
            private global::System.Data.DataColumn columnEthanol;
            
            private global::System.Data.DataColumn columnEthylAcetate;
            
            private global::System.Data.DataColumn columnEthylEther;
            
            private global::System.Data.DataColumn columnHeptane;
            
            private global::System.Data.DataColumn columnHexane;
            
            private global::System.Data.DataColumn columnIsopropylAlcohol;
            
            private global::System.Data.DataColumn columnMethanol;
            
            private global::System.Data.DataColumn columnPentane;
            
            private global::System.Data.DataColumn columnPropane;
            
            private global::System.Data.DataColumn columnToluene;
            
            private global::System.Data.DataColumn columnorthoXylene;
            
            private global::System.Data.DataColumn columnmetaXylene;
            
            private global::System.Data.DataColumn columnparaXylene;
            
            private global::System.Data.DataColumn columnIsobutane;
            
            private global::System.Data.DataColumn columnnHexane;
            
            private global::System.Data.DataColumn columnDiethylEther;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATADataTable() {
                this.TableName = "SolventsDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SolventsDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SolventsDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIDColumn {
                get {
                    return this.columnSampleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SolventInputWeightColumn {
                get {
                    return this.columnSolventInputWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DichloroethaneColumn {
                get {
                    return this.columnDichloroethane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BenzeneColumn {
                get {
                    return this.columnBenzene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChloroformColumn {
                get {
                    return this.columnChloroform;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthyleneOxideColumn {
                get {
                    return this.columnEthyleneOxide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethyleneChlorideColumn {
                get {
                    return this.columnMethyleneChloride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrichloroethyleneColumn {
                get {
                    return this.columnTrichloroethylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetoneColumn {
                get {
                    return this.columnAcetone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetonitrileColumn {
                get {
                    return this.columnAcetonitrile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ButaneColumn {
                get {
                    return this.columnButane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthanolColumn {
                get {
                    return this.columnEthanol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthylAcetateColumn {
                get {
                    return this.columnEthylAcetate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthylEtherColumn {
                get {
                    return this.columnEthylEther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HeptaneColumn {
                get {
                    return this.columnHeptane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HexaneColumn {
                get {
                    return this.columnHexane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsopropylAlcoholColumn {
                get {
                    return this.columnIsopropylAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethanolColumn {
                get {
                    return this.columnMethanol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PentaneColumn {
                get {
                    return this.columnPentane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropaneColumn {
                get {
                    return this.columnPropane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TolueneColumn {
                get {
                    return this.columnToluene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn orthoXyleneColumn {
                get {
                    return this.columnorthoXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn metaXyleneColumn {
                get {
                    return this.columnmetaXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn paraXyleneColumn {
                get {
                    return this.columnparaXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsobutaneColumn {
                get {
                    return this.columnIsobutane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nHexaneColumn {
                get {
                    return this.columnnHexane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiethylEtherColumn {
                get {
                    return this.columnDiethylEther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARow this[int index] {
                get {
                    return ((SolventsDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventsDATARowChangeEventHandler SolventsDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventsDATARowChangeEventHandler SolventsDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventsDATARowChangeEventHandler SolventsDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventsDATARowChangeEventHandler SolventsDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSolventsDATARow(SolventsDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARow AddSolventsDATARow(
                        string Date, 
                        string SampleID, 
                        string GCMSID, 
                        string SolventInputWeight, 
                        string Dichloroethane, 
                        string Benzene, 
                        string Chloroform, 
                        string EthyleneOxide, 
                        string MethyleneChloride, 
                        string Trichloroethylene, 
                        string Acetone, 
                        string Acetonitrile, 
                        string Butane, 
                        string Ethanol, 
                        string EthylAcetate, 
                        string EthylEther, 
                        string Heptane, 
                        string Hexane, 
                        string IsopropylAlcohol, 
                        string Methanol, 
                        string Pentane, 
                        string Propane, 
                        string Toluene, 
                        string orthoXylene, 
                        string metaXylene, 
                        string paraXylene, 
                        string Isobutane, 
                        string nHexane, 
                        string DiethylEther) {
                SolventsDATARow rowSolventsDATARow = ((SolventsDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        SampleID,
                        GCMSID,
                        SolventInputWeight,
                        Dichloroethane,
                        Benzene,
                        Chloroform,
                        EthyleneOxide,
                        MethyleneChloride,
                        Trichloroethylene,
                        Acetone,
                        Acetonitrile,
                        Butane,
                        Ethanol,
                        EthylAcetate,
                        EthylEther,
                        Heptane,
                        Hexane,
                        IsopropylAlcohol,
                        Methanol,
                        Pentane,
                        Propane,
                        Toluene,
                        orthoXylene,
                        metaXylene,
                        paraXylene,
                        Isobutane,
                        nHexane,
                        DiethylEther};
                rowSolventsDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSolventsDATARow);
                return rowSolventsDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARow FindByID(int ID) {
                return ((SolventsDATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SolventsDATADataTable cln = ((SolventsDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SolventsDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDate = base.Columns["Date"];
                this.columnSampleID = base.Columns["SampleID"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnSolventInputWeight = base.Columns["SolventInputWeight"];
                this.columnDichloroethane = base.Columns["Dichloroethane"];
                this.columnBenzene = base.Columns["Benzene"];
                this.columnChloroform = base.Columns["Chloroform"];
                this.columnEthyleneOxide = base.Columns["EthyleneOxide"];
                this.columnMethyleneChloride = base.Columns["MethyleneChloride"];
                this.columnTrichloroethylene = base.Columns["Trichloroethylene"];
                this.columnAcetone = base.Columns["Acetone"];
                this.columnAcetonitrile = base.Columns["Acetonitrile"];
                this.columnButane = base.Columns["Butane"];
                this.columnEthanol = base.Columns["Ethanol"];
                this.columnEthylAcetate = base.Columns["EthylAcetate"];
                this.columnEthylEther = base.Columns["EthylEther"];
                this.columnHeptane = base.Columns["Heptane"];
                this.columnHexane = base.Columns["Hexane"];
                this.columnIsopropylAlcohol = base.Columns["IsopropylAlcohol"];
                this.columnMethanol = base.Columns["Methanol"];
                this.columnPentane = base.Columns["Pentane"];
                this.columnPropane = base.Columns["Propane"];
                this.columnToluene = base.Columns["Toluene"];
                this.columnorthoXylene = base.Columns["orthoXylene"];
                this.columnmetaXylene = base.Columns["metaXylene"];
                this.columnparaXylene = base.Columns["paraXylene"];
                this.columnIsobutane = base.Columns["Isobutane"];
                this.columnnHexane = base.Columns["nHexane"];
                this.columnDiethylEther = base.Columns["DiethylEther"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnSampleID = new global::System.Data.DataColumn("SampleID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleID);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnSolventInputWeight = new global::System.Data.DataColumn("SolventInputWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolventInputWeight);
                this.columnDichloroethane = new global::System.Data.DataColumn("Dichloroethane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDichloroethane);
                this.columnBenzene = new global::System.Data.DataColumn("Benzene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenzene);
                this.columnChloroform = new global::System.Data.DataColumn("Chloroform", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChloroform);
                this.columnEthyleneOxide = new global::System.Data.DataColumn("EthyleneOxide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthyleneOxide);
                this.columnMethyleneChloride = new global::System.Data.DataColumn("MethyleneChloride", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethyleneChloride);
                this.columnTrichloroethylene = new global::System.Data.DataColumn("Trichloroethylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrichloroethylene);
                this.columnAcetone = new global::System.Data.DataColumn("Acetone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetone);
                this.columnAcetonitrile = new global::System.Data.DataColumn("Acetonitrile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetonitrile);
                this.columnButane = new global::System.Data.DataColumn("Butane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnButane);
                this.columnEthanol = new global::System.Data.DataColumn("Ethanol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthanol);
                this.columnEthylAcetate = new global::System.Data.DataColumn("EthylAcetate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthylAcetate);
                this.columnEthylEther = new global::System.Data.DataColumn("EthylEther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthylEther);
                this.columnHeptane = new global::System.Data.DataColumn("Heptane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeptane);
                this.columnHexane = new global::System.Data.DataColumn("Hexane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHexane);
                this.columnIsopropylAlcohol = new global::System.Data.DataColumn("IsopropylAlcohol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsopropylAlcohol);
                this.columnMethanol = new global::System.Data.DataColumn("Methanol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethanol);
                this.columnPentane = new global::System.Data.DataColumn("Pentane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPentane);
                this.columnPropane = new global::System.Data.DataColumn("Propane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropane);
                this.columnToluene = new global::System.Data.DataColumn("Toluene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToluene);
                this.columnorthoXylene = new global::System.Data.DataColumn("orthoXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorthoXylene);
                this.columnmetaXylene = new global::System.Data.DataColumn("metaXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmetaXylene);
                this.columnparaXylene = new global::System.Data.DataColumn("paraXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparaXylene);
                this.columnIsobutane = new global::System.Data.DataColumn("Isobutane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsobutane);
                this.columnnHexane = new global::System.Data.DataColumn("nHexane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnHexane);
                this.columnDiethylEther = new global::System.Data.DataColumn("DiethylEther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiethylEther);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDate.MaxLength = 15;
                this.columnSampleID.MaxLength = 25;
                this.columnGCMSID.MaxLength = 25;
                this.columnSolventInputWeight.MaxLength = 25;
                this.columnDichloroethane.MaxLength = 2147483647;
                this.columnBenzene.MaxLength = 2147483647;
                this.columnChloroform.MaxLength = 2147483647;
                this.columnEthyleneOxide.MaxLength = 2147483647;
                this.columnMethyleneChloride.MaxLength = 2147483647;
                this.columnTrichloroethylene.MaxLength = 2147483647;
                this.columnAcetone.MaxLength = 2147483647;
                this.columnAcetonitrile.MaxLength = 2147483647;
                this.columnButane.MaxLength = 2147483647;
                this.columnEthanol.MaxLength = 2147483647;
                this.columnEthylAcetate.MaxLength = 2147483647;
                this.columnEthylEther.MaxLength = 2147483647;
                this.columnHeptane.MaxLength = 2147483647;
                this.columnHexane.MaxLength = 2147483647;
                this.columnIsopropylAlcohol.MaxLength = 2147483647;
                this.columnMethanol.MaxLength = 2147483647;
                this.columnPentane.MaxLength = 2147483647;
                this.columnPropane.MaxLength = 2147483647;
                this.columnToluene.MaxLength = 2147483647;
                this.columnorthoXylene.MaxLength = 2147483647;
                this.columnmetaXylene.MaxLength = 2147483647;
                this.columnparaXylene.MaxLength = 2147483647;
                this.columnIsobutane.MaxLength = 2147483647;
                this.columnnHexane.MaxLength = 2147483647;
                this.columnDiethylEther.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARow NewSolventsDATARow() {
                return ((SolventsDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SolventsDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SolventsDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SolventsDATARowChanged != null)) {
                    this.SolventsDATARowChanged(this, new SolventsDATARowChangeEvent(((SolventsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SolventsDATARowChanging != null)) {
                    this.SolventsDATARowChanging(this, new SolventsDATARowChangeEvent(((SolventsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SolventsDATARowDeleted != null)) {
                    this.SolventsDATARowDeleted(this, new SolventsDATARowChangeEvent(((SolventsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SolventsDATARowDeleting != null)) {
                    this.SolventsDATARowDeleting(this, new SolventsDATARowChangeEvent(((SolventsDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSolventsDATARow(SolventsDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SolventsDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class terpenesDATADataTable : global::System.Data.TypedTableBase<terpenesDATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnSampleID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnTerpWT;
            
            private global::System.Data.DataColumn columnaPinene;
            
            private global::System.Data.DataColumn columnCamphene;
            
            private global::System.Data.DataColumn columnbMyrcene;
            
            private global::System.Data.DataColumn columnbPinene;
            
            private global::System.Data.DataColumn columnd3Carene;
            
            private global::System.Data.DataColumn columnaTerpinene;
            
            private global::System.Data.DataColumn columnOcimene;
            
            private global::System.Data.DataColumn columnLimonene;
            
            private global::System.Data.DataColumn columnpCymene;
            
            private global::System.Data.DataColumn columnyTerpinene;
            
            private global::System.Data.DataColumn columnTerpinolene;
            
            private global::System.Data.DataColumn columnLinalool;
            
            private global::System.Data.DataColumn columnIsopulegol;
            
            private global::System.Data.DataColumn columnGeraniol;
            
            private global::System.Data.DataColumn columnbCaryophyllene;
            
            private global::System.Data.DataColumn columnaHumulene;
            
            private global::System.Data.DataColumn columnNerolidol;
            
            private global::System.Data.DataColumn columnGuaiol;
            
            private global::System.Data.DataColumn columnaBisabolol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATADataTable() {
                this.TableName = "terpenesDATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal terpenesDATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected terpenesDATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIDColumn {
                get {
                    return this.columnSampleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpWTColumn {
                get {
                    return this.columnTerpWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aPineneColumn {
                get {
                    return this.columnaPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CampheneColumn {
                get {
                    return this.columnCamphene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bMyrceneColumn {
                get {
                    return this.columnbMyrcene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bPineneColumn {
                get {
                    return this.columnbPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn d3CareneColumn {
                get {
                    return this.columnd3Carene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aTerpineneColumn {
                get {
                    return this.columnaTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OcimeneColumn {
                get {
                    return this.columnOcimene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LimoneneColumn {
                get {
                    return this.columnLimonene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pCymeneColumn {
                get {
                    return this.columnpCymene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn yTerpineneColumn {
                get {
                    return this.columnyTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpinoleneColumn {
                get {
                    return this.columnTerpinolene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LinaloolColumn {
                get {
                    return this.columnLinalool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsopulegolColumn {
                get {
                    return this.columnIsopulegol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GeraniolColumn {
                get {
                    return this.columnGeraniol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bCaryophylleneColumn {
                get {
                    return this.columnbCaryophyllene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aHumuleneColumn {
                get {
                    return this.columnaHumulene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NerolidolColumn {
                get {
                    return this.columnNerolidol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuaiolColumn {
                get {
                    return this.columnGuaiol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aBisabololColumn {
                get {
                    return this.columnaBisabolol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARow this[int index] {
                get {
                    return ((terpenesDATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event terpenesDATARowChangeEventHandler terpenesDATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event terpenesDATARowChangeEventHandler terpenesDATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event terpenesDATARowChangeEventHandler terpenesDATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event terpenesDATARowChangeEventHandler terpenesDATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddterpenesDATARow(terpenesDATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARow AddterpenesDATARow(
                        string Date, 
                        string SampleID, 
                        string Method, 
                        string Technique, 
                        string GCMSID, 
                        string TerpWT, 
                        string aPinene, 
                        string Camphene, 
                        string bMyrcene, 
                        string bPinene, 
                        string d3Carene, 
                        string aTerpinene, 
                        string Ocimene, 
                        string Limonene, 
                        string pCymene, 
                        string yTerpinene, 
                        string Terpinolene, 
                        string Linalool, 
                        string Isopulegol, 
                        string Geraniol, 
                        string bCaryophyllene, 
                        string aHumulene, 
                        string Nerolidol, 
                        string Guaiol, 
                        string aBisabolol) {
                terpenesDATARow rowterpenesDATARow = ((terpenesDATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        SampleID,
                        Method,
                        Technique,
                        GCMSID,
                        TerpWT,
                        aPinene,
                        Camphene,
                        bMyrcene,
                        bPinene,
                        d3Carene,
                        aTerpinene,
                        Ocimene,
                        Limonene,
                        pCymene,
                        yTerpinene,
                        Terpinolene,
                        Linalool,
                        Isopulegol,
                        Geraniol,
                        bCaryophyllene,
                        aHumulene,
                        Nerolidol,
                        Guaiol,
                        aBisabolol};
                rowterpenesDATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowterpenesDATARow);
                return rowterpenesDATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARow FindByID(int ID) {
                return ((terpenesDATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                terpenesDATADataTable cln = ((terpenesDATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new terpenesDATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDate = base.Columns["Date"];
                this.columnSampleID = base.Columns["SampleID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnTerpWT = base.Columns["TerpWT"];
                this.columnaPinene = base.Columns["aPinene"];
                this.columnCamphene = base.Columns["Camphene"];
                this.columnbMyrcene = base.Columns["bMyrcene"];
                this.columnbPinene = base.Columns["bPinene"];
                this.columnd3Carene = base.Columns["d3Carene"];
                this.columnaTerpinene = base.Columns["aTerpinene"];
                this.columnOcimene = base.Columns["Ocimene"];
                this.columnLimonene = base.Columns["Limonene"];
                this.columnpCymene = base.Columns["pCymene"];
                this.columnyTerpinene = base.Columns["yTerpinene"];
                this.columnTerpinolene = base.Columns["Terpinolene"];
                this.columnLinalool = base.Columns["Linalool"];
                this.columnIsopulegol = base.Columns["Isopulegol"];
                this.columnGeraniol = base.Columns["Geraniol"];
                this.columnbCaryophyllene = base.Columns["bCaryophyllene"];
                this.columnaHumulene = base.Columns["aHumulene"];
                this.columnNerolidol = base.Columns["Nerolidol"];
                this.columnGuaiol = base.Columns["Guaiol"];
                this.columnaBisabolol = base.Columns["aBisabolol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnSampleID = new global::System.Data.DataColumn("SampleID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnTerpWT = new global::System.Data.DataColumn("TerpWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpWT);
                this.columnaPinene = new global::System.Data.DataColumn("aPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaPinene);
                this.columnCamphene = new global::System.Data.DataColumn("Camphene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCamphene);
                this.columnbMyrcene = new global::System.Data.DataColumn("bMyrcene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbMyrcene);
                this.columnbPinene = new global::System.Data.DataColumn("bPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbPinene);
                this.columnd3Carene = new global::System.Data.DataColumn("d3Carene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnd3Carene);
                this.columnaTerpinene = new global::System.Data.DataColumn("aTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaTerpinene);
                this.columnOcimene = new global::System.Data.DataColumn("Ocimene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcimene);
                this.columnLimonene = new global::System.Data.DataColumn("Limonene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimonene);
                this.columnpCymene = new global::System.Data.DataColumn("pCymene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpCymene);
                this.columnyTerpinene = new global::System.Data.DataColumn("yTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyTerpinene);
                this.columnTerpinolene = new global::System.Data.DataColumn("Terpinolene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpinolene);
                this.columnLinalool = new global::System.Data.DataColumn("Linalool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinalool);
                this.columnIsopulegol = new global::System.Data.DataColumn("Isopulegol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsopulegol);
                this.columnGeraniol = new global::System.Data.DataColumn("Geraniol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeraniol);
                this.columnbCaryophyllene = new global::System.Data.DataColumn("bCaryophyllene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbCaryophyllene);
                this.columnaHumulene = new global::System.Data.DataColumn("aHumulene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaHumulene);
                this.columnNerolidol = new global::System.Data.DataColumn("Nerolidol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNerolidol);
                this.columnGuaiol = new global::System.Data.DataColumn("Guaiol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuaiol);
                this.columnaBisabolol = new global::System.Data.DataColumn("aBisabolol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaBisabolol);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDate.MaxLength = 50;
                this.columnSampleID.MaxLength = 50;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnGCMSID.MaxLength = 50;
                this.columnTerpWT.MaxLength = 50;
                this.columnaPinene.MaxLength = 50;
                this.columnCamphene.MaxLength = 50;
                this.columnbMyrcene.MaxLength = 50;
                this.columnbPinene.MaxLength = 50;
                this.columnd3Carene.MaxLength = 50;
                this.columnaTerpinene.MaxLength = 50;
                this.columnOcimene.MaxLength = 50;
                this.columnLimonene.MaxLength = 50;
                this.columnpCymene.MaxLength = 50;
                this.columnyTerpinene.MaxLength = 50;
                this.columnTerpinolene.MaxLength = 50;
                this.columnLinalool.MaxLength = 50;
                this.columnIsopulegol.MaxLength = 50;
                this.columnGeraniol.MaxLength = 50;
                this.columnbCaryophyllene.MaxLength = 50;
                this.columnaHumulene.MaxLength = 50;
                this.columnNerolidol.MaxLength = 50;
                this.columnGuaiol.MaxLength = 50;
                this.columnaBisabolol.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARow NewterpenesDATARow() {
                return ((terpenesDATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new terpenesDATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(terpenesDATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.terpenesDATARowChanged != null)) {
                    this.terpenesDATARowChanged(this, new terpenesDATARowChangeEvent(((terpenesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.terpenesDATARowChanging != null)) {
                    this.terpenesDATARowChanging(this, new terpenesDATARowChangeEvent(((terpenesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.terpenesDATARowDeleted != null)) {
                    this.terpenesDATARowDeleted(this, new terpenesDATARowChangeEvent(((terpenesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.terpenesDATARowDeleting != null)) {
                    this.terpenesDATARowDeleting(this, new terpenesDATARowChangeEvent(((terpenesDATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveterpenesDATARow(terpenesDATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "terpenesDATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class wADATADataTable : global::System.Data.TypedTableBase<wADATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnSampleID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnAw;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATADataTable() {
                this.TableName = "wADATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal wADATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected wADATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIDColumn {
                get {
                    return this.columnSampleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AwColumn {
                get {
                    return this.columnAw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARow this[int index] {
                get {
                    return ((wADATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADATARowChangeEventHandler wADATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADATARowChangeEventHandler wADATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADATARowChangeEventHandler wADATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADATARowChangeEventHandler wADATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddwADATARow(wADATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARow AddwADATARow(string Date, string SampleID, string Method, string Technique, string Aw) {
                wADATARow rowwADATARow = ((wADATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        SampleID,
                        Method,
                        Technique,
                        Aw};
                rowwADATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowwADATARow);
                return rowwADATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARow FindByID(int ID) {
                return ((wADATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                wADATADataTable cln = ((wADATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new wADATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDate = base.Columns["Date"];
                this.columnSampleID = base.Columns["SampleID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnAw = base.Columns["Aw"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnSampleID = new global::System.Data.DataColumn("SampleID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnAw = new global::System.Data.DataColumn("Aw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAw);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDate.MaxLength = 50;
                this.columnSampleID.MaxLength = 50;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnAw.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARow NewwADATARow() {
                return ((wADATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new wADATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(wADATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.wADATARowChanged != null)) {
                    this.wADATARowChanged(this, new wADATARowChangeEvent(((wADATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.wADATARowChanging != null)) {
                    this.wADATARowChanging(this, new wADATARowChangeEvent(((wADATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.wADATARowDeleted != null)) {
                    this.wADATARowDeleted(this, new wADATARowChangeEvent(((wADATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.wADATARowDeleting != null)) {
                    this.wADATARowDeleting(this, new wADATARowChangeEvent(((wADATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovewADATARow(wADATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "wADATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataDTDataTable : global::System.Data.TypedTableBase<dataDTRow> {
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnPotencyID;
            
            private global::System.Data.DataColumn columnCBDVP;
            
            private global::System.Data.DataColumn columnCBDP;
            
            private global::System.Data.DataColumn columnCBGP;
            
            private global::System.Data.DataColumn columnTHCVP;
            
            private global::System.Data.DataColumn columnCBDAP;
            
            private global::System.Data.DataColumn columnCBNP;
            
            private global::System.Data.DataColumn columnCBGAP;
            
            private global::System.Data.DataColumn columnD9THCP;
            
            private global::System.Data.DataColumn columnD8THCP;
            
            private global::System.Data.DataColumn columnTHCAP;
            
            private global::System.Data.DataColumn columnCBCP;
            
            private global::System.Data.DataColumn columnTEST;
            
            private global::System.Data.DataColumn columnTotalTHC;
            
            private global::System.Data.DataColumn columnTotalCBD;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnWETWEIGHT;
            
            private global::System.Data.DataColumn columnCBDV;
            
            private global::System.Data.DataColumn columnCBD;
            
            private global::System.Data.DataColumn columnCBG;
            
            private global::System.Data.DataColumn columnTHCV;
            
            private global::System.Data.DataColumn columnCBDA;
            
            private global::System.Data.DataColumn columnCBN;
            
            private global::System.Data.DataColumn columnCBGA;
            
            private global::System.Data.DataColumn columnD9THC;
            
            private global::System.Data.DataColumn columnD8THC;
            
            private global::System.Data.DataColumn columnTHCA;
            
            private global::System.Data.DataColumn columnCBC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTDataTable() {
                this.TableName = "dataDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dataDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected dataDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PotencyIDColumn {
                get {
                    return this.columnPotencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVPColumn {
                get {
                    return this.columnCBDVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDPColumn {
                get {
                    return this.columnCBDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGPColumn {
                get {
                    return this.columnCBGP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVPColumn {
                get {
                    return this.columnTHCVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAPColumn {
                get {
                    return this.columnCBDAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNPColumn {
                get {
                    return this.columnCBNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAPColumn {
                get {
                    return this.columnCBGAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCPColumn {
                get {
                    return this.columnD9THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCPColumn {
                get {
                    return this.columnD8THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAPColumn {
                get {
                    return this.columnTHCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCPColumn {
                get {
                    return this.columnCBCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TESTColumn {
                get {
                    return this.columnTEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTHCColumn {
                get {
                    return this.columnTotalTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalCBDColumn {
                get {
                    return this.columnTotalCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WETWEIGHTColumn {
                get {
                    return this.columnWETWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVColumn {
                get {
                    return this.columnCBDV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDColumn {
                get {
                    return this.columnCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGColumn {
                get {
                    return this.columnCBG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVColumn {
                get {
                    return this.columnTHCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAColumn {
                get {
                    return this.columnCBDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNColumn {
                get {
                    return this.columnCBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAColumn {
                get {
                    return this.columnCBGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCColumn {
                get {
                    return this.columnD9THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCColumn {
                get {
                    return this.columnD8THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAColumn {
                get {
                    return this.columnTHCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCColumn {
                get {
                    return this.columnCBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTRow this[int index] {
                get {
                    return ((dataDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dataDTRowChangeEventHandler dataDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dataDTRowChangeEventHandler dataDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dataDTRowChangeEventHandler dataDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dataDTRowChangeEventHandler dataDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AdddataDTRow(dataDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTRow AdddataDTRow(
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string PotencyID, 
                        string CBDVP, 
                        string CBDP, 
                        string CBGP, 
                        string THCVP, 
                        string CBDAP, 
                        string CBNP, 
                        string CBGAP, 
                        string D9THCP, 
                        string D8THCP, 
                        string THCAP, 
                        string CBCP, 
                        string TEST, 
                        string TotalTHC, 
                        string TotalCBD, 
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string METHOD, 
                        double WETWEIGHT, 
                        double CBDV, 
                        double CBD, 
                        double CBG, 
                        double THCV, 
                        double CBDA, 
                        double CBN, 
                        double CBGA, 
                        double D9THC, 
                        double D8THC, 
                        double THCA, 
                        double CBC) {
                dataDTRow rowdataDTRow = ((dataDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        PotencyID,
                        CBDVP,
                        CBDP,
                        CBGP,
                        THCVP,
                        CBDAP,
                        CBNP,
                        CBGAP,
                        D9THCP,
                        D8THCP,
                        THCAP,
                        CBCP,
                        TEST,
                        TotalTHC,
                        TotalCBD,
                        null,
                        DATE,
                        SAMPLEID,
                        METHOD,
                        WETWEIGHT,
                        CBDV,
                        CBD,
                        CBG,
                        THCV,
                        CBDA,
                        CBN,
                        CBGA,
                        D9THC,
                        D8THC,
                        THCA,
                        CBC};
                rowdataDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataDTRow);
                return rowdataDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dataDTDataTable cln = ((dataDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnPotencyID = base.Columns["PotencyID"];
                this.columnCBDVP = base.Columns["CBDVP"];
                this.columnCBDP = base.Columns["CBDP"];
                this.columnCBGP = base.Columns["CBGP"];
                this.columnTHCVP = base.Columns["THCVP"];
                this.columnCBDAP = base.Columns["CBDAP"];
                this.columnCBNP = base.Columns["CBNP"];
                this.columnCBGAP = base.Columns["CBGAP"];
                this.columnD9THCP = base.Columns["D9THCP"];
                this.columnD8THCP = base.Columns["D8THCP"];
                this.columnTHCAP = base.Columns["THCAP"];
                this.columnCBCP = base.Columns["CBCP"];
                this.columnTEST = base.Columns["TEST"];
                this.columnTotalTHC = base.Columns["TotalTHC"];
                this.columnTotalCBD = base.Columns["TotalCBD"];
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnWETWEIGHT = base.Columns["WETWEIGHT"];
                this.columnCBDV = base.Columns["CBDV"];
                this.columnCBD = base.Columns["CBD"];
                this.columnCBG = base.Columns["CBG"];
                this.columnTHCV = base.Columns["THCV"];
                this.columnCBDA = base.Columns["CBDA"];
                this.columnCBN = base.Columns["CBN"];
                this.columnCBGA = base.Columns["CBGA"];
                this.columnD9THC = base.Columns["D9THC"];
                this.columnD8THC = base.Columns["D8THC"];
                this.columnTHCA = base.Columns["THCA"];
                this.columnCBC = base.Columns["CBC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnPotencyID = new global::System.Data.DataColumn("PotencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotencyID);
                this.columnCBDVP = new global::System.Data.DataColumn("CBDVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDVP);
                this.columnCBDP = new global::System.Data.DataColumn("CBDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDP);
                this.columnCBGP = new global::System.Data.DataColumn("CBGP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGP);
                this.columnTHCVP = new global::System.Data.DataColumn("THCVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCVP);
                this.columnCBDAP = new global::System.Data.DataColumn("CBDAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDAP);
                this.columnCBNP = new global::System.Data.DataColumn("CBNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBNP);
                this.columnCBGAP = new global::System.Data.DataColumn("CBGAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGAP);
                this.columnD9THCP = new global::System.Data.DataColumn("D9THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THCP);
                this.columnD8THCP = new global::System.Data.DataColumn("D8THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THCP);
                this.columnTHCAP = new global::System.Data.DataColumn("THCAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCAP);
                this.columnCBCP = new global::System.Data.DataColumn("CBCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBCP);
                this.columnTEST = new global::System.Data.DataColumn("TEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEST);
                this.columnTotalTHC = new global::System.Data.DataColumn("TotalTHC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTHC);
                this.columnTotalCBD = new global::System.Data.DataColumn("TotalCBD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCBD);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnWETWEIGHT = new global::System.Data.DataColumn("WETWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWETWEIGHT);
                this.columnCBDV = new global::System.Data.DataColumn("CBDV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDV);
                this.columnCBD = new global::System.Data.DataColumn("CBD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBD);
                this.columnCBG = new global::System.Data.DataColumn("CBG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBG);
                this.columnTHCV = new global::System.Data.DataColumn("THCV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCV);
                this.columnCBDA = new global::System.Data.DataColumn("CBDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDA);
                this.columnCBN = new global::System.Data.DataColumn("CBN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBN);
                this.columnCBGA = new global::System.Data.DataColumn("CBGA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGA);
                this.columnD9THC = new global::System.Data.DataColumn("D9THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THC);
                this.columnD8THC = new global::System.Data.DataColumn("D8THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THC);
                this.columnTHCA = new global::System.Data.DataColumn("THCA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCA);
                this.columnCBC = new global::System.Data.DataColumn("CBC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBC);
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnPotencyID.MaxLength = 10;
                this.columnCBDVP.MaxLength = 50;
                this.columnCBDP.MaxLength = 50;
                this.columnCBGP.MaxLength = 50;
                this.columnTHCVP.MaxLength = 50;
                this.columnCBDAP.MaxLength = 50;
                this.columnCBNP.MaxLength = 50;
                this.columnCBGAP.MaxLength = 50;
                this.columnD9THCP.MaxLength = 50;
                this.columnD8THCP.MaxLength = 50;
                this.columnTHCAP.MaxLength = 50;
                this.columnCBCP.MaxLength = 50;
                this.columnTEST.MaxLength = 50;
                this.columnTotalTHC.MaxLength = 50;
                this.columnTotalCBD.MaxLength = 50;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnMETHOD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTRow NewdataDTRow() {
                return ((dataDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dataDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataDTRowChanged != null)) {
                    this.dataDTRowChanged(this, new dataDTRowChangeEvent(((dataDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataDTRowChanging != null)) {
                    this.dataDTRowChanging(this, new dataDTRowChangeEvent(((dataDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataDTRowDeleted != null)) {
                    this.dataDTRowDeleted(this, new dataDTRowChangeEvent(((dataDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataDTRowDeleting != null)) {
                    this.dataDTRowDeleting(this, new dataDTRowChangeEvent(((dataDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovedataDTRow(dataDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PestiDTDataTable : global::System.Data.TypedTableBase<PestiDTRow> {
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnLCMSID;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnPestInputWt;
            
            private global::System.Data.DataColumn columnAbamectin;
            
            private global::System.Data.DataColumn columnAcephate;
            
            private global::System.Data.DataColumn columnAcequinocyl;
            
            private global::System.Data.DataColumn columnAcetamiprid;
            
            private global::System.Data.DataColumn columnAldicarb;
            
            private global::System.Data.DataColumn columnAzoxystrobin;
            
            private global::System.Data.DataColumn columnBifenazate;
            
            private global::System.Data.DataColumn columnBifenthrin;
            
            private global::System.Data.DataColumn columnBoscalid;
            
            private global::System.Data.DataColumn columnCaptan;
            
            private global::System.Data.DataColumn columnCarbaryl;
            
            private global::System.Data.DataColumn columnCarbofuran;
            
            private global::System.Data.DataColumn columnChlorantranilprole;
            
            private global::System.Data.DataColumn columnChlordane;
            
            private global::System.Data.DataColumn columnChlorfenapyr;
            
            private global::System.Data.DataColumn columnChlorpyrifos;
            
            private global::System.Data.DataColumn columnClofentezine;
            
            private global::System.Data.DataColumn columnCoumaphos;
            
            private global::System.Data.DataColumn columnCyfluthrin;
            
            private global::System.Data.DataColumn columnCypermethrin;
            
            private global::System.Data.DataColumn columnDaminozide;
            
            private global::System.Data.DataColumn columnDichlorvos;
            
            private global::System.Data.DataColumn columnDiazinon;
            
            private global::System.Data.DataColumn columnDimethoate;
            
            private global::System.Data.DataColumn columnDimethomorph;
            
            private global::System.Data.DataColumn columnEthoprophos;
            
            private global::System.Data.DataColumn columnEtofenprox;
            
            private global::System.Data.DataColumn columnEtoxazole;
            
            private global::System.Data.DataColumn columnFenhexamid;
            
            private global::System.Data.DataColumn columnFenoxycarb;
            
            private global::System.Data.DataColumn columnFenpyroximate;
            
            private global::System.Data.DataColumn columnFipronil;
            
            private global::System.Data.DataColumn columnFlonicamid;
            
            private global::System.Data.DataColumn columnFludioxonil;
            
            private global::System.Data.DataColumn columnHexythiazox;
            
            private global::System.Data.DataColumn columnImazalil;
            
            private global::System.Data.DataColumn columnImidacloprid;
            
            private global::System.Data.DataColumn columnKresoximMethyl;
            
            private global::System.Data.DataColumn columnMalathion;
            
            private global::System.Data.DataColumn columnMetalaxyl;
            
            private global::System.Data.DataColumn columnMethiocarb;
            
            private global::System.Data.DataColumn columnMethomyl;
            
            private global::System.Data.DataColumn columnMethylParathion;
            
            private global::System.Data.DataColumn columnMevinphos;
            
            private global::System.Data.DataColumn columnMyclobutanil;
            
            private global::System.Data.DataColumn columnNaled;
            
            private global::System.Data.DataColumn columnOxamyl;
            
            private global::System.Data.DataColumn columnPentachloronitrobenzene;
            
            private global::System.Data.DataColumn columnPermethrins;
            
            private global::System.Data.DataColumn columnPhosmet;
            
            private global::System.Data.DataColumn columnPiperonylButoxide;
            
            private global::System.Data.DataColumn columnPrallethrin;
            
            private global::System.Data.DataColumn columnPropiconazole;
            
            private global::System.Data.DataColumn columnPropoxur;
            
            private global::System.Data.DataColumn columnPyrethrins;
            
            private global::System.Data.DataColumn columnPyridaben;
            
            private global::System.Data.DataColumn columnSpinetoramJ;
            
            private global::System.Data.DataColumn columnSpinetoramL;
            
            private global::System.Data.DataColumn columnSpinosadA;
            
            private global::System.Data.DataColumn columnSpinosadD;
            
            private global::System.Data.DataColumn columnSpiromesifen;
            
            private global::System.Data.DataColumn columnSpirotetramat;
            
            private global::System.Data.DataColumn columnSpiroxamine;
            
            private global::System.Data.DataColumn columnTebuconazole;
            
            private global::System.Data.DataColumn columnThiacloprid;
            
            private global::System.Data.DataColumn columnThiamethoxam;
            
            private global::System.Data.DataColumn columnTrifloxystrobin;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPaclobutrazol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTDataTable() {
                this.TableName = "PestiDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PestiDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PestiDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LCMSIDColumn {
                get {
                    return this.columnLCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PestInputWtColumn {
                get {
                    return this.columnPestInputWt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AbamectinColumn {
                get {
                    return this.columnAbamectin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcephateColumn {
                get {
                    return this.columnAcephate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcequinocylColumn {
                get {
                    return this.columnAcequinocyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetamipridColumn {
                get {
                    return this.columnAcetamiprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AldicarbColumn {
                get {
                    return this.columnAldicarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AzoxystrobinColumn {
                get {
                    return this.columnAzoxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenazateColumn {
                get {
                    return this.columnBifenazate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenthrinColumn {
                get {
                    return this.columnBifenthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BoscalidColumn {
                get {
                    return this.columnBoscalid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CaptanColumn {
                get {
                    return this.columnCaptan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbarylColumn {
                get {
                    return this.columnCarbaryl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbofuranColumn {
                get {
                    return this.columnCarbofuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorantranilproleColumn {
                get {
                    return this.columnChlorantranilprole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlordaneColumn {
                get {
                    return this.columnChlordane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorfenapyrColumn {
                get {
                    return this.columnChlorfenapyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorpyrifosColumn {
                get {
                    return this.columnChlorpyrifos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClofentezineColumn {
                get {
                    return this.columnClofentezine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CoumaphosColumn {
                get {
                    return this.columnCoumaphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CyfluthrinColumn {
                get {
                    return this.columnCyfluthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CypermethrinColumn {
                get {
                    return this.columnCypermethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DaminozideColumn {
                get {
                    return this.columnDaminozide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DichlorvosColumn {
                get {
                    return this.columnDichlorvos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiazinonColumn {
                get {
                    return this.columnDiazinon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethoateColumn {
                get {
                    return this.columnDimethoate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethomorphColumn {
                get {
                    return this.columnDimethomorph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthoprophosColumn {
                get {
                    return this.columnEthoprophos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtofenproxColumn {
                get {
                    return this.columnEtofenprox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtoxazoleColumn {
                get {
                    return this.columnEtoxazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenhexamidColumn {
                get {
                    return this.columnFenhexamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenoxycarbColumn {
                get {
                    return this.columnFenoxycarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenpyroximateColumn {
                get {
                    return this.columnFenpyroximate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FipronilColumn {
                get {
                    return this.columnFipronil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FlonicamidColumn {
                get {
                    return this.columnFlonicamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FludioxonilColumn {
                get {
                    return this.columnFludioxonil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HexythiazoxColumn {
                get {
                    return this.columnHexythiazox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImazalilColumn {
                get {
                    return this.columnImazalil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImidaclopridColumn {
                get {
                    return this.columnImidacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KresoximMethylColumn {
                get {
                    return this.columnKresoximMethyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MalathionColumn {
                get {
                    return this.columnMalathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalaxylColumn {
                get {
                    return this.columnMetalaxyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethiocarbColumn {
                get {
                    return this.columnMethiocarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethomylColumn {
                get {
                    return this.columnMethomyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethylParathionColumn {
                get {
                    return this.columnMethylParathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MevinphosColumn {
                get {
                    return this.columnMevinphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MyclobutanilColumn {
                get {
                    return this.columnMyclobutanil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NaledColumn {
                get {
                    return this.columnNaled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OxamylColumn {
                get {
                    return this.columnOxamyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PentachloronitrobenzeneColumn {
                get {
                    return this.columnPentachloronitrobenzene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermethrinsColumn {
                get {
                    return this.columnPermethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhosmetColumn {
                get {
                    return this.columnPhosmet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PiperonylButoxideColumn {
                get {
                    return this.columnPiperonylButoxide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrallethrinColumn {
                get {
                    return this.columnPrallethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropiconazoleColumn {
                get {
                    return this.columnPropiconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropoxurColumn {
                get {
                    return this.columnPropoxur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyrethrinsColumn {
                get {
                    return this.columnPyrethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyridabenColumn {
                get {
                    return this.columnPyridaben;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramJColumn {
                get {
                    return this.columnSpinetoramJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramLColumn {
                get {
                    return this.columnSpinetoramL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadAColumn {
                get {
                    return this.columnSpinosadA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadDColumn {
                get {
                    return this.columnSpinosadD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiromesifenColumn {
                get {
                    return this.columnSpiromesifen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpirotetramatColumn {
                get {
                    return this.columnSpirotetramat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiroxamineColumn {
                get {
                    return this.columnSpiroxamine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TebuconazoleColumn {
                get {
                    return this.columnTebuconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiaclopridColumn {
                get {
                    return this.columnThiacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiamethoxamColumn {
                get {
                    return this.columnThiamethoxam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrifloxystrobinColumn {
                get {
                    return this.columnTrifloxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaclobutrazolColumn {
                get {
                    return this.columnPaclobutrazol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTRow this[int index] {
                get {
                    return ((PestiDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PestiDTRowChangeEventHandler PestiDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PestiDTRowChangeEventHandler PestiDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PestiDTRowChangeEventHandler PestiDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PestiDTRowChangeEventHandler PestiDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPestiDTRow(PestiDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTRow AddPestiDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string LCMSID, 
                        string GCMSID, 
                        string PestInputWt, 
                        string Abamectin, 
                        string Acephate, 
                        string Acequinocyl, 
                        string Acetamiprid, 
                        string Aldicarb, 
                        string Azoxystrobin, 
                        string Bifenazate, 
                        string Bifenthrin, 
                        string Boscalid, 
                        string Captan, 
                        string Carbaryl, 
                        string Carbofuran, 
                        string Chlorantranilprole, 
                        string Chlordane, 
                        string Chlorfenapyr, 
                        string Chlorpyrifos, 
                        string Clofentezine, 
                        string Coumaphos, 
                        string Cyfluthrin, 
                        string Cypermethrin, 
                        string Daminozide, 
                        string Dichlorvos, 
                        string Diazinon, 
                        string Dimethoate, 
                        string Dimethomorph, 
                        string Ethoprophos, 
                        string Etofenprox, 
                        string Etoxazole, 
                        string Fenhexamid, 
                        string Fenoxycarb, 
                        string Fenpyroximate, 
                        string Fipronil, 
                        string Flonicamid, 
                        string Fludioxonil, 
                        string Hexythiazox, 
                        string Imazalil, 
                        string Imidacloprid, 
                        string KresoximMethyl, 
                        string Malathion, 
                        string Metalaxyl, 
                        string Methiocarb, 
                        string Methomyl, 
                        string MethylParathion, 
                        string Mevinphos, 
                        string Myclobutanil, 
                        string Naled, 
                        string Oxamyl, 
                        string Pentachloronitrobenzene, 
                        string Permethrins, 
                        string Phosmet, 
                        string PiperonylButoxide, 
                        string Prallethrin, 
                        string Propiconazole, 
                        string Propoxur, 
                        string Pyrethrins, 
                        string Pyridaben, 
                        string SpinetoramJ, 
                        string SpinetoramL, 
                        string SpinosadA, 
                        string SpinosadD, 
                        string Spiromesifen, 
                        string Spirotetramat, 
                        string Spiroxamine, 
                        string Tebuconazole, 
                        string Thiacloprid, 
                        string Thiamethoxam, 
                        string Trifloxystrobin, 
                        string Paclobutrazol) {
                PestiDTRow rowPestiDTRow = ((PestiDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        LCMSID,
                        GCMSID,
                        PestInputWt,
                        Abamectin,
                        Acephate,
                        Acequinocyl,
                        Acetamiprid,
                        Aldicarb,
                        Azoxystrobin,
                        Bifenazate,
                        Bifenthrin,
                        Boscalid,
                        Captan,
                        Carbaryl,
                        Carbofuran,
                        Chlorantranilprole,
                        Chlordane,
                        Chlorfenapyr,
                        Chlorpyrifos,
                        Clofentezine,
                        Coumaphos,
                        Cyfluthrin,
                        Cypermethrin,
                        Daminozide,
                        Dichlorvos,
                        Diazinon,
                        Dimethoate,
                        Dimethomorph,
                        Ethoprophos,
                        Etofenprox,
                        Etoxazole,
                        Fenhexamid,
                        Fenoxycarb,
                        Fenpyroximate,
                        Fipronil,
                        Flonicamid,
                        Fludioxonil,
                        Hexythiazox,
                        Imazalil,
                        Imidacloprid,
                        KresoximMethyl,
                        Malathion,
                        Metalaxyl,
                        Methiocarb,
                        Methomyl,
                        MethylParathion,
                        Mevinphos,
                        Myclobutanil,
                        Naled,
                        Oxamyl,
                        Pentachloronitrobenzene,
                        Permethrins,
                        Phosmet,
                        PiperonylButoxide,
                        Prallethrin,
                        Propiconazole,
                        Propoxur,
                        Pyrethrins,
                        Pyridaben,
                        SpinetoramJ,
                        SpinetoramL,
                        SpinosadA,
                        SpinosadD,
                        Spiromesifen,
                        Spirotetramat,
                        Spiroxamine,
                        Tebuconazole,
                        Thiacloprid,
                        Thiamethoxam,
                        Trifloxystrobin,
                        null,
                        Paclobutrazol};
                rowPestiDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPestiDTRow);
                return rowPestiDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PestiDTDataTable cln = ((PestiDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PestiDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnLCMSID = base.Columns["LCMSID"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnPestInputWt = base.Columns["PestInputWt"];
                this.columnAbamectin = base.Columns["Abamectin"];
                this.columnAcephate = base.Columns["Acephate"];
                this.columnAcequinocyl = base.Columns["Acequinocyl"];
                this.columnAcetamiprid = base.Columns["Acetamiprid"];
                this.columnAldicarb = base.Columns["Aldicarb"];
                this.columnAzoxystrobin = base.Columns["Azoxystrobin"];
                this.columnBifenazate = base.Columns["Bifenazate"];
                this.columnBifenthrin = base.Columns["Bifenthrin"];
                this.columnBoscalid = base.Columns["Boscalid"];
                this.columnCaptan = base.Columns["Captan"];
                this.columnCarbaryl = base.Columns["Carbaryl"];
                this.columnCarbofuran = base.Columns["Carbofuran"];
                this.columnChlorantranilprole = base.Columns["Chlorantranilprole"];
                this.columnChlordane = base.Columns["Chlordane"];
                this.columnChlorfenapyr = base.Columns["Chlorfenapyr"];
                this.columnChlorpyrifos = base.Columns["Chlorpyrifos"];
                this.columnClofentezine = base.Columns["Clofentezine"];
                this.columnCoumaphos = base.Columns["Coumaphos"];
                this.columnCyfluthrin = base.Columns["Cyfluthrin"];
                this.columnCypermethrin = base.Columns["Cypermethrin"];
                this.columnDaminozide = base.Columns["Daminozide"];
                this.columnDichlorvos = base.Columns["Dichlorvos"];
                this.columnDiazinon = base.Columns["Diazinon"];
                this.columnDimethoate = base.Columns["Dimethoate"];
                this.columnDimethomorph = base.Columns["Dimethomorph"];
                this.columnEthoprophos = base.Columns["Ethoprophos"];
                this.columnEtofenprox = base.Columns["Etofenprox"];
                this.columnEtoxazole = base.Columns["Etoxazole"];
                this.columnFenhexamid = base.Columns["Fenhexamid"];
                this.columnFenoxycarb = base.Columns["Fenoxycarb"];
                this.columnFenpyroximate = base.Columns["Fenpyroximate"];
                this.columnFipronil = base.Columns["Fipronil"];
                this.columnFlonicamid = base.Columns["Flonicamid"];
                this.columnFludioxonil = base.Columns["Fludioxonil"];
                this.columnHexythiazox = base.Columns["Hexythiazox"];
                this.columnImazalil = base.Columns["Imazalil"];
                this.columnImidacloprid = base.Columns["Imidacloprid"];
                this.columnKresoximMethyl = base.Columns["KresoximMethyl"];
                this.columnMalathion = base.Columns["Malathion"];
                this.columnMetalaxyl = base.Columns["Metalaxyl"];
                this.columnMethiocarb = base.Columns["Methiocarb"];
                this.columnMethomyl = base.Columns["Methomyl"];
                this.columnMethylParathion = base.Columns["MethylParathion"];
                this.columnMevinphos = base.Columns["Mevinphos"];
                this.columnMyclobutanil = base.Columns["Myclobutanil"];
                this.columnNaled = base.Columns["Naled"];
                this.columnOxamyl = base.Columns["Oxamyl"];
                this.columnPentachloronitrobenzene = base.Columns["Pentachloronitrobenzene"];
                this.columnPermethrins = base.Columns["Permethrins"];
                this.columnPhosmet = base.Columns["Phosmet"];
                this.columnPiperonylButoxide = base.Columns["PiperonylButoxide"];
                this.columnPrallethrin = base.Columns["Prallethrin"];
                this.columnPropiconazole = base.Columns["Propiconazole"];
                this.columnPropoxur = base.Columns["Propoxur"];
                this.columnPyrethrins = base.Columns["Pyrethrins"];
                this.columnPyridaben = base.Columns["Pyridaben"];
                this.columnSpinetoramJ = base.Columns["SpinetoramJ"];
                this.columnSpinetoramL = base.Columns["SpinetoramL"];
                this.columnSpinosadA = base.Columns["SpinosadA"];
                this.columnSpinosadD = base.Columns["SpinosadD"];
                this.columnSpiromesifen = base.Columns["Spiromesifen"];
                this.columnSpirotetramat = base.Columns["Spirotetramat"];
                this.columnSpiroxamine = base.Columns["Spiroxamine"];
                this.columnTebuconazole = base.Columns["Tebuconazole"];
                this.columnThiacloprid = base.Columns["Thiacloprid"];
                this.columnThiamethoxam = base.Columns["Thiamethoxam"];
                this.columnTrifloxystrobin = base.Columns["Trifloxystrobin"];
                this.columnID = base.Columns["ID"];
                this.columnPaclobutrazol = base.Columns["Paclobutrazol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnLCMSID = new global::System.Data.DataColumn("LCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMSID);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnPestInputWt = new global::System.Data.DataColumn("PestInputWt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPestInputWt);
                this.columnAbamectin = new global::System.Data.DataColumn("Abamectin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbamectin);
                this.columnAcephate = new global::System.Data.DataColumn("Acephate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcephate);
                this.columnAcequinocyl = new global::System.Data.DataColumn("Acequinocyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcequinocyl);
                this.columnAcetamiprid = new global::System.Data.DataColumn("Acetamiprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetamiprid);
                this.columnAldicarb = new global::System.Data.DataColumn("Aldicarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAldicarb);
                this.columnAzoxystrobin = new global::System.Data.DataColumn("Azoxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAzoxystrobin);
                this.columnBifenazate = new global::System.Data.DataColumn("Bifenazate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenazate);
                this.columnBifenthrin = new global::System.Data.DataColumn("Bifenthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenthrin);
                this.columnBoscalid = new global::System.Data.DataColumn("Boscalid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoscalid);
                this.columnCaptan = new global::System.Data.DataColumn("Captan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaptan);
                this.columnCarbaryl = new global::System.Data.DataColumn("Carbaryl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbaryl);
                this.columnCarbofuran = new global::System.Data.DataColumn("Carbofuran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbofuran);
                this.columnChlorantranilprole = new global::System.Data.DataColumn("Chlorantranilprole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorantranilprole);
                this.columnChlordane = new global::System.Data.DataColumn("Chlordane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlordane);
                this.columnChlorfenapyr = new global::System.Data.DataColumn("Chlorfenapyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorfenapyr);
                this.columnChlorpyrifos = new global::System.Data.DataColumn("Chlorpyrifos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorpyrifos);
                this.columnClofentezine = new global::System.Data.DataColumn("Clofentezine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClofentezine);
                this.columnCoumaphos = new global::System.Data.DataColumn("Coumaphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoumaphos);
                this.columnCyfluthrin = new global::System.Data.DataColumn("Cyfluthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCyfluthrin);
                this.columnCypermethrin = new global::System.Data.DataColumn("Cypermethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCypermethrin);
                this.columnDaminozide = new global::System.Data.DataColumn("Daminozide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaminozide);
                this.columnDichlorvos = new global::System.Data.DataColumn("Dichlorvos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDichlorvos);
                this.columnDiazinon = new global::System.Data.DataColumn("Diazinon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiazinon);
                this.columnDimethoate = new global::System.Data.DataColumn("Dimethoate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethoate);
                this.columnDimethomorph = new global::System.Data.DataColumn("Dimethomorph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethomorph);
                this.columnEthoprophos = new global::System.Data.DataColumn("Ethoprophos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthoprophos);
                this.columnEtofenprox = new global::System.Data.DataColumn("Etofenprox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtofenprox);
                this.columnEtoxazole = new global::System.Data.DataColumn("Etoxazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtoxazole);
                this.columnFenhexamid = new global::System.Data.DataColumn("Fenhexamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenhexamid);
                this.columnFenoxycarb = new global::System.Data.DataColumn("Fenoxycarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenoxycarb);
                this.columnFenpyroximate = new global::System.Data.DataColumn("Fenpyroximate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenpyroximate);
                this.columnFipronil = new global::System.Data.DataColumn("Fipronil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFipronil);
                this.columnFlonicamid = new global::System.Data.DataColumn("Flonicamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlonicamid);
                this.columnFludioxonil = new global::System.Data.DataColumn("Fludioxonil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFludioxonil);
                this.columnHexythiazox = new global::System.Data.DataColumn("Hexythiazox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHexythiazox);
                this.columnImazalil = new global::System.Data.DataColumn("Imazalil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImazalil);
                this.columnImidacloprid = new global::System.Data.DataColumn("Imidacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImidacloprid);
                this.columnKresoximMethyl = new global::System.Data.DataColumn("KresoximMethyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKresoximMethyl);
                this.columnMalathion = new global::System.Data.DataColumn("Malathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMalathion);
                this.columnMetalaxyl = new global::System.Data.DataColumn("Metalaxyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalaxyl);
                this.columnMethiocarb = new global::System.Data.DataColumn("Methiocarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethiocarb);
                this.columnMethomyl = new global::System.Data.DataColumn("Methomyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethomyl);
                this.columnMethylParathion = new global::System.Data.DataColumn("MethylParathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethylParathion);
                this.columnMevinphos = new global::System.Data.DataColumn("Mevinphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMevinphos);
                this.columnMyclobutanil = new global::System.Data.DataColumn("Myclobutanil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyclobutanil);
                this.columnNaled = new global::System.Data.DataColumn("Naled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaled);
                this.columnOxamyl = new global::System.Data.DataColumn("Oxamyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxamyl);
                this.columnPentachloronitrobenzene = new global::System.Data.DataColumn("Pentachloronitrobenzene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPentachloronitrobenzene);
                this.columnPermethrins = new global::System.Data.DataColumn("Permethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermethrins);
                this.columnPhosmet = new global::System.Data.DataColumn("Phosmet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhosmet);
                this.columnPiperonylButoxide = new global::System.Data.DataColumn("PiperonylButoxide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiperonylButoxide);
                this.columnPrallethrin = new global::System.Data.DataColumn("Prallethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrallethrin);
                this.columnPropiconazole = new global::System.Data.DataColumn("Propiconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropiconazole);
                this.columnPropoxur = new global::System.Data.DataColumn("Propoxur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropoxur);
                this.columnPyrethrins = new global::System.Data.DataColumn("Pyrethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyrethrins);
                this.columnPyridaben = new global::System.Data.DataColumn("Pyridaben", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyridaben);
                this.columnSpinetoramJ = new global::System.Data.DataColumn("SpinetoramJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramJ);
                this.columnSpinetoramL = new global::System.Data.DataColumn("SpinetoramL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramL);
                this.columnSpinosadA = new global::System.Data.DataColumn("SpinosadA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadA);
                this.columnSpinosadD = new global::System.Data.DataColumn("SpinosadD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadD);
                this.columnSpiromesifen = new global::System.Data.DataColumn("Spiromesifen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiromesifen);
                this.columnSpirotetramat = new global::System.Data.DataColumn("Spirotetramat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpirotetramat);
                this.columnSpiroxamine = new global::System.Data.DataColumn("Spiroxamine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiroxamine);
                this.columnTebuconazole = new global::System.Data.DataColumn("Tebuconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTebuconazole);
                this.columnThiacloprid = new global::System.Data.DataColumn("Thiacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiacloprid);
                this.columnThiamethoxam = new global::System.Data.DataColumn("Thiamethoxam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiamethoxam);
                this.columnTrifloxystrobin = new global::System.Data.DataColumn("Trifloxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrifloxystrobin);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPaclobutrazol = new global::System.Data.DataColumn("Paclobutrazol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaclobutrazol);
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnLCMSID.MaxLength = 25;
                this.columnGCMSID.MaxLength = 25;
                this.columnPestInputWt.MaxLength = 20;
                this.columnAbamectin.MaxLength = 25;
                this.columnAcephate.MaxLength = 25;
                this.columnAcequinocyl.MaxLength = 25;
                this.columnAcetamiprid.MaxLength = 25;
                this.columnAldicarb.MaxLength = 25;
                this.columnAzoxystrobin.MaxLength = 25;
                this.columnBifenazate.MaxLength = 25;
                this.columnBifenthrin.MaxLength = 25;
                this.columnBoscalid.MaxLength = 25;
                this.columnCaptan.MaxLength = 25;
                this.columnCarbaryl.MaxLength = 25;
                this.columnCarbofuran.MaxLength = 25;
                this.columnChlorantranilprole.MaxLength = 25;
                this.columnChlordane.MaxLength = 25;
                this.columnChlorfenapyr.MaxLength = 25;
                this.columnChlorpyrifos.MaxLength = 25;
                this.columnClofentezine.MaxLength = 25;
                this.columnCoumaphos.MaxLength = 25;
                this.columnCyfluthrin.MaxLength = 25;
                this.columnCypermethrin.MaxLength = 25;
                this.columnDaminozide.MaxLength = 25;
                this.columnDichlorvos.MaxLength = 25;
                this.columnDiazinon.MaxLength = 25;
                this.columnDimethoate.MaxLength = 25;
                this.columnDimethomorph.MaxLength = 25;
                this.columnEthoprophos.MaxLength = 25;
                this.columnEtofenprox.MaxLength = 25;
                this.columnEtoxazole.MaxLength = 25;
                this.columnFenhexamid.MaxLength = 25;
                this.columnFenoxycarb.MaxLength = 25;
                this.columnFenpyroximate.MaxLength = 25;
                this.columnFipronil.MaxLength = 25;
                this.columnFlonicamid.MaxLength = 25;
                this.columnFludioxonil.MaxLength = 25;
                this.columnHexythiazox.MaxLength = 25;
                this.columnImazalil.MaxLength = 25;
                this.columnImidacloprid.MaxLength = 25;
                this.columnKresoximMethyl.MaxLength = 25;
                this.columnMalathion.MaxLength = 25;
                this.columnMetalaxyl.MaxLength = 25;
                this.columnMethiocarb.MaxLength = 25;
                this.columnMethomyl.MaxLength = 25;
                this.columnMethylParathion.MaxLength = 25;
                this.columnMevinphos.MaxLength = 25;
                this.columnMyclobutanil.MaxLength = 25;
                this.columnNaled.MaxLength = 25;
                this.columnOxamyl.MaxLength = 25;
                this.columnPentachloronitrobenzene.MaxLength = 25;
                this.columnPermethrins.MaxLength = 25;
                this.columnPhosmet.MaxLength = 25;
                this.columnPiperonylButoxide.MaxLength = 25;
                this.columnPrallethrin.MaxLength = 25;
                this.columnPropiconazole.MaxLength = 25;
                this.columnPropoxur.MaxLength = 25;
                this.columnPyrethrins.MaxLength = 25;
                this.columnPyridaben.MaxLength = 25;
                this.columnSpinetoramJ.MaxLength = 25;
                this.columnSpinetoramL.MaxLength = 25;
                this.columnSpinosadA.MaxLength = 25;
                this.columnSpinosadD.MaxLength = 25;
                this.columnSpiromesifen.MaxLength = 25;
                this.columnSpirotetramat.MaxLength = 25;
                this.columnSpiroxamine.MaxLength = 25;
                this.columnTebuconazole.MaxLength = 25;
                this.columnThiacloprid.MaxLength = 25;
                this.columnThiamethoxam.MaxLength = 25;
                this.columnTrifloxystrobin.MaxLength = 25;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnPaclobutrazol.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTRow NewPestiDTRow() {
                return ((PestiDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PestiDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PestiDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PestiDTRowChanged != null)) {
                    this.PestiDTRowChanged(this, new PestiDTRowChangeEvent(((PestiDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PestiDTRowChanging != null)) {
                    this.PestiDTRowChanging(this, new PestiDTRowChangeEvent(((PestiDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PestiDTRowDeleted != null)) {
                    this.PestiDTRowDeleted(this, new PestiDTRowChangeEvent(((PestiDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PestiDTRowDeleting != null)) {
                    this.PestiDTRowDeleting(this, new PestiDTRowChangeEvent(((PestiDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePestiDTRow(PestiDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PestiDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SolventDTDataTable : global::System.Data.TypedTableBase<SolventDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnSolventInputWeight;
            
            private global::System.Data.DataColumn columnDichloroethane;
            
            private global::System.Data.DataColumn columnBenzene;
            
            private global::System.Data.DataColumn columnChloroform;
            
            private global::System.Data.DataColumn columnEthyleneOxide;
            
            private global::System.Data.DataColumn columnMethyleneChloride;
            
            private global::System.Data.DataColumn columnTrichloroethylene;
            
            private global::System.Data.DataColumn columnAcetone;
            
            private global::System.Data.DataColumn columnAcetonitrile;
            
            private global::System.Data.DataColumn columnButane;
            
            private global::System.Data.DataColumn columnEthanol;
            
            private global::System.Data.DataColumn columnEthylAcetate;
            
            private global::System.Data.DataColumn columnEthylEther;
            
            private global::System.Data.DataColumn columnHeptane;
            
            private global::System.Data.DataColumn columnHexane;
            
            private global::System.Data.DataColumn columnIsopropylAlcohol;
            
            private global::System.Data.DataColumn columnMethanol;
            
            private global::System.Data.DataColumn columnPentane;
            
            private global::System.Data.DataColumn columnPropane;
            
            private global::System.Data.DataColumn columnToluene;
            
            private global::System.Data.DataColumn columnorthoXylene;
            
            private global::System.Data.DataColumn columnmetaXylene;
            
            private global::System.Data.DataColumn columnparaXylene;
            
            private global::System.Data.DataColumn columnIsobutane;
            
            private global::System.Data.DataColumn columnnHexane;
            
            private global::System.Data.DataColumn columnDiethylEther;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTDataTable() {
                this.TableName = "SolventDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SolventDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SolventDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SolventInputWeightColumn {
                get {
                    return this.columnSolventInputWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DichloroethaneColumn {
                get {
                    return this.columnDichloroethane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BenzeneColumn {
                get {
                    return this.columnBenzene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChloroformColumn {
                get {
                    return this.columnChloroform;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthyleneOxideColumn {
                get {
                    return this.columnEthyleneOxide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethyleneChlorideColumn {
                get {
                    return this.columnMethyleneChloride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrichloroethyleneColumn {
                get {
                    return this.columnTrichloroethylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetoneColumn {
                get {
                    return this.columnAcetone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetonitrileColumn {
                get {
                    return this.columnAcetonitrile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ButaneColumn {
                get {
                    return this.columnButane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthanolColumn {
                get {
                    return this.columnEthanol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthylAcetateColumn {
                get {
                    return this.columnEthylAcetate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthylEtherColumn {
                get {
                    return this.columnEthylEther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HeptaneColumn {
                get {
                    return this.columnHeptane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HexaneColumn {
                get {
                    return this.columnHexane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsopropylAlcoholColumn {
                get {
                    return this.columnIsopropylAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethanolColumn {
                get {
                    return this.columnMethanol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PentaneColumn {
                get {
                    return this.columnPentane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropaneColumn {
                get {
                    return this.columnPropane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TolueneColumn {
                get {
                    return this.columnToluene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn orthoXyleneColumn {
                get {
                    return this.columnorthoXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn metaXyleneColumn {
                get {
                    return this.columnmetaXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn paraXyleneColumn {
                get {
                    return this.columnparaXylene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsobutaneColumn {
                get {
                    return this.columnIsobutane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nHexaneColumn {
                get {
                    return this.columnnHexane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiethylEtherColumn {
                get {
                    return this.columnDiethylEther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTRow this[int index] {
                get {
                    return ((SolventDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventDTRowChangeEventHandler SolventDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventDTRowChangeEventHandler SolventDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventDTRowChangeEventHandler SolventDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SolventDTRowChangeEventHandler SolventDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSolventDTRow(SolventDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTRow AddSolventDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string SolventInputWeight, 
                        string Dichloroethane, 
                        string Benzene, 
                        string Chloroform, 
                        string EthyleneOxide, 
                        string MethyleneChloride, 
                        string Trichloroethylene, 
                        string Acetone, 
                        string Acetonitrile, 
                        string Butane, 
                        string Ethanol, 
                        string EthylAcetate, 
                        string EthylEther, 
                        string Heptane, 
                        string Hexane, 
                        string IsopropylAlcohol, 
                        string Methanol, 
                        string Pentane, 
                        string Propane, 
                        string Toluene, 
                        string orthoXylene, 
                        string metaXylene, 
                        string paraXylene, 
                        string Isobutane, 
                        string nHexane, 
                        string DiethylEther) {
                SolventDTRow rowSolventDTRow = ((SolventDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        SolventInputWeight,
                        Dichloroethane,
                        Benzene,
                        Chloroform,
                        EthyleneOxide,
                        MethyleneChloride,
                        Trichloroethylene,
                        Acetone,
                        Acetonitrile,
                        Butane,
                        Ethanol,
                        EthylAcetate,
                        EthylEther,
                        Heptane,
                        Hexane,
                        IsopropylAlcohol,
                        Methanol,
                        Pentane,
                        Propane,
                        Toluene,
                        orthoXylene,
                        metaXylene,
                        paraXylene,
                        Isobutane,
                        nHexane,
                        DiethylEther};
                rowSolventDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSolventDTRow);
                return rowSolventDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SolventDTDataTable cln = ((SolventDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SolventDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnSolventInputWeight = base.Columns["SolventInputWeight"];
                this.columnDichloroethane = base.Columns["Dichloroethane"];
                this.columnBenzene = base.Columns["Benzene"];
                this.columnChloroform = base.Columns["Chloroform"];
                this.columnEthyleneOxide = base.Columns["EthyleneOxide"];
                this.columnMethyleneChloride = base.Columns["MethyleneChloride"];
                this.columnTrichloroethylene = base.Columns["Trichloroethylene"];
                this.columnAcetone = base.Columns["Acetone"];
                this.columnAcetonitrile = base.Columns["Acetonitrile"];
                this.columnButane = base.Columns["Butane"];
                this.columnEthanol = base.Columns["Ethanol"];
                this.columnEthylAcetate = base.Columns["EthylAcetate"];
                this.columnEthylEther = base.Columns["EthylEther"];
                this.columnHeptane = base.Columns["Heptane"];
                this.columnHexane = base.Columns["Hexane"];
                this.columnIsopropylAlcohol = base.Columns["IsopropylAlcohol"];
                this.columnMethanol = base.Columns["Methanol"];
                this.columnPentane = base.Columns["Pentane"];
                this.columnPropane = base.Columns["Propane"];
                this.columnToluene = base.Columns["Toluene"];
                this.columnorthoXylene = base.Columns["orthoXylene"];
                this.columnmetaXylene = base.Columns["metaXylene"];
                this.columnparaXylene = base.Columns["paraXylene"];
                this.columnIsobutane = base.Columns["Isobutane"];
                this.columnnHexane = base.Columns["nHexane"];
                this.columnDiethylEther = base.Columns["DiethylEther"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnSolventInputWeight = new global::System.Data.DataColumn("SolventInputWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolventInputWeight);
                this.columnDichloroethane = new global::System.Data.DataColumn("Dichloroethane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDichloroethane);
                this.columnBenzene = new global::System.Data.DataColumn("Benzene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenzene);
                this.columnChloroform = new global::System.Data.DataColumn("Chloroform", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChloroform);
                this.columnEthyleneOxide = new global::System.Data.DataColumn("EthyleneOxide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthyleneOxide);
                this.columnMethyleneChloride = new global::System.Data.DataColumn("MethyleneChloride", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethyleneChloride);
                this.columnTrichloroethylene = new global::System.Data.DataColumn("Trichloroethylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrichloroethylene);
                this.columnAcetone = new global::System.Data.DataColumn("Acetone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetone);
                this.columnAcetonitrile = new global::System.Data.DataColumn("Acetonitrile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetonitrile);
                this.columnButane = new global::System.Data.DataColumn("Butane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnButane);
                this.columnEthanol = new global::System.Data.DataColumn("Ethanol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthanol);
                this.columnEthylAcetate = new global::System.Data.DataColumn("EthylAcetate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthylAcetate);
                this.columnEthylEther = new global::System.Data.DataColumn("EthylEther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthylEther);
                this.columnHeptane = new global::System.Data.DataColumn("Heptane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeptane);
                this.columnHexane = new global::System.Data.DataColumn("Hexane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHexane);
                this.columnIsopropylAlcohol = new global::System.Data.DataColumn("IsopropylAlcohol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsopropylAlcohol);
                this.columnMethanol = new global::System.Data.DataColumn("Methanol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethanol);
                this.columnPentane = new global::System.Data.DataColumn("Pentane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPentane);
                this.columnPropane = new global::System.Data.DataColumn("Propane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropane);
                this.columnToluene = new global::System.Data.DataColumn("Toluene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToluene);
                this.columnorthoXylene = new global::System.Data.DataColumn("orthoXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorthoXylene);
                this.columnmetaXylene = new global::System.Data.DataColumn("metaXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmetaXylene);
                this.columnparaXylene = new global::System.Data.DataColumn("paraXylene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparaXylene);
                this.columnIsobutane = new global::System.Data.DataColumn("Isobutane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsobutane);
                this.columnnHexane = new global::System.Data.DataColumn("nHexane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnHexane);
                this.columnDiethylEther = new global::System.Data.DataColumn("DiethylEther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiethylEther);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnSolventInputWeight.MaxLength = 25;
                this.columnDichloroethane.MaxLength = 2147483647;
                this.columnBenzene.MaxLength = 2147483647;
                this.columnChloroform.MaxLength = 2147483647;
                this.columnEthyleneOxide.MaxLength = 2147483647;
                this.columnMethyleneChloride.MaxLength = 2147483647;
                this.columnTrichloroethylene.MaxLength = 2147483647;
                this.columnAcetone.MaxLength = 2147483647;
                this.columnAcetonitrile.MaxLength = 2147483647;
                this.columnButane.MaxLength = 2147483647;
                this.columnEthanol.MaxLength = 2147483647;
                this.columnEthylAcetate.MaxLength = 2147483647;
                this.columnEthylEther.MaxLength = 2147483647;
                this.columnHeptane.MaxLength = 2147483647;
                this.columnHexane.MaxLength = 2147483647;
                this.columnIsopropylAlcohol.MaxLength = 2147483647;
                this.columnMethanol.MaxLength = 2147483647;
                this.columnPentane.MaxLength = 2147483647;
                this.columnPropane.MaxLength = 2147483647;
                this.columnToluene.MaxLength = 2147483647;
                this.columnorthoXylene.MaxLength = 2147483647;
                this.columnmetaXylene.MaxLength = 2147483647;
                this.columnparaXylene.MaxLength = 2147483647;
                this.columnIsobutane.MaxLength = 2147483647;
                this.columnnHexane.MaxLength = 2147483647;
                this.columnDiethylEther.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTRow NewSolventDTRow() {
                return ((SolventDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SolventDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SolventDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SolventDTRowChanged != null)) {
                    this.SolventDTRowChanged(this, new SolventDTRowChangeEvent(((SolventDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SolventDTRowChanging != null)) {
                    this.SolventDTRowChanging(this, new SolventDTRowChangeEvent(((SolventDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SolventDTRowDeleted != null)) {
                    this.SolventDTRowDeleted(this, new SolventDTRowChangeEvent(((SolventDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SolventDTRowDeleting != null)) {
                    this.SolventDTRowDeleting(this, new SolventDTRowChangeEvent(((SolventDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSolventDTRow(SolventDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SolventDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class metalsDTDataTable : global::System.Data.TypedTableBase<metalsDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnAASID;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnMetalsWeight;
            
            private global::System.Data.DataColumn columnArsenic;
            
            private global::System.Data.DataColumn columnCadmium;
            
            private global::System.Data.DataColumn columnLead;
            
            private global::System.Data.DataColumn columnMercury;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTDataTable() {
                this.TableName = "metalsDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal metalsDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected metalsDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AASIDColumn {
                get {
                    return this.columnAASID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalsWeightColumn {
                get {
                    return this.columnMetalsWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArsenicColumn {
                get {
                    return this.columnArsenic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CadmiumColumn {
                get {
                    return this.columnCadmium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LeadColumn {
                get {
                    return this.columnLead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MercuryColumn {
                get {
                    return this.columnMercury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTRow this[int index] {
                get {
                    return ((metalsDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDTRowChangeEventHandler metalsDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDTRowChangeEventHandler metalsDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDTRowChangeEventHandler metalsDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event metalsDTRowChangeEventHandler metalsDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmetalsDTRow(metalsDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTRow AddmetalsDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        string AASID, 
                        string Method, 
                        string Technique, 
                        string MetalsWeight, 
                        string Arsenic, 
                        string Cadmium, 
                        string Lead, 
                        string Mercury) {
                metalsDTRow rowmetalsDTRow = ((metalsDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        AASID,
                        Method,
                        Technique,
                        MetalsWeight,
                        Arsenic,
                        Cadmium,
                        Lead,
                        Mercury};
                rowmetalsDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmetalsDTRow);
                return rowmetalsDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                metalsDTDataTable cln = ((metalsDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new metalsDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnAASID = base.Columns["AASID"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnMetalsWeight = base.Columns["MetalsWeight"];
                this.columnArsenic = base.Columns["Arsenic"];
                this.columnCadmium = base.Columns["Cadmium"];
                this.columnLead = base.Columns["Lead"];
                this.columnMercury = base.Columns["Mercury"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnAASID = new global::System.Data.DataColumn("AASID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAASID);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnMetalsWeight = new global::System.Data.DataColumn("MetalsWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalsWeight);
                this.columnArsenic = new global::System.Data.DataColumn("Arsenic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArsenic);
                this.columnCadmium = new global::System.Data.DataColumn("Cadmium", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCadmium);
                this.columnLead = new global::System.Data.DataColumn("Lead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLead);
                this.columnMercury = new global::System.Data.DataColumn("Mercury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMercury);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnAASID.AllowDBNull = false;
                this.columnAASID.MaxLength = 20;
                this.columnMethod.AllowDBNull = false;
                this.columnMethod.MaxLength = 25;
                this.columnTechnique.AllowDBNull = false;
                this.columnTechnique.MaxLength = 20;
                this.columnMetalsWeight.AllowDBNull = false;
                this.columnMetalsWeight.MaxLength = 20;
                this.columnArsenic.AllowDBNull = false;
                this.columnArsenic.MaxLength = 20;
                this.columnCadmium.AllowDBNull = false;
                this.columnCadmium.MaxLength = 20;
                this.columnLead.AllowDBNull = false;
                this.columnLead.MaxLength = 20;
                this.columnMercury.AllowDBNull = false;
                this.columnMercury.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTRow NewmetalsDTRow() {
                return ((metalsDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new metalsDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(metalsDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.metalsDTRowChanged != null)) {
                    this.metalsDTRowChanged(this, new metalsDTRowChangeEvent(((metalsDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.metalsDTRowChanging != null)) {
                    this.metalsDTRowChanging(this, new metalsDTRowChangeEvent(((metalsDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.metalsDTRowDeleted != null)) {
                    this.metalsDTRowDeleted(this, new metalsDTRowChangeEvent(((metalsDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.metalsDTRowDeleting != null)) {
                    this.metalsDTRowDeleting(this, new metalsDTRowChangeEvent(((metalsDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemetalsDTRow(metalsDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "metalsDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class microbialDTDataTable : global::System.Data.TypedTableBase<microbialDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnMicrobialWeight;
            
            private global::System.Data.DataColumn columnAspergillus;
            
            private global::System.Data.DataColumn columnShigaToxin;
            
            private global::System.Data.DataColumn columnSalmonella;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTDataTable() {
                this.TableName = "microbialDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal microbialDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected microbialDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MicrobialWeightColumn {
                get {
                    return this.columnMicrobialWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AspergillusColumn {
                get {
                    return this.columnAspergillus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShigaToxinColumn {
                get {
                    return this.columnShigaToxin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalmonellaColumn {
                get {
                    return this.columnSalmonella;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTRow this[int index] {
                get {
                    return ((microbialDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDTRowChangeEventHandler microbialDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDTRowChangeEventHandler microbialDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDTRowChangeEventHandler microbialDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event microbialDTRowChangeEventHandler microbialDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmicrobialDTRow(microbialDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTRow AddmicrobialDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Method, 
                        string Technique, 
                        string MicrobialWeight, 
                        string Aspergillus, 
                        string ShigaToxin, 
                        string Salmonella) {
                microbialDTRow rowmicrobialDTRow = ((microbialDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Method,
                        Technique,
                        MicrobialWeight,
                        Aspergillus,
                        ShigaToxin,
                        Salmonella};
                rowmicrobialDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmicrobialDTRow);
                return rowmicrobialDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                microbialDTDataTable cln = ((microbialDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new microbialDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnMicrobialWeight = base.Columns["MicrobialWeight"];
                this.columnAspergillus = base.Columns["Aspergillus"];
                this.columnShigaToxin = base.Columns["ShigaToxin"];
                this.columnSalmonella = base.Columns["Salmonella"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnMicrobialWeight = new global::System.Data.DataColumn("MicrobialWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicrobialWeight);
                this.columnAspergillus = new global::System.Data.DataColumn("Aspergillus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAspergillus);
                this.columnShigaToxin = new global::System.Data.DataColumn("ShigaToxin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShigaToxin);
                this.columnSalmonella = new global::System.Data.DataColumn("Salmonella", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalmonella);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnMethod.MaxLength = 25;
                this.columnTechnique.MaxLength = 25;
                this.columnMicrobialWeight.MaxLength = 25;
                this.columnAspergillus.MaxLength = 25;
                this.columnShigaToxin.MaxLength = 25;
                this.columnSalmonella.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTRow NewmicrobialDTRow() {
                return ((microbialDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new microbialDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(microbialDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.microbialDTRowChanged != null)) {
                    this.microbialDTRowChanged(this, new microbialDTRowChangeEvent(((microbialDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.microbialDTRowChanging != null)) {
                    this.microbialDTRowChanging(this, new microbialDTRowChangeEvent(((microbialDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.microbialDTRowDeleted != null)) {
                    this.microbialDTRowDeleted(this, new microbialDTRowChangeEvent(((microbialDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.microbialDTRowDeleting != null)) {
                    this.microbialDTRowDeleting(this, new microbialDTRowChangeEvent(((microbialDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemicrobialDTRow(microbialDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "microbialDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mycotoxinDTDataTable : global::System.Data.TypedTableBase<mycotoxinDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnLCMSID;
            
            private global::System.Data.DataColumn columnMycoWeight;
            
            private global::System.Data.DataColumn columnAB1;
            
            private global::System.Data.DataColumn columnAB2;
            
            private global::System.Data.DataColumn columnAG1;
            
            private global::System.Data.DataColumn columnAG2;
            
            private global::System.Data.DataColumn columnOTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTDataTable() {
                this.TableName = "mycotoxinDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal mycotoxinDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected mycotoxinDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LCMSIDColumn {
                get {
                    return this.columnLCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MycoWeightColumn {
                get {
                    return this.columnMycoWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AB1Column {
                get {
                    return this.columnAB1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AB2Column {
                get {
                    return this.columnAB2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AG1Column {
                get {
                    return this.columnAG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AG2Column {
                get {
                    return this.columnAG2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTAColumn {
                get {
                    return this.columnOTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTRow this[int index] {
                get {
                    return ((mycotoxinDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinDTRowChangeEventHandler mycotoxinDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinDTRowChangeEventHandler mycotoxinDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinDTRowChangeEventHandler mycotoxinDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event mycotoxinDTRowChangeEventHandler mycotoxinDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddmycotoxinDTRow(mycotoxinDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTRow AddmycotoxinDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string Method, 
                        string Technique, 
                        string LCMSID, 
                        string MycoWeight, 
                        string AB1, 
                        string AB2, 
                        string AG1, 
                        string AG2, 
                        string OTA) {
                mycotoxinDTRow rowmycotoxinDTRow = ((mycotoxinDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        Method,
                        Technique,
                        LCMSID,
                        MycoWeight,
                        AB1,
                        AB2,
                        AG1,
                        AG2,
                        OTA};
                rowmycotoxinDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmycotoxinDTRow);
                return rowmycotoxinDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mycotoxinDTDataTable cln = ((mycotoxinDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mycotoxinDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnLCMSID = base.Columns["LCMSID"];
                this.columnMycoWeight = base.Columns["MycoWeight"];
                this.columnAB1 = base.Columns["AB1"];
                this.columnAB2 = base.Columns["AB2"];
                this.columnAG1 = base.Columns["AG1"];
                this.columnAG2 = base.Columns["AG2"];
                this.columnOTA = base.Columns["OTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnLCMSID = new global::System.Data.DataColumn("LCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMSID);
                this.columnMycoWeight = new global::System.Data.DataColumn("MycoWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMycoWeight);
                this.columnAB1 = new global::System.Data.DataColumn("AB1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB1);
                this.columnAB2 = new global::System.Data.DataColumn("AB2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB2);
                this.columnAG1 = new global::System.Data.DataColumn("AG1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG1);
                this.columnAG2 = new global::System.Data.DataColumn("AG2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG2);
                this.columnOTA = new global::System.Data.DataColumn("OTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTA);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnLCMSID.MaxLength = 25;
                this.columnMycoWeight.MaxLength = 25;
                this.columnAB1.MaxLength = 50;
                this.columnAB2.MaxLength = 50;
                this.columnAG1.MaxLength = 50;
                this.columnAG2.MaxLength = 50;
                this.columnOTA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTRow NewmycotoxinDTRow() {
                return ((mycotoxinDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mycotoxinDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mycotoxinDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mycotoxinDTRowChanged != null)) {
                    this.mycotoxinDTRowChanged(this, new mycotoxinDTRowChangeEvent(((mycotoxinDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mycotoxinDTRowChanging != null)) {
                    this.mycotoxinDTRowChanging(this, new mycotoxinDTRowChangeEvent(((mycotoxinDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mycotoxinDTRowDeleted != null)) {
                    this.mycotoxinDTRowDeleted(this, new mycotoxinDTRowChangeEvent(((mycotoxinDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mycotoxinDTRowDeleting != null)) {
                    this.mycotoxinDTRowDeleting(this, new mycotoxinDTRowChangeEvent(((mycotoxinDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovemycotoxinDTRow(mycotoxinDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mycotoxinDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class wADTDataTable : global::System.Data.TypedTableBase<wADTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnAw;
            
            private global::System.Data.DataColumn columnaddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTDataTable() {
                this.TableName = "wADT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal wADTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected wADTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AwColumn {
                get {
                    return this.columnAw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTRow this[int index] {
                get {
                    return ((wADTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADTRowChangeEventHandler wADTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADTRowChangeEventHandler wADTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADTRowChangeEventHandler wADTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event wADTRowChangeEventHandler wADTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddwADTRow(wADTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTRow AddwADTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string Method, 
                        string Technique, 
                        string Aw, 
                        string address) {
                wADTRow rowwADTRow = ((wADTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        Method,
                        Technique,
                        Aw,
                        address};
                rowwADTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowwADTRow);
                return rowwADTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                wADTDataTable cln = ((wADTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new wADTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnAw = base.Columns["Aw"];
                this.columnaddress = base.Columns["address"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnAw = new global::System.Data.DataColumn("Aw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAw);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnAw.MaxLength = 50;
                this.columnaddress.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTRow NewwADTRow() {
                return ((wADTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new wADTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(wADTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.wADTRowChanged != null)) {
                    this.wADTRowChanged(this, new wADTRowChangeEvent(((wADTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.wADTRowChanging != null)) {
                    this.wADTRowChanging(this, new wADTRowChangeEvent(((wADTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.wADTRowDeleted != null)) {
                    this.wADTRowDeleted(this, new wADTRowChangeEvent(((wADTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.wADTRowDeleting != null)) {
                    this.wADTRowDeleting(this, new wADTRowChangeEvent(((wADTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovewADTRow(wADTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "wADTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TerpeneDTDataTable : global::System.Data.TypedTableBase<TerpeneDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnTerpWT;
            
            private global::System.Data.DataColumn columnaPinene;
            
            private global::System.Data.DataColumn columnCamphene;
            
            private global::System.Data.DataColumn columnbMyrcene;
            
            private global::System.Data.DataColumn columnbPinene;
            
            private global::System.Data.DataColumn columnd3Carene;
            
            private global::System.Data.DataColumn columnaTerpinene;
            
            private global::System.Data.DataColumn columnOcimene;
            
            private global::System.Data.DataColumn columnLimonene;
            
            private global::System.Data.DataColumn columnpCymene;
            
            private global::System.Data.DataColumn columnyTerpinene;
            
            private global::System.Data.DataColumn columnTerpinolene;
            
            private global::System.Data.DataColumn columnLinalool;
            
            private global::System.Data.DataColumn columnIsopulegol;
            
            private global::System.Data.DataColumn columnGeraniol;
            
            private global::System.Data.DataColumn columnbCaryophyllene;
            
            private global::System.Data.DataColumn columnaHumulene;
            
            private global::System.Data.DataColumn columnNerolidol;
            
            private global::System.Data.DataColumn columnGuaiol;
            
            private global::System.Data.DataColumn columnaBisabolol;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnlicense;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTDataTable() {
                this.TableName = "TerpeneDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TerpeneDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TerpeneDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpWTColumn {
                get {
                    return this.columnTerpWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aPineneColumn {
                get {
                    return this.columnaPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CampheneColumn {
                get {
                    return this.columnCamphene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bMyrceneColumn {
                get {
                    return this.columnbMyrcene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bPineneColumn {
                get {
                    return this.columnbPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn d3CareneColumn {
                get {
                    return this.columnd3Carene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aTerpineneColumn {
                get {
                    return this.columnaTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OcimeneColumn {
                get {
                    return this.columnOcimene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LimoneneColumn {
                get {
                    return this.columnLimonene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pCymeneColumn {
                get {
                    return this.columnpCymene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn yTerpineneColumn {
                get {
                    return this.columnyTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpinoleneColumn {
                get {
                    return this.columnTerpinolene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LinaloolColumn {
                get {
                    return this.columnLinalool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsopulegolColumn {
                get {
                    return this.columnIsopulegol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GeraniolColumn {
                get {
                    return this.columnGeraniol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bCaryophylleneColumn {
                get {
                    return this.columnbCaryophyllene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aHumuleneColumn {
                get {
                    return this.columnaHumulene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NerolidolColumn {
                get {
                    return this.columnNerolidol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuaiolColumn {
                get {
                    return this.columnGuaiol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aBisabololColumn {
                get {
                    return this.columnaBisabolol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn licenseColumn {
                get {
                    return this.columnlicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTRow this[int index] {
                get {
                    return ((TerpeneDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TerpeneDTRowChangeEventHandler TerpeneDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TerpeneDTRowChangeEventHandler TerpeneDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TerpeneDTRowChangeEventHandler TerpeneDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TerpeneDTRowChangeEventHandler TerpeneDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTerpeneDTRow(TerpeneDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTRow AddTerpeneDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string Method, 
                        string Technique, 
                        string GCMSID, 
                        string TerpWT, 
                        string aPinene, 
                        string Camphene, 
                        string bMyrcene, 
                        string bPinene, 
                        string d3Carene, 
                        string aTerpinene, 
                        string Ocimene, 
                        string Limonene, 
                        string pCymene, 
                        string yTerpinene, 
                        string Terpinolene, 
                        string Linalool, 
                        string Isopulegol, 
                        string Geraniol, 
                        string bCaryophyllene, 
                        string aHumulene, 
                        string Nerolidol, 
                        string Guaiol, 
                        string aBisabolol, 
                        string address, 
                        string license) {
                TerpeneDTRow rowTerpeneDTRow = ((TerpeneDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        Method,
                        Technique,
                        GCMSID,
                        TerpWT,
                        aPinene,
                        Camphene,
                        bMyrcene,
                        bPinene,
                        d3Carene,
                        aTerpinene,
                        Ocimene,
                        Limonene,
                        pCymene,
                        yTerpinene,
                        Terpinolene,
                        Linalool,
                        Isopulegol,
                        Geraniol,
                        bCaryophyllene,
                        aHumulene,
                        Nerolidol,
                        Guaiol,
                        aBisabolol,
                        address,
                        license};
                rowTerpeneDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTerpeneDTRow);
                return rowTerpeneDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TerpeneDTDataTable cln = ((TerpeneDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TerpeneDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnMethod = base.Columns["Method"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnTerpWT = base.Columns["TerpWT"];
                this.columnaPinene = base.Columns["aPinene"];
                this.columnCamphene = base.Columns["Camphene"];
                this.columnbMyrcene = base.Columns["bMyrcene"];
                this.columnbPinene = base.Columns["bPinene"];
                this.columnd3Carene = base.Columns["d3Carene"];
                this.columnaTerpinene = base.Columns["aTerpinene"];
                this.columnOcimene = base.Columns["Ocimene"];
                this.columnLimonene = base.Columns["Limonene"];
                this.columnpCymene = base.Columns["pCymene"];
                this.columnyTerpinene = base.Columns["yTerpinene"];
                this.columnTerpinolene = base.Columns["Terpinolene"];
                this.columnLinalool = base.Columns["Linalool"];
                this.columnIsopulegol = base.Columns["Isopulegol"];
                this.columnGeraniol = base.Columns["Geraniol"];
                this.columnbCaryophyllene = base.Columns["bCaryophyllene"];
                this.columnaHumulene = base.Columns["aHumulene"];
                this.columnNerolidol = base.Columns["Nerolidol"];
                this.columnGuaiol = base.Columns["Guaiol"];
                this.columnaBisabolol = base.Columns["aBisabolol"];
                this.columnaddress = base.Columns["address"];
                this.columnlicense = base.Columns["license"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnTerpWT = new global::System.Data.DataColumn("TerpWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpWT);
                this.columnaPinene = new global::System.Data.DataColumn("aPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaPinene);
                this.columnCamphene = new global::System.Data.DataColumn("Camphene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCamphene);
                this.columnbMyrcene = new global::System.Data.DataColumn("bMyrcene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbMyrcene);
                this.columnbPinene = new global::System.Data.DataColumn("bPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbPinene);
                this.columnd3Carene = new global::System.Data.DataColumn("d3Carene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnd3Carene);
                this.columnaTerpinene = new global::System.Data.DataColumn("aTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaTerpinene);
                this.columnOcimene = new global::System.Data.DataColumn("Ocimene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcimene);
                this.columnLimonene = new global::System.Data.DataColumn("Limonene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimonene);
                this.columnpCymene = new global::System.Data.DataColumn("pCymene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpCymene);
                this.columnyTerpinene = new global::System.Data.DataColumn("yTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyTerpinene);
                this.columnTerpinolene = new global::System.Data.DataColumn("Terpinolene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpinolene);
                this.columnLinalool = new global::System.Data.DataColumn("Linalool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinalool);
                this.columnIsopulegol = new global::System.Data.DataColumn("Isopulegol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsopulegol);
                this.columnGeraniol = new global::System.Data.DataColumn("Geraniol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeraniol);
                this.columnbCaryophyllene = new global::System.Data.DataColumn("bCaryophyllene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbCaryophyllene);
                this.columnaHumulene = new global::System.Data.DataColumn("aHumulene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaHumulene);
                this.columnNerolidol = new global::System.Data.DataColumn("Nerolidol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNerolidol);
                this.columnGuaiol = new global::System.Data.DataColumn("Guaiol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuaiol);
                this.columnaBisabolol = new global::System.Data.DataColumn("aBisabolol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaBisabolol);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnlicense = new global::System.Data.DataColumn("license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicense);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnMethod.MaxLength = 50;
                this.columnTechnique.MaxLength = 50;
                this.columnGCMSID.MaxLength = 50;
                this.columnTerpWT.MaxLength = 50;
                this.columnaPinene.MaxLength = 50;
                this.columnCamphene.MaxLength = 50;
                this.columnbMyrcene.MaxLength = 50;
                this.columnbPinene.MaxLength = 50;
                this.columnd3Carene.MaxLength = 50;
                this.columnaTerpinene.MaxLength = 50;
                this.columnOcimene.MaxLength = 50;
                this.columnLimonene.MaxLength = 50;
                this.columnpCymene.MaxLength = 50;
                this.columnyTerpinene.MaxLength = 50;
                this.columnTerpinolene.MaxLength = 50;
                this.columnLinalool.MaxLength = 50;
                this.columnIsopulegol.MaxLength = 50;
                this.columnGeraniol.MaxLength = 50;
                this.columnbCaryophyllene.MaxLength = 50;
                this.columnaHumulene.MaxLength = 50;
                this.columnNerolidol.MaxLength = 50;
                this.columnGuaiol.MaxLength = 50;
                this.columnaBisabolol.MaxLength = 50;
                this.columnaddress.MaxLength = 2147483647;
                this.columnlicense.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTRow NewTerpeneDTRow() {
                return ((TerpeneDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TerpeneDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TerpeneDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TerpeneDTRowChanged != null)) {
                    this.TerpeneDTRowChanged(this, new TerpeneDTRowChangeEvent(((TerpeneDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TerpeneDTRowChanging != null)) {
                    this.TerpeneDTRowChanging(this, new TerpeneDTRowChangeEvent(((TerpeneDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TerpeneDTRowDeleted != null)) {
                    this.TerpeneDTRowDeleted(this, new TerpeneDTRowChangeEvent(((TerpeneDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TerpeneDTRowDeleting != null)) {
                    this.TerpeneDTRowDeleting(this, new TerpeneDTRowChangeEvent(((TerpeneDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTerpeneDTRow(TerpeneDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TerpeneDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class complianceDTDataTable : global::System.Data.TypedTableBase<complianceDTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnSAMPLEID;
            
            private global::System.Data.DataColumn columnCHEMIST;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnSAMPLENAME;
            
            private global::System.Data.DataColumn columnSAMPLETYPE;
            
            private global::System.Data.DataColumn columnDISTRIBUTOR;
            
            private global::System.Data.DataColumn columnPRODUCER;
            
            private global::System.Data.DataColumn columnSAMPLEDATE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBATCHID;
            
            private global::System.Data.DataColumn columnBATCHSIZE;
            
            private global::System.Data.DataColumn columnSAMPLESIZE;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSampleImage;
            
            private global::System.Data.DataColumn columnTotalCBD;
            
            private global::System.Data.DataColumn columnTotalTHC;
            
            private global::System.Data.DataColumn columnTEST;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnCBCP;
            
            private global::System.Data.DataColumn columnTHCAP;
            
            private global::System.Data.DataColumn columnD8THCP;
            
            private global::System.Data.DataColumn columnD9THCP;
            
            private global::System.Data.DataColumn columnCBGAP;
            
            private global::System.Data.DataColumn columnCBNP;
            
            private global::System.Data.DataColumn columnCBDAP;
            
            private global::System.Data.DataColumn columnTHCVP;
            
            private global::System.Data.DataColumn columnCBGP;
            
            private global::System.Data.DataColumn columnCBDP;
            
            private global::System.Data.DataColumn columnCBDVP;
            
            private global::System.Data.DataColumn columnTargetCBD;
            
            private global::System.Data.DataColumn columnTargetTHC;
            
            private global::System.Data.DataColumn columnWETWEIGHT;
            
            private global::System.Data.DataColumn columnHPLCWEIGHT;
            
            private global::System.Data.DataColumn columnDRYWEIGHT;
            
            private global::System.Data.DataColumn columnCBC;
            
            private global::System.Data.DataColumn columnTHCA;
            
            private global::System.Data.DataColumn columnD8THC;
            
            private global::System.Data.DataColumn columnD9THC;
            
            private global::System.Data.DataColumn columnCBGA;
            
            private global::System.Data.DataColumn columnCBN;
            
            private global::System.Data.DataColumn columnCBDA;
            
            private global::System.Data.DataColumn columnTHCV;
            
            private global::System.Data.DataColumn columnCBD;
            
            private global::System.Data.DataColumn columnCBG;
            
            private global::System.Data.DataColumn columnCBDV;
            
            private global::System.Data.DataColumn columnPotencyID;
            
            private global::System.Data.DataColumn columnlicense;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnLCMSID;
            
            private global::System.Data.DataColumn columnGCMSID;
            
            private global::System.Data.DataColumn columnPestInputWt;
            
            private global::System.Data.DataColumn columnAbamectin;
            
            private global::System.Data.DataColumn columnAcephate;
            
            private global::System.Data.DataColumn columnAcequinocyl;
            
            private global::System.Data.DataColumn columnAcetamiprid;
            
            private global::System.Data.DataColumn columnAldicarb;
            
            private global::System.Data.DataColumn columnAzoxystrobin;
            
            private global::System.Data.DataColumn columnBifenazate;
            
            private global::System.Data.DataColumn columnBifenthrin;
            
            private global::System.Data.DataColumn columnBoscalid;
            
            private global::System.Data.DataColumn columnCaptan;
            
            private global::System.Data.DataColumn columnCarbaryl;
            
            private global::System.Data.DataColumn columnCarbofuran;
            
            private global::System.Data.DataColumn columnChlorantranilprole;
            
            private global::System.Data.DataColumn columnChlordane;
            
            private global::System.Data.DataColumn columnChlorfenapyr;
            
            private global::System.Data.DataColumn columnChlorpyrifos;
            
            private global::System.Data.DataColumn columnClofentezine;
            
            private global::System.Data.DataColumn columnCoumaphos;
            
            private global::System.Data.DataColumn columnCyfluthrin;
            
            private global::System.Data.DataColumn columnCypermethrin;
            
            private global::System.Data.DataColumn columnDaminozide;
            
            private global::System.Data.DataColumn columnDichlorvos;
            
            private global::System.Data.DataColumn columnDiazinon;
            
            private global::System.Data.DataColumn columnDimethoate;
            
            private global::System.Data.DataColumn columnDimethomorph;
            
            private global::System.Data.DataColumn columnEthoprophos;
            
            private global::System.Data.DataColumn columnEtofenprox;
            
            private global::System.Data.DataColumn columnEtoxazole;
            
            private global::System.Data.DataColumn columnFenhexamid;
            
            private global::System.Data.DataColumn columnFenoxycarb;
            
            private global::System.Data.DataColumn columnFenpyroximate;
            
            private global::System.Data.DataColumn columnFipronil;
            
            private global::System.Data.DataColumn columnFlonicamid;
            
            private global::System.Data.DataColumn columnFludioxonil;
            
            private global::System.Data.DataColumn columnHexythiazox;
            
            private global::System.Data.DataColumn columnImazalil;
            
            private global::System.Data.DataColumn columnImidacloprid;
            
            private global::System.Data.DataColumn columnKresoximMethyl;
            
            private global::System.Data.DataColumn columnMalathion;
            
            private global::System.Data.DataColumn columnMetalaxyl;
            
            private global::System.Data.DataColumn columnMethiocarb;
            
            private global::System.Data.DataColumn columnMethomyl;
            
            private global::System.Data.DataColumn columnMethylParathion;
            
            private global::System.Data.DataColumn columnMevinphos;
            
            private global::System.Data.DataColumn columnMyclobutanil;
            
            private global::System.Data.DataColumn columnNaled;
            
            private global::System.Data.DataColumn columnOxamyl;
            
            private global::System.Data.DataColumn columnPentachloronitrobenzene;
            
            private global::System.Data.DataColumn columnPermethrins;
            
            private global::System.Data.DataColumn columnPhosmet;
            
            private global::System.Data.DataColumn columnPiperonylButoxide;
            
            private global::System.Data.DataColumn columnPrallethrin;
            
            private global::System.Data.DataColumn columnPropiconazole;
            
            private global::System.Data.DataColumn columnPropoxur;
            
            private global::System.Data.DataColumn columnPyrethrins;
            
            private global::System.Data.DataColumn columnPyridaben;
            
            private global::System.Data.DataColumn columnSpinetoramJ;
            
            private global::System.Data.DataColumn columnSpinetoramL;
            
            private global::System.Data.DataColumn columnSpinosadA;
            
            private global::System.Data.DataColumn columnSpinosadD;
            
            private global::System.Data.DataColumn columnSpiromesifen;
            
            private global::System.Data.DataColumn columnSpirotetramat;
            
            private global::System.Data.DataColumn columnSpiroxamine;
            
            private global::System.Data.DataColumn columnTebuconazole;
            
            private global::System.Data.DataColumn columnThiacloprid;
            
            private global::System.Data.DataColumn columnThiamethoxam;
            
            private global::System.Data.DataColumn columnTrifloxystrobin;
            
            private global::System.Data.DataColumn columnPaclobutrazol;
            
            private global::System.Data.DataColumn columnAASID;
            
            private global::System.Data.DataColumn columnTechnique;
            
            private global::System.Data.DataColumn columnMetalsWeight;
            
            private global::System.Data.DataColumn columnArsenic;
            
            private global::System.Data.DataColumn columnCadmium;
            
            private global::System.Data.DataColumn columnLead;
            
            private global::System.Data.DataColumn columnMercury;
            
            private global::System.Data.DataColumn columnMicrobialWeight;
            
            private global::System.Data.DataColumn columnAspergillus;
            
            private global::System.Data.DataColumn columnShigaToxin;
            
            private global::System.Data.DataColumn columnSalmonella;
            
            private global::System.Data.DataColumn columnTerpWT;
            
            private global::System.Data.DataColumn columnaPinene;
            
            private global::System.Data.DataColumn columnCamphene;
            
            private global::System.Data.DataColumn columnbMyrcene;
            
            private global::System.Data.DataColumn columnbPinene;
            
            private global::System.Data.DataColumn columnd3Carene;
            
            private global::System.Data.DataColumn columnaTerpinene;
            
            private global::System.Data.DataColumn columnOcimene;
            
            private global::System.Data.DataColumn columnLimonene;
            
            private global::System.Data.DataColumn columnpCymene;
            
            private global::System.Data.DataColumn columnyTerpinene;
            
            private global::System.Data.DataColumn columnTerpinolene;
            
            private global::System.Data.DataColumn columnLinalool;
            
            private global::System.Data.DataColumn columnIsopulegol;
            
            private global::System.Data.DataColumn columnGeraniol;
            
            private global::System.Data.DataColumn columnbCaryophyllene;
            
            private global::System.Data.DataColumn columnaHumulene;
            
            private global::System.Data.DataColumn columnNerolidol;
            
            private global::System.Data.DataColumn columnGuaiol;
            
            private global::System.Data.DataColumn columnaBisabolol;
            
            private global::System.Data.DataColumn columnAw;
            
            private global::System.Data.DataColumn columnSampleIdPesticides;
            
            private global::System.Data.DataColumn columnMethodMetals;
            
            private global::System.Data.DataColumn columnTechniqueMicrobial;
            
            private global::System.Data.DataColumn columnMethodMicrobial;
            
            private global::System.Data.DataColumn columnMethodTerpenes;
            
            private global::System.Data.DataColumn columnTechniqueTerpenes;
            
            private global::System.Data.DataColumn columnGCMSIdTerpenes;
            
            private global::System.Data.DataColumn columnMethodAw;
            
            private global::System.Data.DataColumn columnTechniqueAw;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTDataTable() {
                this.TableName = "complianceDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal complianceDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected complianceDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEIDColumn {
                get {
                    return this.columnSAMPLEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHEMISTColumn {
                get {
                    return this.columnCHEMIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLENAMEColumn {
                get {
                    return this.columnSAMPLENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLETYPEColumn {
                get {
                    return this.columnSAMPLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISTRIBUTORColumn {
                get {
                    return this.columnDISTRIBUTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCERColumn {
                get {
                    return this.columnPRODUCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLEDATEColumn {
                get {
                    return this.columnSAMPLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHIDColumn {
                get {
                    return this.columnBATCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BATCHSIZEColumn {
                get {
                    return this.columnBATCHSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAMPLESIZEColumn {
                get {
                    return this.columnSAMPLESIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleImageColumn {
                get {
                    return this.columnSampleImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalCBDColumn {
                get {
                    return this.columnTotalCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTHCColumn {
                get {
                    return this.columnTotalTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TESTColumn {
                get {
                    return this.columnTEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCPColumn {
                get {
                    return this.columnCBCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAPColumn {
                get {
                    return this.columnTHCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCPColumn {
                get {
                    return this.columnD8THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCPColumn {
                get {
                    return this.columnD9THCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAPColumn {
                get {
                    return this.columnCBGAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNPColumn {
                get {
                    return this.columnCBNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAPColumn {
                get {
                    return this.columnCBDAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVPColumn {
                get {
                    return this.columnTHCVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGPColumn {
                get {
                    return this.columnCBGP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDPColumn {
                get {
                    return this.columnCBDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVPColumn {
                get {
                    return this.columnCBDVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TargetCBDColumn {
                get {
                    return this.columnTargetCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TargetTHCColumn {
                get {
                    return this.columnTargetTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WETWEIGHTColumn {
                get {
                    return this.columnWETWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HPLCWEIGHTColumn {
                get {
                    return this.columnHPLCWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DRYWEIGHTColumn {
                get {
                    return this.columnDRYWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBCColumn {
                get {
                    return this.columnCBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCAColumn {
                get {
                    return this.columnTHCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D8THCColumn {
                get {
                    return this.columnD8THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D9THCColumn {
                get {
                    return this.columnD9THC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGAColumn {
                get {
                    return this.columnCBGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBNColumn {
                get {
                    return this.columnCBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDAColumn {
                get {
                    return this.columnCBDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn THCVColumn {
                get {
                    return this.columnTHCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDColumn {
                get {
                    return this.columnCBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBGColumn {
                get {
                    return this.columnCBG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CBDVColumn {
                get {
                    return this.columnCBDV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PotencyIDColumn {
                get {
                    return this.columnPotencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn licenseColumn {
                get {
                    return this.columnlicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LCMSIDColumn {
                get {
                    return this.columnLCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIDColumn {
                get {
                    return this.columnGCMSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PestInputWtColumn {
                get {
                    return this.columnPestInputWt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AbamectinColumn {
                get {
                    return this.columnAbamectin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcephateColumn {
                get {
                    return this.columnAcephate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcequinocylColumn {
                get {
                    return this.columnAcequinocyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AcetamipridColumn {
                get {
                    return this.columnAcetamiprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AldicarbColumn {
                get {
                    return this.columnAldicarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AzoxystrobinColumn {
                get {
                    return this.columnAzoxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenazateColumn {
                get {
                    return this.columnBifenazate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BifenthrinColumn {
                get {
                    return this.columnBifenthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BoscalidColumn {
                get {
                    return this.columnBoscalid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CaptanColumn {
                get {
                    return this.columnCaptan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbarylColumn {
                get {
                    return this.columnCarbaryl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CarbofuranColumn {
                get {
                    return this.columnCarbofuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorantranilproleColumn {
                get {
                    return this.columnChlorantranilprole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlordaneColumn {
                get {
                    return this.columnChlordane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorfenapyrColumn {
                get {
                    return this.columnChlorfenapyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChlorpyrifosColumn {
                get {
                    return this.columnChlorpyrifos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClofentezineColumn {
                get {
                    return this.columnClofentezine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CoumaphosColumn {
                get {
                    return this.columnCoumaphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CyfluthrinColumn {
                get {
                    return this.columnCyfluthrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CypermethrinColumn {
                get {
                    return this.columnCypermethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DaminozideColumn {
                get {
                    return this.columnDaminozide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DichlorvosColumn {
                get {
                    return this.columnDichlorvos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiazinonColumn {
                get {
                    return this.columnDiazinon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethoateColumn {
                get {
                    return this.columnDimethoate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DimethomorphColumn {
                get {
                    return this.columnDimethomorph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EthoprophosColumn {
                get {
                    return this.columnEthoprophos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtofenproxColumn {
                get {
                    return this.columnEtofenprox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EtoxazoleColumn {
                get {
                    return this.columnEtoxazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenhexamidColumn {
                get {
                    return this.columnFenhexamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenoxycarbColumn {
                get {
                    return this.columnFenoxycarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FenpyroximateColumn {
                get {
                    return this.columnFenpyroximate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FipronilColumn {
                get {
                    return this.columnFipronil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FlonicamidColumn {
                get {
                    return this.columnFlonicamid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FludioxonilColumn {
                get {
                    return this.columnFludioxonil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HexythiazoxColumn {
                get {
                    return this.columnHexythiazox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImazalilColumn {
                get {
                    return this.columnImazalil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImidaclopridColumn {
                get {
                    return this.columnImidacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KresoximMethylColumn {
                get {
                    return this.columnKresoximMethyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MalathionColumn {
                get {
                    return this.columnMalathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalaxylColumn {
                get {
                    return this.columnMetalaxyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethiocarbColumn {
                get {
                    return this.columnMethiocarb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethomylColumn {
                get {
                    return this.columnMethomyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethylParathionColumn {
                get {
                    return this.columnMethylParathion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MevinphosColumn {
                get {
                    return this.columnMevinphos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MyclobutanilColumn {
                get {
                    return this.columnMyclobutanil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NaledColumn {
                get {
                    return this.columnNaled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OxamylColumn {
                get {
                    return this.columnOxamyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PentachloronitrobenzeneColumn {
                get {
                    return this.columnPentachloronitrobenzene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermethrinsColumn {
                get {
                    return this.columnPermethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhosmetColumn {
                get {
                    return this.columnPhosmet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PiperonylButoxideColumn {
                get {
                    return this.columnPiperonylButoxide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrallethrinColumn {
                get {
                    return this.columnPrallethrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropiconazoleColumn {
                get {
                    return this.columnPropiconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PropoxurColumn {
                get {
                    return this.columnPropoxur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyrethrinsColumn {
                get {
                    return this.columnPyrethrins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PyridabenColumn {
                get {
                    return this.columnPyridaben;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramJColumn {
                get {
                    return this.columnSpinetoramJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinetoramLColumn {
                get {
                    return this.columnSpinetoramL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadAColumn {
                get {
                    return this.columnSpinosadA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpinosadDColumn {
                get {
                    return this.columnSpinosadD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiromesifenColumn {
                get {
                    return this.columnSpiromesifen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpirotetramatColumn {
                get {
                    return this.columnSpirotetramat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpiroxamineColumn {
                get {
                    return this.columnSpiroxamine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TebuconazoleColumn {
                get {
                    return this.columnTebuconazole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiaclopridColumn {
                get {
                    return this.columnThiacloprid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThiamethoxamColumn {
                get {
                    return this.columnThiamethoxam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrifloxystrobinColumn {
                get {
                    return this.columnTrifloxystrobin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaclobutrazolColumn {
                get {
                    return this.columnPaclobutrazol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AASIDColumn {
                get {
                    return this.columnAASID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueColumn {
                get {
                    return this.columnTechnique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MetalsWeightColumn {
                get {
                    return this.columnMetalsWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArsenicColumn {
                get {
                    return this.columnArsenic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CadmiumColumn {
                get {
                    return this.columnCadmium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LeadColumn {
                get {
                    return this.columnLead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MercuryColumn {
                get {
                    return this.columnMercury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MicrobialWeightColumn {
                get {
                    return this.columnMicrobialWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AspergillusColumn {
                get {
                    return this.columnAspergillus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShigaToxinColumn {
                get {
                    return this.columnShigaToxin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalmonellaColumn {
                get {
                    return this.columnSalmonella;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpWTColumn {
                get {
                    return this.columnTerpWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aPineneColumn {
                get {
                    return this.columnaPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CampheneColumn {
                get {
                    return this.columnCamphene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bMyrceneColumn {
                get {
                    return this.columnbMyrcene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bPineneColumn {
                get {
                    return this.columnbPinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn d3CareneColumn {
                get {
                    return this.columnd3Carene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aTerpineneColumn {
                get {
                    return this.columnaTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OcimeneColumn {
                get {
                    return this.columnOcimene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LimoneneColumn {
                get {
                    return this.columnLimonene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pCymeneColumn {
                get {
                    return this.columnpCymene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn yTerpineneColumn {
                get {
                    return this.columnyTerpinene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TerpinoleneColumn {
                get {
                    return this.columnTerpinolene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LinaloolColumn {
                get {
                    return this.columnLinalool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsopulegolColumn {
                get {
                    return this.columnIsopulegol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GeraniolColumn {
                get {
                    return this.columnGeraniol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bCaryophylleneColumn {
                get {
                    return this.columnbCaryophyllene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aHumuleneColumn {
                get {
                    return this.columnaHumulene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NerolidolColumn {
                get {
                    return this.columnNerolidol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuaiolColumn {
                get {
                    return this.columnGuaiol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aBisabololColumn {
                get {
                    return this.columnaBisabolol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AwColumn {
                get {
                    return this.columnAw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SampleIdPesticidesColumn {
                get {
                    return this.columnSampleIdPesticides;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodMetalsColumn {
                get {
                    return this.columnMethodMetals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueMicrobialColumn {
                get {
                    return this.columnTechniqueMicrobial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodMicrobialColumn {
                get {
                    return this.columnMethodMicrobial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodTerpenesColumn {
                get {
                    return this.columnMethodTerpenes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueTerpenesColumn {
                get {
                    return this.columnTechniqueTerpenes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GCMSIdTerpenesColumn {
                get {
                    return this.columnGCMSIdTerpenes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodAwColumn {
                get {
                    return this.columnMethodAw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechniqueAwColumn {
                get {
                    return this.columnTechniqueAw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTRow this[int index] {
                get {
                    return ((complianceDTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event complianceDTRowChangeEventHandler complianceDTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event complianceDTRowChangeEventHandler complianceDTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event complianceDTRowChangeEventHandler complianceDTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event complianceDTRowChangeEventHandler complianceDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddcomplianceDTRow(complianceDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTRow AddcomplianceDTRow(
                        System.DateTime DATE, 
                        string SAMPLEID, 
                        string CHEMIST, 
                        string CUSTOMER, 
                        string EMAIL, 
                        string SAMPLENAME, 
                        string SAMPLETYPE, 
                        string DISTRIBUTOR, 
                        string PRODUCER, 
                        System.DateTime SAMPLEDATE, 
                        string LOCATION, 
                        string BATCHID, 
                        string BATCHSIZE, 
                        string SAMPLESIZE, 
                        string Remarks, 
                        byte[] SampleImage, 
                        string TotalCBD, 
                        string TotalTHC, 
                        string TEST, 
                        string METHOD, 
                        string CBCP, 
                        string THCAP, 
                        string D8THCP, 
                        string D9THCP, 
                        string CBGAP, 
                        string CBNP, 
                        string CBDAP, 
                        string THCVP, 
                        string CBGP, 
                        string CBDP, 
                        string CBDVP, 
                        double TargetCBD, 
                        double TargetTHC, 
                        double WETWEIGHT, 
                        double HPLCWEIGHT, 
                        double DRYWEIGHT, 
                        double CBC, 
                        double THCA, 
                        double D8THC, 
                        double D9THC, 
                        double CBGA, 
                        double CBN, 
                        double CBDA, 
                        double THCV, 
                        double CBD, 
                        double CBG, 
                        double CBDV, 
                        string PotencyID, 
                        string license, 
                        string address, 
                        string LCMSID, 
                        string GCMSID, 
                        string PestInputWt, 
                        string Abamectin, 
                        string Acephate, 
                        string Acequinocyl, 
                        string Acetamiprid, 
                        string Aldicarb, 
                        string Azoxystrobin, 
                        string Bifenazate, 
                        string Bifenthrin, 
                        string Boscalid, 
                        string Captan, 
                        string Carbaryl, 
                        string Carbofuran, 
                        string Chlorantranilprole, 
                        string Chlordane, 
                        string Chlorfenapyr, 
                        string Chlorpyrifos, 
                        string Clofentezine, 
                        string Coumaphos, 
                        string Cyfluthrin, 
                        string Cypermethrin, 
                        string Daminozide, 
                        string Dichlorvos, 
                        string Diazinon, 
                        string Dimethoate, 
                        string Dimethomorph, 
                        string Ethoprophos, 
                        string Etofenprox, 
                        string Etoxazole, 
                        string Fenhexamid, 
                        string Fenoxycarb, 
                        string Fenpyroximate, 
                        string Fipronil, 
                        string Flonicamid, 
                        string Fludioxonil, 
                        string Hexythiazox, 
                        string Imazalil, 
                        string Imidacloprid, 
                        string KresoximMethyl, 
                        string Malathion, 
                        string Metalaxyl, 
                        string Methiocarb, 
                        string Methomyl, 
                        string MethylParathion, 
                        string Mevinphos, 
                        string Myclobutanil, 
                        string Naled, 
                        string Oxamyl, 
                        string Pentachloronitrobenzene, 
                        string Permethrins, 
                        string Phosmet, 
                        string PiperonylButoxide, 
                        string Prallethrin, 
                        string Propiconazole, 
                        string Propoxur, 
                        string Pyrethrins, 
                        string Pyridaben, 
                        string SpinetoramJ, 
                        string SpinetoramL, 
                        string SpinosadA, 
                        string SpinosadD, 
                        string Spiromesifen, 
                        string Spirotetramat, 
                        string Spiroxamine, 
                        string Tebuconazole, 
                        string Thiacloprid, 
                        string Thiamethoxam, 
                        string Trifloxystrobin, 
                        string Paclobutrazol, 
                        string AASID, 
                        string Technique, 
                        string MetalsWeight, 
                        string Arsenic, 
                        string Cadmium, 
                        string Lead, 
                        string Mercury, 
                        string MicrobialWeight, 
                        string Aspergillus, 
                        string ShigaToxin, 
                        string Salmonella, 
                        string TerpWT, 
                        string aPinene, 
                        string Camphene, 
                        string bMyrcene, 
                        string bPinene, 
                        string d3Carene, 
                        string aTerpinene, 
                        string Ocimene, 
                        string Limonene, 
                        string pCymene, 
                        string yTerpinene, 
                        string Terpinolene, 
                        string Linalool, 
                        string Isopulegol, 
                        string Geraniol, 
                        string bCaryophyllene, 
                        string aHumulene, 
                        string Nerolidol, 
                        string Guaiol, 
                        string aBisabolol, 
                        string Aw, 
                        string SampleIdPesticides, 
                        string MethodMetals, 
                        string TechniqueMicrobial, 
                        string MethodMicrobial, 
                        string MethodTerpenes, 
                        string TechniqueTerpenes, 
                        string GCMSIdTerpenes, 
                        string MethodAw, 
                        string TechniqueAw) {
                complianceDTRow rowcomplianceDTRow = ((complianceDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        SAMPLEID,
                        CHEMIST,
                        CUSTOMER,
                        EMAIL,
                        SAMPLENAME,
                        SAMPLETYPE,
                        DISTRIBUTOR,
                        PRODUCER,
                        SAMPLEDATE,
                        LOCATION,
                        BATCHID,
                        BATCHSIZE,
                        SAMPLESIZE,
                        Remarks,
                        SampleImage,
                        TotalCBD,
                        TotalTHC,
                        TEST,
                        METHOD,
                        CBCP,
                        THCAP,
                        D8THCP,
                        D9THCP,
                        CBGAP,
                        CBNP,
                        CBDAP,
                        THCVP,
                        CBGP,
                        CBDP,
                        CBDVP,
                        TargetCBD,
                        TargetTHC,
                        WETWEIGHT,
                        HPLCWEIGHT,
                        DRYWEIGHT,
                        CBC,
                        THCA,
                        D8THC,
                        D9THC,
                        CBGA,
                        CBN,
                        CBDA,
                        THCV,
                        CBD,
                        CBG,
                        CBDV,
                        PotencyID,
                        license,
                        address,
                        LCMSID,
                        GCMSID,
                        PestInputWt,
                        Abamectin,
                        Acephate,
                        Acequinocyl,
                        Acetamiprid,
                        Aldicarb,
                        Azoxystrobin,
                        Bifenazate,
                        Bifenthrin,
                        Boscalid,
                        Captan,
                        Carbaryl,
                        Carbofuran,
                        Chlorantranilprole,
                        Chlordane,
                        Chlorfenapyr,
                        Chlorpyrifos,
                        Clofentezine,
                        Coumaphos,
                        Cyfluthrin,
                        Cypermethrin,
                        Daminozide,
                        Dichlorvos,
                        Diazinon,
                        Dimethoate,
                        Dimethomorph,
                        Ethoprophos,
                        Etofenprox,
                        Etoxazole,
                        Fenhexamid,
                        Fenoxycarb,
                        Fenpyroximate,
                        Fipronil,
                        Flonicamid,
                        Fludioxonil,
                        Hexythiazox,
                        Imazalil,
                        Imidacloprid,
                        KresoximMethyl,
                        Malathion,
                        Metalaxyl,
                        Methiocarb,
                        Methomyl,
                        MethylParathion,
                        Mevinphos,
                        Myclobutanil,
                        Naled,
                        Oxamyl,
                        Pentachloronitrobenzene,
                        Permethrins,
                        Phosmet,
                        PiperonylButoxide,
                        Prallethrin,
                        Propiconazole,
                        Propoxur,
                        Pyrethrins,
                        Pyridaben,
                        SpinetoramJ,
                        SpinetoramL,
                        SpinosadA,
                        SpinosadD,
                        Spiromesifen,
                        Spirotetramat,
                        Spiroxamine,
                        Tebuconazole,
                        Thiacloprid,
                        Thiamethoxam,
                        Trifloxystrobin,
                        Paclobutrazol,
                        AASID,
                        Technique,
                        MetalsWeight,
                        Arsenic,
                        Cadmium,
                        Lead,
                        Mercury,
                        MicrobialWeight,
                        Aspergillus,
                        ShigaToxin,
                        Salmonella,
                        TerpWT,
                        aPinene,
                        Camphene,
                        bMyrcene,
                        bPinene,
                        d3Carene,
                        aTerpinene,
                        Ocimene,
                        Limonene,
                        pCymene,
                        yTerpinene,
                        Terpinolene,
                        Linalool,
                        Isopulegol,
                        Geraniol,
                        bCaryophyllene,
                        aHumulene,
                        Nerolidol,
                        Guaiol,
                        aBisabolol,
                        Aw,
                        SampleIdPesticides,
                        MethodMetals,
                        TechniqueMicrobial,
                        MethodMicrobial,
                        MethodTerpenes,
                        TechniqueTerpenes,
                        GCMSIdTerpenes,
                        MethodAw,
                        TechniqueAw};
                rowcomplianceDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcomplianceDTRow);
                return rowcomplianceDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                complianceDTDataTable cln = ((complianceDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new complianceDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATE = base.Columns["DATE"];
                this.columnSAMPLEID = base.Columns["SAMPLEID"];
                this.columnCHEMIST = base.Columns["CHEMIST"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnSAMPLENAME = base.Columns["SAMPLENAME"];
                this.columnSAMPLETYPE = base.Columns["SAMPLETYPE"];
                this.columnDISTRIBUTOR = base.Columns["DISTRIBUTOR"];
                this.columnPRODUCER = base.Columns["PRODUCER"];
                this.columnSAMPLEDATE = base.Columns["SAMPLEDATE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBATCHID = base.Columns["BATCHID"];
                this.columnBATCHSIZE = base.Columns["BATCHSIZE"];
                this.columnSAMPLESIZE = base.Columns["SAMPLESIZE"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSampleImage = base.Columns["SampleImage"];
                this.columnTotalCBD = base.Columns["TotalCBD"];
                this.columnTotalTHC = base.Columns["TotalTHC"];
                this.columnTEST = base.Columns["TEST"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnCBCP = base.Columns["CBCP"];
                this.columnTHCAP = base.Columns["THCAP"];
                this.columnD8THCP = base.Columns["D8THCP"];
                this.columnD9THCP = base.Columns["D9THCP"];
                this.columnCBGAP = base.Columns["CBGAP"];
                this.columnCBNP = base.Columns["CBNP"];
                this.columnCBDAP = base.Columns["CBDAP"];
                this.columnTHCVP = base.Columns["THCVP"];
                this.columnCBGP = base.Columns["CBGP"];
                this.columnCBDP = base.Columns["CBDP"];
                this.columnCBDVP = base.Columns["CBDVP"];
                this.columnTargetCBD = base.Columns["TargetCBD"];
                this.columnTargetTHC = base.Columns["TargetTHC"];
                this.columnWETWEIGHT = base.Columns["WETWEIGHT"];
                this.columnHPLCWEIGHT = base.Columns["HPLCWEIGHT"];
                this.columnDRYWEIGHT = base.Columns["DRYWEIGHT"];
                this.columnCBC = base.Columns["CBC"];
                this.columnTHCA = base.Columns["THCA"];
                this.columnD8THC = base.Columns["D8THC"];
                this.columnD9THC = base.Columns["D9THC"];
                this.columnCBGA = base.Columns["CBGA"];
                this.columnCBN = base.Columns["CBN"];
                this.columnCBDA = base.Columns["CBDA"];
                this.columnTHCV = base.Columns["THCV"];
                this.columnCBD = base.Columns["CBD"];
                this.columnCBG = base.Columns["CBG"];
                this.columnCBDV = base.Columns["CBDV"];
                this.columnPotencyID = base.Columns["PotencyID"];
                this.columnlicense = base.Columns["license"];
                this.columnaddress = base.Columns["address"];
                this.columnLCMSID = base.Columns["LCMSID"];
                this.columnGCMSID = base.Columns["GCMSID"];
                this.columnPestInputWt = base.Columns["PestInputWt"];
                this.columnAbamectin = base.Columns["Abamectin"];
                this.columnAcephate = base.Columns["Acephate"];
                this.columnAcequinocyl = base.Columns["Acequinocyl"];
                this.columnAcetamiprid = base.Columns["Acetamiprid"];
                this.columnAldicarb = base.Columns["Aldicarb"];
                this.columnAzoxystrobin = base.Columns["Azoxystrobin"];
                this.columnBifenazate = base.Columns["Bifenazate"];
                this.columnBifenthrin = base.Columns["Bifenthrin"];
                this.columnBoscalid = base.Columns["Boscalid"];
                this.columnCaptan = base.Columns["Captan"];
                this.columnCarbaryl = base.Columns["Carbaryl"];
                this.columnCarbofuran = base.Columns["Carbofuran"];
                this.columnChlorantranilprole = base.Columns["Chlorantranilprole"];
                this.columnChlordane = base.Columns["Chlordane"];
                this.columnChlorfenapyr = base.Columns["Chlorfenapyr"];
                this.columnChlorpyrifos = base.Columns["Chlorpyrifos"];
                this.columnClofentezine = base.Columns["Clofentezine"];
                this.columnCoumaphos = base.Columns["Coumaphos"];
                this.columnCyfluthrin = base.Columns["Cyfluthrin"];
                this.columnCypermethrin = base.Columns["Cypermethrin"];
                this.columnDaminozide = base.Columns["Daminozide"];
                this.columnDichlorvos = base.Columns["Dichlorvos"];
                this.columnDiazinon = base.Columns["Diazinon"];
                this.columnDimethoate = base.Columns["Dimethoate"];
                this.columnDimethomorph = base.Columns["Dimethomorph"];
                this.columnEthoprophos = base.Columns["Ethoprophos"];
                this.columnEtofenprox = base.Columns["Etofenprox"];
                this.columnEtoxazole = base.Columns["Etoxazole"];
                this.columnFenhexamid = base.Columns["Fenhexamid"];
                this.columnFenoxycarb = base.Columns["Fenoxycarb"];
                this.columnFenpyroximate = base.Columns["Fenpyroximate"];
                this.columnFipronil = base.Columns["Fipronil"];
                this.columnFlonicamid = base.Columns["Flonicamid"];
                this.columnFludioxonil = base.Columns["Fludioxonil"];
                this.columnHexythiazox = base.Columns["Hexythiazox"];
                this.columnImazalil = base.Columns["Imazalil"];
                this.columnImidacloprid = base.Columns["Imidacloprid"];
                this.columnKresoximMethyl = base.Columns["KresoximMethyl"];
                this.columnMalathion = base.Columns["Malathion"];
                this.columnMetalaxyl = base.Columns["Metalaxyl"];
                this.columnMethiocarb = base.Columns["Methiocarb"];
                this.columnMethomyl = base.Columns["Methomyl"];
                this.columnMethylParathion = base.Columns["MethylParathion"];
                this.columnMevinphos = base.Columns["Mevinphos"];
                this.columnMyclobutanil = base.Columns["Myclobutanil"];
                this.columnNaled = base.Columns["Naled"];
                this.columnOxamyl = base.Columns["Oxamyl"];
                this.columnPentachloronitrobenzene = base.Columns["Pentachloronitrobenzene"];
                this.columnPermethrins = base.Columns["Permethrins"];
                this.columnPhosmet = base.Columns["Phosmet"];
                this.columnPiperonylButoxide = base.Columns["PiperonylButoxide"];
                this.columnPrallethrin = base.Columns["Prallethrin"];
                this.columnPropiconazole = base.Columns["Propiconazole"];
                this.columnPropoxur = base.Columns["Propoxur"];
                this.columnPyrethrins = base.Columns["Pyrethrins"];
                this.columnPyridaben = base.Columns["Pyridaben"];
                this.columnSpinetoramJ = base.Columns["SpinetoramJ"];
                this.columnSpinetoramL = base.Columns["SpinetoramL"];
                this.columnSpinosadA = base.Columns["SpinosadA"];
                this.columnSpinosadD = base.Columns["SpinosadD"];
                this.columnSpiromesifen = base.Columns["Spiromesifen"];
                this.columnSpirotetramat = base.Columns["Spirotetramat"];
                this.columnSpiroxamine = base.Columns["Spiroxamine"];
                this.columnTebuconazole = base.Columns["Tebuconazole"];
                this.columnThiacloprid = base.Columns["Thiacloprid"];
                this.columnThiamethoxam = base.Columns["Thiamethoxam"];
                this.columnTrifloxystrobin = base.Columns["Trifloxystrobin"];
                this.columnPaclobutrazol = base.Columns["Paclobutrazol"];
                this.columnAASID = base.Columns["AASID"];
                this.columnTechnique = base.Columns["Technique"];
                this.columnMetalsWeight = base.Columns["MetalsWeight"];
                this.columnArsenic = base.Columns["Arsenic"];
                this.columnCadmium = base.Columns["Cadmium"];
                this.columnLead = base.Columns["Lead"];
                this.columnMercury = base.Columns["Mercury"];
                this.columnMicrobialWeight = base.Columns["MicrobialWeight"];
                this.columnAspergillus = base.Columns["Aspergillus"];
                this.columnShigaToxin = base.Columns["ShigaToxin"];
                this.columnSalmonella = base.Columns["Salmonella"];
                this.columnTerpWT = base.Columns["TerpWT"];
                this.columnaPinene = base.Columns["aPinene"];
                this.columnCamphene = base.Columns["Camphene"];
                this.columnbMyrcene = base.Columns["bMyrcene"];
                this.columnbPinene = base.Columns["bPinene"];
                this.columnd3Carene = base.Columns["d3Carene"];
                this.columnaTerpinene = base.Columns["aTerpinene"];
                this.columnOcimene = base.Columns["Ocimene"];
                this.columnLimonene = base.Columns["Limonene"];
                this.columnpCymene = base.Columns["pCymene"];
                this.columnyTerpinene = base.Columns["yTerpinene"];
                this.columnTerpinolene = base.Columns["Terpinolene"];
                this.columnLinalool = base.Columns["Linalool"];
                this.columnIsopulegol = base.Columns["Isopulegol"];
                this.columnGeraniol = base.Columns["Geraniol"];
                this.columnbCaryophyllene = base.Columns["bCaryophyllene"];
                this.columnaHumulene = base.Columns["aHumulene"];
                this.columnNerolidol = base.Columns["Nerolidol"];
                this.columnGuaiol = base.Columns["Guaiol"];
                this.columnaBisabolol = base.Columns["aBisabolol"];
                this.columnAw = base.Columns["Aw"];
                this.columnSampleIdPesticides = base.Columns["SampleIdPesticides"];
                this.columnMethodMetals = base.Columns["MethodMetals"];
                this.columnTechniqueMicrobial = base.Columns["TechniqueMicrobial"];
                this.columnMethodMicrobial = base.Columns["MethodMicrobial"];
                this.columnMethodTerpenes = base.Columns["MethodTerpenes"];
                this.columnTechniqueTerpenes = base.Columns["TechniqueTerpenes"];
                this.columnGCMSIdTerpenes = base.Columns["GCMSIdTerpenes"];
                this.columnMethodAw = base.Columns["MethodAw"];
                this.columnTechniqueAw = base.Columns["TechniqueAw"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnSAMPLEID = new global::System.Data.DataColumn("SAMPLEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEID);
                this.columnCHEMIST = new global::System.Data.DataColumn("CHEMIST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEMIST);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnSAMPLENAME = new global::System.Data.DataColumn("SAMPLENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLENAME);
                this.columnSAMPLETYPE = new global::System.Data.DataColumn("SAMPLETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLETYPE);
                this.columnDISTRIBUTOR = new global::System.Data.DataColumn("DISTRIBUTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISTRIBUTOR);
                this.columnPRODUCER = new global::System.Data.DataColumn("PRODUCER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER);
                this.columnSAMPLEDATE = new global::System.Data.DataColumn("SAMPLEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLEDATE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBATCHID = new global::System.Data.DataColumn("BATCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHID);
                this.columnBATCHSIZE = new global::System.Data.DataColumn("BATCHSIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCHSIZE);
                this.columnSAMPLESIZE = new global::System.Data.DataColumn("SAMPLESIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLESIZE);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSampleImage = new global::System.Data.DataColumn("SampleImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleImage);
                this.columnTotalCBD = new global::System.Data.DataColumn("TotalCBD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCBD);
                this.columnTotalTHC = new global::System.Data.DataColumn("TotalTHC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTHC);
                this.columnTEST = new global::System.Data.DataColumn("TEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEST);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnCBCP = new global::System.Data.DataColumn("CBCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBCP);
                this.columnTHCAP = new global::System.Data.DataColumn("THCAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCAP);
                this.columnD8THCP = new global::System.Data.DataColumn("D8THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THCP);
                this.columnD9THCP = new global::System.Data.DataColumn("D9THCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THCP);
                this.columnCBGAP = new global::System.Data.DataColumn("CBGAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGAP);
                this.columnCBNP = new global::System.Data.DataColumn("CBNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBNP);
                this.columnCBDAP = new global::System.Data.DataColumn("CBDAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDAP);
                this.columnTHCVP = new global::System.Data.DataColumn("THCVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCVP);
                this.columnCBGP = new global::System.Data.DataColumn("CBGP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGP);
                this.columnCBDP = new global::System.Data.DataColumn("CBDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDP);
                this.columnCBDVP = new global::System.Data.DataColumn("CBDVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDVP);
                this.columnTargetCBD = new global::System.Data.DataColumn("TargetCBD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCBD);
                this.columnTargetTHC = new global::System.Data.DataColumn("TargetTHC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetTHC);
                this.columnWETWEIGHT = new global::System.Data.DataColumn("WETWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWETWEIGHT);
                this.columnHPLCWEIGHT = new global::System.Data.DataColumn("HPLCWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHPLCWEIGHT);
                this.columnDRYWEIGHT = new global::System.Data.DataColumn("DRYWEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRYWEIGHT);
                this.columnCBC = new global::System.Data.DataColumn("CBC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBC);
                this.columnTHCA = new global::System.Data.DataColumn("THCA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCA);
                this.columnD8THC = new global::System.Data.DataColumn("D8THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD8THC);
                this.columnD9THC = new global::System.Data.DataColumn("D9THC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD9THC);
                this.columnCBGA = new global::System.Data.DataColumn("CBGA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBGA);
                this.columnCBN = new global::System.Data.DataColumn("CBN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBN);
                this.columnCBDA = new global::System.Data.DataColumn("CBDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDA);
                this.columnTHCV = new global::System.Data.DataColumn("THCV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHCV);
                this.columnCBD = new global::System.Data.DataColumn("CBD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBD);
                this.columnCBG = new global::System.Data.DataColumn("CBG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBG);
                this.columnCBDV = new global::System.Data.DataColumn("CBDV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBDV);
                this.columnPotencyID = new global::System.Data.DataColumn("PotencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotencyID);
                this.columnlicense = new global::System.Data.DataColumn("license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicense);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnLCMSID = new global::System.Data.DataColumn("LCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMSID);
                this.columnGCMSID = new global::System.Data.DataColumn("GCMSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSID);
                this.columnPestInputWt = new global::System.Data.DataColumn("PestInputWt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPestInputWt);
                this.columnAbamectin = new global::System.Data.DataColumn("Abamectin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbamectin);
                this.columnAcephate = new global::System.Data.DataColumn("Acephate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcephate);
                this.columnAcequinocyl = new global::System.Data.DataColumn("Acequinocyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcequinocyl);
                this.columnAcetamiprid = new global::System.Data.DataColumn("Acetamiprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcetamiprid);
                this.columnAldicarb = new global::System.Data.DataColumn("Aldicarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAldicarb);
                this.columnAzoxystrobin = new global::System.Data.DataColumn("Azoxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAzoxystrobin);
                this.columnBifenazate = new global::System.Data.DataColumn("Bifenazate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenazate);
                this.columnBifenthrin = new global::System.Data.DataColumn("Bifenthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBifenthrin);
                this.columnBoscalid = new global::System.Data.DataColumn("Boscalid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoscalid);
                this.columnCaptan = new global::System.Data.DataColumn("Captan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaptan);
                this.columnCarbaryl = new global::System.Data.DataColumn("Carbaryl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbaryl);
                this.columnCarbofuran = new global::System.Data.DataColumn("Carbofuran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarbofuran);
                this.columnChlorantranilprole = new global::System.Data.DataColumn("Chlorantranilprole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorantranilprole);
                this.columnChlordane = new global::System.Data.DataColumn("Chlordane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlordane);
                this.columnChlorfenapyr = new global::System.Data.DataColumn("Chlorfenapyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorfenapyr);
                this.columnChlorpyrifos = new global::System.Data.DataColumn("Chlorpyrifos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorpyrifos);
                this.columnClofentezine = new global::System.Data.DataColumn("Clofentezine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClofentezine);
                this.columnCoumaphos = new global::System.Data.DataColumn("Coumaphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoumaphos);
                this.columnCyfluthrin = new global::System.Data.DataColumn("Cyfluthrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCyfluthrin);
                this.columnCypermethrin = new global::System.Data.DataColumn("Cypermethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCypermethrin);
                this.columnDaminozide = new global::System.Data.DataColumn("Daminozide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaminozide);
                this.columnDichlorvos = new global::System.Data.DataColumn("Dichlorvos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDichlorvos);
                this.columnDiazinon = new global::System.Data.DataColumn("Diazinon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiazinon);
                this.columnDimethoate = new global::System.Data.DataColumn("Dimethoate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethoate);
                this.columnDimethomorph = new global::System.Data.DataColumn("Dimethomorph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimethomorph);
                this.columnEthoprophos = new global::System.Data.DataColumn("Ethoprophos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthoprophos);
                this.columnEtofenprox = new global::System.Data.DataColumn("Etofenprox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtofenprox);
                this.columnEtoxazole = new global::System.Data.DataColumn("Etoxazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtoxazole);
                this.columnFenhexamid = new global::System.Data.DataColumn("Fenhexamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenhexamid);
                this.columnFenoxycarb = new global::System.Data.DataColumn("Fenoxycarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenoxycarb);
                this.columnFenpyroximate = new global::System.Data.DataColumn("Fenpyroximate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFenpyroximate);
                this.columnFipronil = new global::System.Data.DataColumn("Fipronil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFipronil);
                this.columnFlonicamid = new global::System.Data.DataColumn("Flonicamid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlonicamid);
                this.columnFludioxonil = new global::System.Data.DataColumn("Fludioxonil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFludioxonil);
                this.columnHexythiazox = new global::System.Data.DataColumn("Hexythiazox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHexythiazox);
                this.columnImazalil = new global::System.Data.DataColumn("Imazalil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImazalil);
                this.columnImidacloprid = new global::System.Data.DataColumn("Imidacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImidacloprid);
                this.columnKresoximMethyl = new global::System.Data.DataColumn("KresoximMethyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKresoximMethyl);
                this.columnMalathion = new global::System.Data.DataColumn("Malathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMalathion);
                this.columnMetalaxyl = new global::System.Data.DataColumn("Metalaxyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalaxyl);
                this.columnMethiocarb = new global::System.Data.DataColumn("Methiocarb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethiocarb);
                this.columnMethomyl = new global::System.Data.DataColumn("Methomyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethomyl);
                this.columnMethylParathion = new global::System.Data.DataColumn("MethylParathion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethylParathion);
                this.columnMevinphos = new global::System.Data.DataColumn("Mevinphos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMevinphos);
                this.columnMyclobutanil = new global::System.Data.DataColumn("Myclobutanil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyclobutanil);
                this.columnNaled = new global::System.Data.DataColumn("Naled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaled);
                this.columnOxamyl = new global::System.Data.DataColumn("Oxamyl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxamyl);
                this.columnPentachloronitrobenzene = new global::System.Data.DataColumn("Pentachloronitrobenzene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPentachloronitrobenzene);
                this.columnPermethrins = new global::System.Data.DataColumn("Permethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermethrins);
                this.columnPhosmet = new global::System.Data.DataColumn("Phosmet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhosmet);
                this.columnPiperonylButoxide = new global::System.Data.DataColumn("PiperonylButoxide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiperonylButoxide);
                this.columnPrallethrin = new global::System.Data.DataColumn("Prallethrin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrallethrin);
                this.columnPropiconazole = new global::System.Data.DataColumn("Propiconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropiconazole);
                this.columnPropoxur = new global::System.Data.DataColumn("Propoxur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropoxur);
                this.columnPyrethrins = new global::System.Data.DataColumn("Pyrethrins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyrethrins);
                this.columnPyridaben = new global::System.Data.DataColumn("Pyridaben", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPyridaben);
                this.columnSpinetoramJ = new global::System.Data.DataColumn("SpinetoramJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramJ);
                this.columnSpinetoramL = new global::System.Data.DataColumn("SpinetoramL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinetoramL);
                this.columnSpinosadA = new global::System.Data.DataColumn("SpinosadA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadA);
                this.columnSpinosadD = new global::System.Data.DataColumn("SpinosadD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinosadD);
                this.columnSpiromesifen = new global::System.Data.DataColumn("Spiromesifen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiromesifen);
                this.columnSpirotetramat = new global::System.Data.DataColumn("Spirotetramat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpirotetramat);
                this.columnSpiroxamine = new global::System.Data.DataColumn("Spiroxamine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpiroxamine);
                this.columnTebuconazole = new global::System.Data.DataColumn("Tebuconazole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTebuconazole);
                this.columnThiacloprid = new global::System.Data.DataColumn("Thiacloprid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiacloprid);
                this.columnThiamethoxam = new global::System.Data.DataColumn("Thiamethoxam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThiamethoxam);
                this.columnTrifloxystrobin = new global::System.Data.DataColumn("Trifloxystrobin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrifloxystrobin);
                this.columnPaclobutrazol = new global::System.Data.DataColumn("Paclobutrazol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaclobutrazol);
                this.columnAASID = new global::System.Data.DataColumn("AASID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAASID);
                this.columnTechnique = new global::System.Data.DataColumn("Technique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnique);
                this.columnMetalsWeight = new global::System.Data.DataColumn("MetalsWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetalsWeight);
                this.columnArsenic = new global::System.Data.DataColumn("Arsenic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArsenic);
                this.columnCadmium = new global::System.Data.DataColumn("Cadmium", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCadmium);
                this.columnLead = new global::System.Data.DataColumn("Lead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLead);
                this.columnMercury = new global::System.Data.DataColumn("Mercury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMercury);
                this.columnMicrobialWeight = new global::System.Data.DataColumn("MicrobialWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicrobialWeight);
                this.columnAspergillus = new global::System.Data.DataColumn("Aspergillus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAspergillus);
                this.columnShigaToxin = new global::System.Data.DataColumn("ShigaToxin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShigaToxin);
                this.columnSalmonella = new global::System.Data.DataColumn("Salmonella", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalmonella);
                this.columnTerpWT = new global::System.Data.DataColumn("TerpWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpWT);
                this.columnaPinene = new global::System.Data.DataColumn("aPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaPinene);
                this.columnCamphene = new global::System.Data.DataColumn("Camphene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCamphene);
                this.columnbMyrcene = new global::System.Data.DataColumn("bMyrcene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbMyrcene);
                this.columnbPinene = new global::System.Data.DataColumn("bPinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbPinene);
                this.columnd3Carene = new global::System.Data.DataColumn("d3Carene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnd3Carene);
                this.columnaTerpinene = new global::System.Data.DataColumn("aTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaTerpinene);
                this.columnOcimene = new global::System.Data.DataColumn("Ocimene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcimene);
                this.columnLimonene = new global::System.Data.DataColumn("Limonene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimonene);
                this.columnpCymene = new global::System.Data.DataColumn("pCymene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpCymene);
                this.columnyTerpinene = new global::System.Data.DataColumn("yTerpinene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyTerpinene);
                this.columnTerpinolene = new global::System.Data.DataColumn("Terpinolene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerpinolene);
                this.columnLinalool = new global::System.Data.DataColumn("Linalool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinalool);
                this.columnIsopulegol = new global::System.Data.DataColumn("Isopulegol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsopulegol);
                this.columnGeraniol = new global::System.Data.DataColumn("Geraniol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeraniol);
                this.columnbCaryophyllene = new global::System.Data.DataColumn("bCaryophyllene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbCaryophyllene);
                this.columnaHumulene = new global::System.Data.DataColumn("aHumulene", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaHumulene);
                this.columnNerolidol = new global::System.Data.DataColumn("Nerolidol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNerolidol);
                this.columnGuaiol = new global::System.Data.DataColumn("Guaiol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuaiol);
                this.columnaBisabolol = new global::System.Data.DataColumn("aBisabolol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaBisabolol);
                this.columnAw = new global::System.Data.DataColumn("Aw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAw);
                this.columnSampleIdPesticides = new global::System.Data.DataColumn("SampleIdPesticides", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleIdPesticides);
                this.columnMethodMetals = new global::System.Data.DataColumn("MethodMetals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodMetals);
                this.columnTechniqueMicrobial = new global::System.Data.DataColumn("TechniqueMicrobial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechniqueMicrobial);
                this.columnMethodMicrobial = new global::System.Data.DataColumn("MethodMicrobial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodMicrobial);
                this.columnMethodTerpenes = new global::System.Data.DataColumn("MethodTerpenes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodTerpenes);
                this.columnTechniqueTerpenes = new global::System.Data.DataColumn("TechniqueTerpenes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechniqueTerpenes);
                this.columnGCMSIdTerpenes = new global::System.Data.DataColumn("GCMSIdTerpenes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSIdTerpenes);
                this.columnMethodAw = new global::System.Data.DataColumn("MethodAw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodAw);
                this.columnTechniqueAw = new global::System.Data.DataColumn("TechniqueAw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechniqueAw);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSAMPLEID.MaxLength = 50;
                this.columnCHEMIST.MaxLength = 50;
                this.columnCUSTOMER.MaxLength = 50;
                this.columnEMAIL.MaxLength = 2147483647;
                this.columnSAMPLENAME.MaxLength = 50;
                this.columnSAMPLETYPE.MaxLength = 50;
                this.columnDISTRIBUTOR.MaxLength = 50;
                this.columnPRODUCER.MaxLength = 50;
                this.columnLOCATION.MaxLength = 2147483647;
                this.columnBATCHID.MaxLength = 10;
                this.columnBATCHSIZE.MaxLength = 10;
                this.columnSAMPLESIZE.MaxLength = 10;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnTotalCBD.MaxLength = 50;
                this.columnTotalTHC.MaxLength = 50;
                this.columnTEST.MaxLength = 50;
                this.columnMETHOD.MaxLength = 50;
                this.columnCBCP.MaxLength = 50;
                this.columnTHCAP.MaxLength = 50;
                this.columnD8THCP.MaxLength = 50;
                this.columnD9THCP.MaxLength = 50;
                this.columnCBGAP.MaxLength = 50;
                this.columnCBNP.MaxLength = 50;
                this.columnCBDAP.MaxLength = 50;
                this.columnTHCVP.MaxLength = 50;
                this.columnCBGP.MaxLength = 50;
                this.columnCBDP.MaxLength = 50;
                this.columnCBDVP.MaxLength = 50;
                this.columnPotencyID.MaxLength = 10;
                this.columnlicense.MaxLength = 50;
                this.columnaddress.MaxLength = 2147483647;
                this.columnLCMSID.MaxLength = 25;
                this.columnGCMSID.MaxLength = 25;
                this.columnPestInputWt.MaxLength = 20;
                this.columnAbamectin.MaxLength = 25;
                this.columnAcephate.MaxLength = 25;
                this.columnAcequinocyl.MaxLength = 25;
                this.columnAcetamiprid.MaxLength = 25;
                this.columnAldicarb.MaxLength = 25;
                this.columnAzoxystrobin.MaxLength = 25;
                this.columnBifenazate.MaxLength = 25;
                this.columnBifenthrin.MaxLength = 25;
                this.columnBoscalid.MaxLength = 25;
                this.columnCaptan.MaxLength = 25;
                this.columnCarbaryl.MaxLength = 25;
                this.columnCarbofuran.MaxLength = 25;
                this.columnChlorantranilprole.MaxLength = 25;
                this.columnChlordane.MaxLength = 25;
                this.columnChlorfenapyr.MaxLength = 25;
                this.columnChlorpyrifos.MaxLength = 25;
                this.columnClofentezine.MaxLength = 25;
                this.columnCoumaphos.MaxLength = 25;
                this.columnCyfluthrin.MaxLength = 25;
                this.columnCypermethrin.MaxLength = 25;
                this.columnDaminozide.MaxLength = 25;
                this.columnDichlorvos.MaxLength = 25;
                this.columnDiazinon.MaxLength = 25;
                this.columnDimethoate.MaxLength = 25;
                this.columnDimethomorph.MaxLength = 25;
                this.columnEthoprophos.MaxLength = 25;
                this.columnEtofenprox.MaxLength = 25;
                this.columnEtoxazole.MaxLength = 25;
                this.columnFenhexamid.MaxLength = 25;
                this.columnFenoxycarb.MaxLength = 25;
                this.columnFenpyroximate.MaxLength = 25;
                this.columnFipronil.MaxLength = 25;
                this.columnFlonicamid.MaxLength = 25;
                this.columnFludioxonil.MaxLength = 25;
                this.columnHexythiazox.MaxLength = 25;
                this.columnImazalil.MaxLength = 25;
                this.columnImidacloprid.MaxLength = 25;
                this.columnKresoximMethyl.MaxLength = 25;
                this.columnMalathion.MaxLength = 25;
                this.columnMetalaxyl.MaxLength = 25;
                this.columnMethiocarb.MaxLength = 25;
                this.columnMethomyl.MaxLength = 25;
                this.columnMethylParathion.MaxLength = 25;
                this.columnMevinphos.MaxLength = 25;
                this.columnMyclobutanil.MaxLength = 25;
                this.columnNaled.MaxLength = 25;
                this.columnOxamyl.MaxLength = 25;
                this.columnPentachloronitrobenzene.MaxLength = 25;
                this.columnPermethrins.MaxLength = 25;
                this.columnPhosmet.MaxLength = 25;
                this.columnPiperonylButoxide.MaxLength = 25;
                this.columnPrallethrin.MaxLength = 25;
                this.columnPropiconazole.MaxLength = 25;
                this.columnPropoxur.MaxLength = 25;
                this.columnPyrethrins.MaxLength = 25;
                this.columnPyridaben.MaxLength = 25;
                this.columnSpinetoramJ.MaxLength = 25;
                this.columnSpinetoramL.MaxLength = 25;
                this.columnSpinosadA.MaxLength = 25;
                this.columnSpinosadD.MaxLength = 25;
                this.columnSpiromesifen.MaxLength = 25;
                this.columnSpirotetramat.MaxLength = 25;
                this.columnSpiroxamine.MaxLength = 25;
                this.columnTebuconazole.MaxLength = 25;
                this.columnThiacloprid.MaxLength = 25;
                this.columnThiamethoxam.MaxLength = 25;
                this.columnTrifloxystrobin.MaxLength = 25;
                this.columnPaclobutrazol.MaxLength = 25;
                this.columnAASID.AllowDBNull = false;
                this.columnAASID.MaxLength = 20;
                this.columnTechnique.AllowDBNull = false;
                this.columnTechnique.MaxLength = 20;
                this.columnMetalsWeight.AllowDBNull = false;
                this.columnMetalsWeight.MaxLength = 20;
                this.columnArsenic.AllowDBNull = false;
                this.columnArsenic.MaxLength = 20;
                this.columnCadmium.AllowDBNull = false;
                this.columnCadmium.MaxLength = 20;
                this.columnLead.AllowDBNull = false;
                this.columnLead.MaxLength = 20;
                this.columnMercury.AllowDBNull = false;
                this.columnMercury.MaxLength = 20;
                this.columnMicrobialWeight.MaxLength = 25;
                this.columnAspergillus.MaxLength = 25;
                this.columnShigaToxin.MaxLength = 25;
                this.columnSalmonella.MaxLength = 25;
                this.columnTerpWT.MaxLength = 50;
                this.columnaPinene.MaxLength = 50;
                this.columnCamphene.MaxLength = 50;
                this.columnbMyrcene.MaxLength = 50;
                this.columnbPinene.MaxLength = 50;
                this.columnd3Carene.MaxLength = 50;
                this.columnaTerpinene.MaxLength = 50;
                this.columnOcimene.MaxLength = 50;
                this.columnLimonene.MaxLength = 50;
                this.columnpCymene.MaxLength = 50;
                this.columnyTerpinene.MaxLength = 50;
                this.columnTerpinolene.MaxLength = 50;
                this.columnLinalool.MaxLength = 50;
                this.columnIsopulegol.MaxLength = 50;
                this.columnGeraniol.MaxLength = 50;
                this.columnbCaryophyllene.MaxLength = 50;
                this.columnaHumulene.MaxLength = 50;
                this.columnNerolidol.MaxLength = 50;
                this.columnGuaiol.MaxLength = 50;
                this.columnaBisabolol.MaxLength = 50;
                this.columnAw.MaxLength = 50;
                this.columnSampleIdPesticides.MaxLength = 25;
                this.columnMethodMetals.AllowDBNull = false;
                this.columnMethodMetals.MaxLength = 25;
                this.columnTechniqueMicrobial.MaxLength = 25;
                this.columnMethodMicrobial.MaxLength = 25;
                this.columnMethodTerpenes.MaxLength = 50;
                this.columnTechniqueTerpenes.MaxLength = 50;
                this.columnGCMSIdTerpenes.MaxLength = 50;
                this.columnMethodAw.MaxLength = 50;
                this.columnTechniqueAw.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTRow NewcomplianceDTRow() {
                return ((complianceDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new complianceDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(complianceDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.complianceDTRowChanged != null)) {
                    this.complianceDTRowChanged(this, new complianceDTRowChangeEvent(((complianceDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.complianceDTRowChanging != null)) {
                    this.complianceDTRowChanging(this, new complianceDTRowChangeEvent(((complianceDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.complianceDTRowDeleted != null)) {
                    this.complianceDTRowDeleted(this, new complianceDTRowChangeEvent(((complianceDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.complianceDTRowDeleting != null)) {
                    this.complianceDTRowDeleting(this, new complianceDTRowChangeEvent(((complianceDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovecomplianceDTRow(complianceDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                fullDATASET ds = new fullDATASET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "complianceDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class customerDATARow : global::System.Data.DataRow {
            
            private customerDATADataTable tablecustomerDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal customerDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecustomerDATA = ((customerDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablecustomerDATA.idColumn]));
                }
                set {
                    this[this.tablecustomerDATA.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string customer {
                get {
                    try {
                        return ((string)(this[this.tablecustomerDATA.customerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer\' in table \'customerDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomerDATA.customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablecustomerDATA.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'customerDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomerDATA.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string license {
                get {
                    try {
                        return ((string)(this[this.tablecustomerDATA.licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'license\' in table \'customerDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomerDATA.licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablecustomerDATA.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'customerDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomerDATA.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscustomerNull() {
                return this.IsNull(this.tablecustomerDATA.customerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcustomerNull() {
                this[this.tablecustomerDATA.customerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tablecustomerDATA.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemailNull() {
                this[this.tablecustomerDATA.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IslicenseNull() {
                return this.IsNull(this.tablecustomerDATA.licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetlicenseNull() {
                this[this.tablecustomerDATA.licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tablecustomerDATA.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaddressNull() {
                this[this.tablecustomerDATA.addressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class indexDATARow : global::System.Data.DataRow {
            
            private indexDATADataTable tableindexDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal indexDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableindexDATA = ((indexDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableindexDATA.IDColumn]));
                }
                set {
                    this[this.tableindexDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableindexDATA.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableindexDATA.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableindexDATA.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tableindexDATA.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'indexDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindexDATA.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tableindexDATA.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tableindexDATA.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tableindexDATA.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tableindexDATA.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tableindexDATA.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tableindexDATA.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableindexDATA.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tableindexDATA.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableindexDATA.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableindexDATA.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tableindexDATA.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tableindexDATA.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tableindexDATA.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tableindexDATA.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tableindexDATA.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tableindexDATA.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tableindexDATA.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tableindexDATA.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tableindexDATA.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tableindexDATA.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableindexDATA.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableindexDATA.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tableindexDATA.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tableindexDATA.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tableindexDATA.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tableindexDATA.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tableindexDATA.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tableindexDATA.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableindexDATA.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableindexDATA.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tableindexDATA.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tableindexDATA.SampleImageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class metalsDATARow : global::System.Data.DataRow {
            
            private metalsDATADataTable tablemetalsDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal metalsDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemetalsDATA = ((metalsDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemetalsDATA.IDColumn]));
                }
                set {
                    this[this.tablemetalsDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    return ((string)(this[this.tablemetalsDATA.SAMPLEIDColumn]));
                }
                set {
                    this[this.tablemetalsDATA.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AASID {
                get {
                    return ((string)(this[this.tablemetalsDATA.AASIDColumn]));
                }
                set {
                    this[this.tablemetalsDATA.AASIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    return ((string)(this[this.tablemetalsDATA.MethodColumn]));
                }
                set {
                    this[this.tablemetalsDATA.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    return ((string)(this[this.tablemetalsDATA.TechniqueColumn]));
                }
                set {
                    this[this.tablemetalsDATA.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MetalsWeight {
                get {
                    return ((string)(this[this.tablemetalsDATA.MetalsWeightColumn]));
                }
                set {
                    this[this.tablemetalsDATA.MetalsWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Arsenic {
                get {
                    return ((string)(this[this.tablemetalsDATA.ArsenicColumn]));
                }
                set {
                    this[this.tablemetalsDATA.ArsenicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cadmium {
                get {
                    return ((string)(this[this.tablemetalsDATA.CadmiumColumn]));
                }
                set {
                    this[this.tablemetalsDATA.CadmiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Lead {
                get {
                    return ((string)(this[this.tablemetalsDATA.LeadColumn]));
                }
                set {
                    this[this.tablemetalsDATA.LeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mercury {
                get {
                    return ((string)(this[this.tablemetalsDATA.MercuryColumn]));
                }
                set {
                    this[this.tablemetalsDATA.MercuryColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class microbialDATARow : global::System.Data.DataRow {
            
            private microbialDATADataTable tablemicrobialDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal microbialDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemicrobialDATA = ((microbialDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemicrobialDATA.IDColumn]));
                }
                set {
                    this[this.tablemicrobialDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MicrobialWeight {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.MicrobialWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MicrobialWeight\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.MicrobialWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aspergillus {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.AspergillusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aspergillus\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.AspergillusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShigaToxin {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.ShigaToxinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShigaToxin\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.ShigaToxinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Salmonella {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDATA.SalmonellaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salmonella\' in table \'microbialDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDATA.SalmonellaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablemicrobialDATA.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablemicrobialDATA.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablemicrobialDATA.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablemicrobialDATA.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablemicrobialDATA.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablemicrobialDATA.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMicrobialWeightNull() {
                return this.IsNull(this.tablemicrobialDATA.MicrobialWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMicrobialWeightNull() {
                this[this.tablemicrobialDATA.MicrobialWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAspergillusNull() {
                return this.IsNull(this.tablemicrobialDATA.AspergillusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAspergillusNull() {
                this[this.tablemicrobialDATA.AspergillusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShigaToxinNull() {
                return this.IsNull(this.tablemicrobialDATA.ShigaToxinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShigaToxinNull() {
                this[this.tablemicrobialDATA.ShigaToxinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalmonellaNull() {
                return this.IsNull(this.tablemicrobialDATA.SalmonellaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalmonellaNull() {
                this[this.tablemicrobialDATA.SalmonellaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mycotoxinsDATARow : global::System.Data.DataRow {
            
            private mycotoxinsDATADataTable tablemycotoxinsDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal mycotoxinsDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemycotoxinsDATA = ((mycotoxinsDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemycotoxinsDATA.IDColumn]));
                }
                set {
                    this[this.tablemycotoxinsDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleID {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.SampleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleID\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.SampleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LCMSID {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.LCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMSID\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.LCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MycoWeight {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.MycoWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MycoWeight\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.MycoWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AB1 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.AB1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AB1\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.AB1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AB2 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.AB2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AB2\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.AB2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AG1 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.AG1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AG1\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.AG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AG2 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.AG2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AG2\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.AG2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTA {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinsDATA.OTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTA\' in table \'mycotoxinsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinsDATA.OTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tablemycotoxinsDATA.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateNull() {
                this[this.tablemycotoxinsDATA.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIDNull() {
                return this.IsNull(this.tablemycotoxinsDATA.SampleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIDNull() {
                this[this.tablemycotoxinsDATA.SampleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablemycotoxinsDATA.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablemycotoxinsDATA.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablemycotoxinsDATA.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablemycotoxinsDATA.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLCMSIDNull() {
                return this.IsNull(this.tablemycotoxinsDATA.LCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLCMSIDNull() {
                this[this.tablemycotoxinsDATA.LCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMycoWeightNull() {
                return this.IsNull(this.tablemycotoxinsDATA.MycoWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMycoWeightNull() {
                this[this.tablemycotoxinsDATA.MycoWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAB1Null() {
                return this.IsNull(this.tablemycotoxinsDATA.AB1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAB1Null() {
                this[this.tablemycotoxinsDATA.AB1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAB2Null() {
                return this.IsNull(this.tablemycotoxinsDATA.AB2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAB2Null() {
                this[this.tablemycotoxinsDATA.AB2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAG1Null() {
                return this.IsNull(this.tablemycotoxinsDATA.AG1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAG1Null() {
                this[this.tablemycotoxinsDATA.AG1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAG2Null() {
                return this.IsNull(this.tablemycotoxinsDATA.AG2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAG2Null() {
                this[this.tablemycotoxinsDATA.AG2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOTANull() {
                return this.IsNull(this.tablemycotoxinsDATA.OTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOTANull() {
                this[this.tablemycotoxinsDATA.OTAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PesticidesDATARow : global::System.Data.DataRow {
            
            private PesticidesDATADataTable tablePesticidesDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PesticidesDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePesticidesDATA = ((PesticidesDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tablePesticidesDATA.IdColumn]));
                }
                set {
                    this[this.tablePesticidesDATA.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleID {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SampleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleID\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SampleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LCMSID {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.LCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMSID\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.LCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PestInputWt {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PestInputWtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PestInputWt\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PestInputWtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Abamectin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AbamectinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abamectin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AbamectinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acephate {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AcephateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acephate\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AcephateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acequinocyl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AcequinocylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acequinocyl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AcequinocylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetamiprid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AcetamipridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetamiprid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AcetamipridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aldicarb {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AldicarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aldicarb\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AldicarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Azoxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.AzoxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Azoxystrobin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.AzoxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenazate {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.BifenazateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenazate\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.BifenazateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenthrin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.BifenthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenthrin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.BifenthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Boscalid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.BoscalidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Boscalid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.BoscalidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Captan {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CaptanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Captan\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CaptanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbaryl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CarbarylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbaryl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CarbarylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbofuran {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CarbofuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbofuran\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CarbofuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorantranilprole {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ChlorantranilproleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorantranilprole\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ChlorantranilproleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlordane {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ChlordaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlordane\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ChlordaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorfenapyr {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ChlorfenapyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorfenapyr\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ChlorfenapyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorpyrifos {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ChlorpyrifosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorpyrifos\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ChlorpyrifosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Clofentezine {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ClofentezineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clofentezine\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ClofentezineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Coumaphos {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CoumaphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coumaphos\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CoumaphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cyfluthrin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CyfluthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cyfluthrin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CyfluthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cypermethrin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.CypermethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cypermethrin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.CypermethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Daminozide {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.DaminozideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Daminozide\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.DaminozideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dichlorvos {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.DichlorvosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dichlorvos\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.DichlorvosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Diazinon {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.DiazinonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diazinon\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.DiazinonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethoate {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.DimethoateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethoate\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.DimethoateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethomorph {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.DimethomorphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethomorph\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.DimethomorphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ethoprophos {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.EthoprophosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethoprophos\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.EthoprophosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etofenprox {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.EtofenproxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etofenprox\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.EtofenproxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etoxazole {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.EtoxazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etoxazole\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.EtoxazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenhexamid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FenhexamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenhexamid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FenhexamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenoxycarb {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FenoxycarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenoxycarb\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FenoxycarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenpyroximate {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FenpyroximateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenpyroximate\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FenpyroximateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fipronil {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FipronilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fipronil\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FipronilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Flonicamid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FlonicamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flonicamid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FlonicamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fludioxonil {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.FludioxonilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fludioxonil\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.FludioxonilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Hexythiazox {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.HexythiazoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hexythiazox\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.HexythiazoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imazalil {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ImazalilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imazalil\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ImazalilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imidacloprid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ImidaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imidacloprid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ImidaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KresoximMethyl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.KresoximMethylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KresoximMethyl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.KresoximMethylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Malathion {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MalathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Malathion\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MalathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Metalaxyl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MetalaxylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Metalaxyl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MetalaxylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methiocarb {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MethiocarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methiocarb\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MethiocarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methomyl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MethomylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methomyl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MethomylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethylParathion {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MethylParathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethylParathion\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MethylParathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mevinphos {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MevinphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mevinphos\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MevinphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Myclobutanil {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.MyclobutanilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myclobutanil\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.MyclobutanilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Naled {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.NaledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Naled\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.NaledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Oxamyl {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.OxamylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oxamyl\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.OxamylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pentachloronitrobenzene {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PentachloronitrobenzeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pentachloronitrobenzene\' in table \'PesticidesDATA\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PentachloronitrobenzeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Permethrins {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PermethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Permethrins\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PermethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Phosmet {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PhosmetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phosmet\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PhosmetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PiperonylButoxide {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PiperonylButoxideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiperonylButoxide\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PiperonylButoxideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Prallethrin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PrallethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prallethrin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PrallethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propiconazole {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PropiconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propiconazole\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PropiconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propoxur {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PropoxurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propoxur\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PropoxurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyrethrins {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PyrethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyrethrins\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PyrethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyridaben {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.PyridabenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyridaben\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.PyridabenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramJ {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpinetoramJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramJ\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpinetoramJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramL {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpinetoramLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramL\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpinetoramLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadA {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpinosadAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadA\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpinosadAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadD {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpinosadDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadD\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpinosadDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiromesifen {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpiromesifenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiromesifen\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpiromesifenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spirotetramat {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpirotetramatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spirotetramat\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpirotetramatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiroxamine {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.SpiroxamineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiroxamine\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.SpiroxamineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Tebuconazole {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.TebuconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tebuconazole\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.TebuconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiacloprid {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ThiaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiacloprid\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ThiaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiamethoxam {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.ThiamethoxamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiamethoxam\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.ThiamethoxamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trifloxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablePesticidesDATA.TrifloxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trifloxystrobin\' in table \'PesticidesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePesticidesDATA.TrifloxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIDNull() {
                return this.IsNull(this.tablePesticidesDATA.SampleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIDNull() {
                this[this.tablePesticidesDATA.SampleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLCMSIDNull() {
                return this.IsNull(this.tablePesticidesDATA.LCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLCMSIDNull() {
                this[this.tablePesticidesDATA.LCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tablePesticidesDATA.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tablePesticidesDATA.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPestInputWtNull() {
                return this.IsNull(this.tablePesticidesDATA.PestInputWtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPestInputWtNull() {
                this[this.tablePesticidesDATA.PestInputWtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAbamectinNull() {
                return this.IsNull(this.tablePesticidesDATA.AbamectinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAbamectinNull() {
                this[this.tablePesticidesDATA.AbamectinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcephateNull() {
                return this.IsNull(this.tablePesticidesDATA.AcephateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcephateNull() {
                this[this.tablePesticidesDATA.AcephateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcequinocylNull() {
                return this.IsNull(this.tablePesticidesDATA.AcequinocylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcequinocylNull() {
                this[this.tablePesticidesDATA.AcequinocylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetamipridNull() {
                return this.IsNull(this.tablePesticidesDATA.AcetamipridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetamipridNull() {
                this[this.tablePesticidesDATA.AcetamipridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAldicarbNull() {
                return this.IsNull(this.tablePesticidesDATA.AldicarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAldicarbNull() {
                this[this.tablePesticidesDATA.AldicarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAzoxystrobinNull() {
                return this.IsNull(this.tablePesticidesDATA.AzoxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAzoxystrobinNull() {
                this[this.tablePesticidesDATA.AzoxystrobinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenazateNull() {
                return this.IsNull(this.tablePesticidesDATA.BifenazateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenazateNull() {
                this[this.tablePesticidesDATA.BifenazateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenthrinNull() {
                return this.IsNull(this.tablePesticidesDATA.BifenthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenthrinNull() {
                this[this.tablePesticidesDATA.BifenthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBoscalidNull() {
                return this.IsNull(this.tablePesticidesDATA.BoscalidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBoscalidNull() {
                this[this.tablePesticidesDATA.BoscalidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCaptanNull() {
                return this.IsNull(this.tablePesticidesDATA.CaptanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCaptanNull() {
                this[this.tablePesticidesDATA.CaptanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbarylNull() {
                return this.IsNull(this.tablePesticidesDATA.CarbarylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbarylNull() {
                this[this.tablePesticidesDATA.CarbarylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbofuranNull() {
                return this.IsNull(this.tablePesticidesDATA.CarbofuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbofuranNull() {
                this[this.tablePesticidesDATA.CarbofuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorantranilproleNull() {
                return this.IsNull(this.tablePesticidesDATA.ChlorantranilproleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorantranilproleNull() {
                this[this.tablePesticidesDATA.ChlorantranilproleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlordaneNull() {
                return this.IsNull(this.tablePesticidesDATA.ChlordaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlordaneNull() {
                this[this.tablePesticidesDATA.ChlordaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorfenapyrNull() {
                return this.IsNull(this.tablePesticidesDATA.ChlorfenapyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorfenapyrNull() {
                this[this.tablePesticidesDATA.ChlorfenapyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorpyrifosNull() {
                return this.IsNull(this.tablePesticidesDATA.ChlorpyrifosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorpyrifosNull() {
                this[this.tablePesticidesDATA.ChlorpyrifosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClofentezineNull() {
                return this.IsNull(this.tablePesticidesDATA.ClofentezineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClofentezineNull() {
                this[this.tablePesticidesDATA.ClofentezineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCoumaphosNull() {
                return this.IsNull(this.tablePesticidesDATA.CoumaphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCoumaphosNull() {
                this[this.tablePesticidesDATA.CoumaphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCyfluthrinNull() {
                return this.IsNull(this.tablePesticidesDATA.CyfluthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCyfluthrinNull() {
                this[this.tablePesticidesDATA.CyfluthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCypermethrinNull() {
                return this.IsNull(this.tablePesticidesDATA.CypermethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCypermethrinNull() {
                this[this.tablePesticidesDATA.CypermethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDaminozideNull() {
                return this.IsNull(this.tablePesticidesDATA.DaminozideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDaminozideNull() {
                this[this.tablePesticidesDATA.DaminozideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDichlorvosNull() {
                return this.IsNull(this.tablePesticidesDATA.DichlorvosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDichlorvosNull() {
                this[this.tablePesticidesDATA.DichlorvosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiazinonNull() {
                return this.IsNull(this.tablePesticidesDATA.DiazinonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiazinonNull() {
                this[this.tablePesticidesDATA.DiazinonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethoateNull() {
                return this.IsNull(this.tablePesticidesDATA.DimethoateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethoateNull() {
                this[this.tablePesticidesDATA.DimethoateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethomorphNull() {
                return this.IsNull(this.tablePesticidesDATA.DimethomorphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethomorphNull() {
                this[this.tablePesticidesDATA.DimethomorphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthoprophosNull() {
                return this.IsNull(this.tablePesticidesDATA.EthoprophosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthoprophosNull() {
                this[this.tablePesticidesDATA.EthoprophosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtofenproxNull() {
                return this.IsNull(this.tablePesticidesDATA.EtofenproxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtofenproxNull() {
                this[this.tablePesticidesDATA.EtofenproxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtoxazoleNull() {
                return this.IsNull(this.tablePesticidesDATA.EtoxazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtoxazoleNull() {
                this[this.tablePesticidesDATA.EtoxazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenhexamidNull() {
                return this.IsNull(this.tablePesticidesDATA.FenhexamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenhexamidNull() {
                this[this.tablePesticidesDATA.FenhexamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenoxycarbNull() {
                return this.IsNull(this.tablePesticidesDATA.FenoxycarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenoxycarbNull() {
                this[this.tablePesticidesDATA.FenoxycarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenpyroximateNull() {
                return this.IsNull(this.tablePesticidesDATA.FenpyroximateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenpyroximateNull() {
                this[this.tablePesticidesDATA.FenpyroximateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFipronilNull() {
                return this.IsNull(this.tablePesticidesDATA.FipronilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFipronilNull() {
                this[this.tablePesticidesDATA.FipronilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFlonicamidNull() {
                return this.IsNull(this.tablePesticidesDATA.FlonicamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFlonicamidNull() {
                this[this.tablePesticidesDATA.FlonicamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFludioxonilNull() {
                return this.IsNull(this.tablePesticidesDATA.FludioxonilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFludioxonilNull() {
                this[this.tablePesticidesDATA.FludioxonilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHexythiazoxNull() {
                return this.IsNull(this.tablePesticidesDATA.HexythiazoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHexythiazoxNull() {
                this[this.tablePesticidesDATA.HexythiazoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImazalilNull() {
                return this.IsNull(this.tablePesticidesDATA.ImazalilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImazalilNull() {
                this[this.tablePesticidesDATA.ImazalilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImidaclopridNull() {
                return this.IsNull(this.tablePesticidesDATA.ImidaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImidaclopridNull() {
                this[this.tablePesticidesDATA.ImidaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKresoximMethylNull() {
                return this.IsNull(this.tablePesticidesDATA.KresoximMethylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKresoximMethylNull() {
                this[this.tablePesticidesDATA.KresoximMethylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMalathionNull() {
                return this.IsNull(this.tablePesticidesDATA.MalathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMalathionNull() {
                this[this.tablePesticidesDATA.MalathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMetalaxylNull() {
                return this.IsNull(this.tablePesticidesDATA.MetalaxylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMetalaxylNull() {
                this[this.tablePesticidesDATA.MetalaxylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethiocarbNull() {
                return this.IsNull(this.tablePesticidesDATA.MethiocarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethiocarbNull() {
                this[this.tablePesticidesDATA.MethiocarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethomylNull() {
                return this.IsNull(this.tablePesticidesDATA.MethomylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethomylNull() {
                this[this.tablePesticidesDATA.MethomylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethylParathionNull() {
                return this.IsNull(this.tablePesticidesDATA.MethylParathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethylParathionNull() {
                this[this.tablePesticidesDATA.MethylParathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMevinphosNull() {
                return this.IsNull(this.tablePesticidesDATA.MevinphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMevinphosNull() {
                this[this.tablePesticidesDATA.MevinphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMyclobutanilNull() {
                return this.IsNull(this.tablePesticidesDATA.MyclobutanilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMyclobutanilNull() {
                this[this.tablePesticidesDATA.MyclobutanilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNaledNull() {
                return this.IsNull(this.tablePesticidesDATA.NaledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNaledNull() {
                this[this.tablePesticidesDATA.NaledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOxamylNull() {
                return this.IsNull(this.tablePesticidesDATA.OxamylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOxamylNull() {
                this[this.tablePesticidesDATA.OxamylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPentachloronitrobenzeneNull() {
                return this.IsNull(this.tablePesticidesDATA.PentachloronitrobenzeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPentachloronitrobenzeneNull() {
                this[this.tablePesticidesDATA.PentachloronitrobenzeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPermethrinsNull() {
                return this.IsNull(this.tablePesticidesDATA.PermethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPermethrinsNull() {
                this[this.tablePesticidesDATA.PermethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhosmetNull() {
                return this.IsNull(this.tablePesticidesDATA.PhosmetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhosmetNull() {
                this[this.tablePesticidesDATA.PhosmetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPiperonylButoxideNull() {
                return this.IsNull(this.tablePesticidesDATA.PiperonylButoxideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPiperonylButoxideNull() {
                this[this.tablePesticidesDATA.PiperonylButoxideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrallethrinNull() {
                return this.IsNull(this.tablePesticidesDATA.PrallethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrallethrinNull() {
                this[this.tablePesticidesDATA.PrallethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropiconazoleNull() {
                return this.IsNull(this.tablePesticidesDATA.PropiconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropiconazoleNull() {
                this[this.tablePesticidesDATA.PropiconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropoxurNull() {
                return this.IsNull(this.tablePesticidesDATA.PropoxurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropoxurNull() {
                this[this.tablePesticidesDATA.PropoxurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyrethrinsNull() {
                return this.IsNull(this.tablePesticidesDATA.PyrethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyrethrinsNull() {
                this[this.tablePesticidesDATA.PyrethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyridabenNull() {
                return this.IsNull(this.tablePesticidesDATA.PyridabenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyridabenNull() {
                this[this.tablePesticidesDATA.PyridabenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramJNull() {
                return this.IsNull(this.tablePesticidesDATA.SpinetoramJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramJNull() {
                this[this.tablePesticidesDATA.SpinetoramJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramLNull() {
                return this.IsNull(this.tablePesticidesDATA.SpinetoramLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramLNull() {
                this[this.tablePesticidesDATA.SpinetoramLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadANull() {
                return this.IsNull(this.tablePesticidesDATA.SpinosadAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadANull() {
                this[this.tablePesticidesDATA.SpinosadAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadDNull() {
                return this.IsNull(this.tablePesticidesDATA.SpinosadDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadDNull() {
                this[this.tablePesticidesDATA.SpinosadDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiromesifenNull() {
                return this.IsNull(this.tablePesticidesDATA.SpiromesifenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiromesifenNull() {
                this[this.tablePesticidesDATA.SpiromesifenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpirotetramatNull() {
                return this.IsNull(this.tablePesticidesDATA.SpirotetramatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpirotetramatNull() {
                this[this.tablePesticidesDATA.SpirotetramatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiroxamineNull() {
                return this.IsNull(this.tablePesticidesDATA.SpiroxamineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiroxamineNull() {
                this[this.tablePesticidesDATA.SpiroxamineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTebuconazoleNull() {
                return this.IsNull(this.tablePesticidesDATA.TebuconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTebuconazoleNull() {
                this[this.tablePesticidesDATA.TebuconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiaclopridNull() {
                return this.IsNull(this.tablePesticidesDATA.ThiaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiaclopridNull() {
                this[this.tablePesticidesDATA.ThiaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiamethoxamNull() {
                return this.IsNull(this.tablePesticidesDATA.ThiamethoxamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiamethoxamNull() {
                this[this.tablePesticidesDATA.ThiamethoxamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrifloxystrobinNull() {
                return this.IsNull(this.tablePesticidesDATA.TrifloxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrifloxystrobinNull() {
                this[this.tablePesticidesDATA.TrifloxystrobinColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PotencyDATARow : global::System.Data.DataRow {
            
            private PotencyDATADataTable tablePotencyDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PotencyDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePotencyDATA = ((PotencyDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablePotencyDATA.IDColumn]));
                }
                set {
                    this[this.tablePotencyDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleId {
                get {
                    return ((string)(this[this.tablePotencyDATA.SampleIdColumn]));
                }
                set {
                    this[this.tablePotencyDATA.SampleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PotencyID {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.PotencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotencyID\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.PotencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDV {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBDVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDV\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBD {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBD\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBG {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBG\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCV {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.THCVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCV\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.THCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDA {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDA\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBN {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBN\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBGA {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGA\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D9THC {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.D9THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THC\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.D9THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D8THC {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.D8THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THC\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.D8THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCA {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.THCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCA\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.THCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBC {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.CBCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBC\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double DRYWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.DRYWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRYWEIGHT\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.DRYWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double HPLCWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.HPLCWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HPLCWEIGHT\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.HPLCWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double WETWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.WETWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WETWEIGHT\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.WETWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double TargetTHC {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.TargetTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetTHC\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.TargetTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double TargetCBD {
                get {
                    try {
                        return ((double)(this[this.tablePotencyDATA.TargetCBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCBD\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.TargetCBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDVP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBDVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDVP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBGPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBGPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCVP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.THCVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCVP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.THCVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDAP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBDAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDAP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBDAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBNP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBNP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGAP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBGAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGAP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBGAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D9THCP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.D9THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THCP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.D9THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D8THCP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.D8THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THCP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.D8THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCAP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.THCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCAP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.THCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBCP {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.CBCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBCP\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.CBCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEST {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.TESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEST\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.TESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalTHC {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.TotalTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTHC\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.TotalTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalCBD {
                get {
                    try {
                        return ((string)(this[this.tablePotencyDATA.TotalCBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCBD\' in table \'PotencyDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePotencyDATA.TotalCBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPotencyIDNull() {
                return this.IsNull(this.tablePotencyDATA.PotencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPotencyIDNull() {
                this[this.tablePotencyDATA.PotencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVNull() {
                return this.IsNull(this.tablePotencyDATA.CBDVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVNull() {
                this[this.tablePotencyDATA.CBDVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDNull() {
                return this.IsNull(this.tablePotencyDATA.CBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDNull() {
                this[this.tablePotencyDATA.CBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGNull() {
                return this.IsNull(this.tablePotencyDATA.CBGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGNull() {
                this[this.tablePotencyDATA.CBGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVNull() {
                return this.IsNull(this.tablePotencyDATA.THCVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVNull() {
                this[this.tablePotencyDATA.THCVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDANull() {
                return this.IsNull(this.tablePotencyDATA.CBDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDANull() {
                this[this.tablePotencyDATA.CBDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNNull() {
                return this.IsNull(this.tablePotencyDATA.CBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNNull() {
                this[this.tablePotencyDATA.CBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGANull() {
                return this.IsNull(this.tablePotencyDATA.CBGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGANull() {
                this[this.tablePotencyDATA.CBGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCNull() {
                return this.IsNull(this.tablePotencyDATA.D9THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCNull() {
                this[this.tablePotencyDATA.D9THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCNull() {
                return this.IsNull(this.tablePotencyDATA.D8THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCNull() {
                this[this.tablePotencyDATA.D8THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCANull() {
                return this.IsNull(this.tablePotencyDATA.THCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCANull() {
                this[this.tablePotencyDATA.THCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCNull() {
                return this.IsNull(this.tablePotencyDATA.CBCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCNull() {
                this[this.tablePotencyDATA.CBCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDRYWEIGHTNull() {
                return this.IsNull(this.tablePotencyDATA.DRYWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDRYWEIGHTNull() {
                this[this.tablePotencyDATA.DRYWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHPLCWEIGHTNull() {
                return this.IsNull(this.tablePotencyDATA.HPLCWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHPLCWEIGHTNull() {
                this[this.tablePotencyDATA.HPLCWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWETWEIGHTNull() {
                return this.IsNull(this.tablePotencyDATA.WETWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWETWEIGHTNull() {
                this[this.tablePotencyDATA.WETWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTargetTHCNull() {
                return this.IsNull(this.tablePotencyDATA.TargetTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTargetTHCNull() {
                this[this.tablePotencyDATA.TargetTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTargetCBDNull() {
                return this.IsNull(this.tablePotencyDATA.TargetCBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTargetCBDNull() {
                this[this.tablePotencyDATA.TargetCBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVPNull() {
                return this.IsNull(this.tablePotencyDATA.CBDVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVPNull() {
                this[this.tablePotencyDATA.CBDVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDPNull() {
                return this.IsNull(this.tablePotencyDATA.CBDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDPNull() {
                this[this.tablePotencyDATA.CBDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGPNull() {
                return this.IsNull(this.tablePotencyDATA.CBGPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGPNull() {
                this[this.tablePotencyDATA.CBGPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVPNull() {
                return this.IsNull(this.tablePotencyDATA.THCVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVPNull() {
                this[this.tablePotencyDATA.THCVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDAPNull() {
                return this.IsNull(this.tablePotencyDATA.CBDAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDAPNull() {
                this[this.tablePotencyDATA.CBDAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNPNull() {
                return this.IsNull(this.tablePotencyDATA.CBNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNPNull() {
                this[this.tablePotencyDATA.CBNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGAPNull() {
                return this.IsNull(this.tablePotencyDATA.CBGAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGAPNull() {
                this[this.tablePotencyDATA.CBGAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCPNull() {
                return this.IsNull(this.tablePotencyDATA.D9THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCPNull() {
                this[this.tablePotencyDATA.D9THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCPNull() {
                return this.IsNull(this.tablePotencyDATA.D8THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCPNull() {
                this[this.tablePotencyDATA.D8THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCAPNull() {
                return this.IsNull(this.tablePotencyDATA.THCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCAPNull() {
                this[this.tablePotencyDATA.THCAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCPNull() {
                return this.IsNull(this.tablePotencyDATA.CBCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCPNull() {
                this[this.tablePotencyDATA.CBCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMETHODNull() {
                return this.IsNull(this.tablePotencyDATA.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMETHODNull() {
                this[this.tablePotencyDATA.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTESTNull() {
                return this.IsNull(this.tablePotencyDATA.TESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTESTNull() {
                this[this.tablePotencyDATA.TESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalTHCNull() {
                return this.IsNull(this.tablePotencyDATA.TotalTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalTHCNull() {
                this[this.tablePotencyDATA.TotalTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalCBDNull() {
                return this.IsNull(this.tablePotencyDATA.TotalCBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalCBDNull() {
                this[this.tablePotencyDATA.TotalCBDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SolventsDATARow : global::System.Data.DataRow {
            
            private SolventsDATADataTable tableSolventsDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SolventsDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSolventsDATA = ((SolventsDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSolventsDATA.IDColumn]));
                }
                set {
                    this[this.tableSolventsDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleID {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.SampleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleID\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.SampleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SolventInputWeight {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.SolventInputWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SolventInputWeight\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.SolventInputWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dichloroethane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.DichloroethaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dichloroethane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.DichloroethaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Benzene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.BenzeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Benzene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.BenzeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chloroform {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.ChloroformColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chloroform\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.ChloroformColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthyleneOxide {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.EthyleneOxideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthyleneOxide\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.EthyleneOxideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethyleneChloride {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.MethyleneChlorideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethyleneChloride\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.MethyleneChlorideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trichloroethylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.TrichloroethyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trichloroethylene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.TrichloroethyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetone {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.AcetoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetone\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.AcetoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetonitrile {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.AcetonitrileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetonitrile\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.AcetonitrileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Butane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.ButaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Butane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.ButaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ethanol {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.EthanolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethanol\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.EthanolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthylAcetate {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.EthylAcetateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthylAcetate\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.EthylAcetateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthylEther {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.EthylEtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthylEther\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.EthylEtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Heptane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.HeptaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heptane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.HeptaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Hexane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.HexaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hexane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.HexaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IsopropylAlcohol {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.IsopropylAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsopropylAlcohol\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.IsopropylAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methanol {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.MethanolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methanol\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.MethanolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pentane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.PentaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pentane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.PentaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.PropaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.PropaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Toluene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.TolueneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Toluene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.TolueneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string orthoXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.orthoXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orthoXylene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.orthoXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string metaXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.metaXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'metaXylene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.metaXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string paraXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.paraXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paraXylene\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.paraXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Isobutane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.IsobutaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isobutane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.IsobutaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nHexane {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.nHexaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nHexane\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.nHexaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DiethylEther {
                get {
                    try {
                        return ((string)(this[this.tableSolventsDATA.DiethylEtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiethylEther\' in table \'SolventsDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventsDATA.DiethylEtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableSolventsDATA.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateNull() {
                this[this.tableSolventsDATA.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIDNull() {
                return this.IsNull(this.tableSolventsDATA.SampleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIDNull() {
                this[this.tableSolventsDATA.SampleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tableSolventsDATA.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tableSolventsDATA.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSolventInputWeightNull() {
                return this.IsNull(this.tableSolventsDATA.SolventInputWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSolventInputWeightNull() {
                this[this.tableSolventsDATA.SolventInputWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDichloroethaneNull() {
                return this.IsNull(this.tableSolventsDATA.DichloroethaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDichloroethaneNull() {
                this[this.tableSolventsDATA.DichloroethaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBenzeneNull() {
                return this.IsNull(this.tableSolventsDATA.BenzeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBenzeneNull() {
                this[this.tableSolventsDATA.BenzeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChloroformNull() {
                return this.IsNull(this.tableSolventsDATA.ChloroformColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChloroformNull() {
                this[this.tableSolventsDATA.ChloroformColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthyleneOxideNull() {
                return this.IsNull(this.tableSolventsDATA.EthyleneOxideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthyleneOxideNull() {
                this[this.tableSolventsDATA.EthyleneOxideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethyleneChlorideNull() {
                return this.IsNull(this.tableSolventsDATA.MethyleneChlorideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethyleneChlorideNull() {
                this[this.tableSolventsDATA.MethyleneChlorideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrichloroethyleneNull() {
                return this.IsNull(this.tableSolventsDATA.TrichloroethyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrichloroethyleneNull() {
                this[this.tableSolventsDATA.TrichloroethyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetoneNull() {
                return this.IsNull(this.tableSolventsDATA.AcetoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetoneNull() {
                this[this.tableSolventsDATA.AcetoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetonitrileNull() {
                return this.IsNull(this.tableSolventsDATA.AcetonitrileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetonitrileNull() {
                this[this.tableSolventsDATA.AcetonitrileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsButaneNull() {
                return this.IsNull(this.tableSolventsDATA.ButaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetButaneNull() {
                this[this.tableSolventsDATA.ButaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthanolNull() {
                return this.IsNull(this.tableSolventsDATA.EthanolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthanolNull() {
                this[this.tableSolventsDATA.EthanolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthylAcetateNull() {
                return this.IsNull(this.tableSolventsDATA.EthylAcetateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthylAcetateNull() {
                this[this.tableSolventsDATA.EthylAcetateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthylEtherNull() {
                return this.IsNull(this.tableSolventsDATA.EthylEtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthylEtherNull() {
                this[this.tableSolventsDATA.EthylEtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHeptaneNull() {
                return this.IsNull(this.tableSolventsDATA.HeptaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHeptaneNull() {
                this[this.tableSolventsDATA.HeptaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHexaneNull() {
                return this.IsNull(this.tableSolventsDATA.HexaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHexaneNull() {
                this[this.tableSolventsDATA.HexaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsopropylAlcoholNull() {
                return this.IsNull(this.tableSolventsDATA.IsopropylAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsopropylAlcoholNull() {
                this[this.tableSolventsDATA.IsopropylAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethanolNull() {
                return this.IsNull(this.tableSolventsDATA.MethanolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethanolNull() {
                this[this.tableSolventsDATA.MethanolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPentaneNull() {
                return this.IsNull(this.tableSolventsDATA.PentaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPentaneNull() {
                this[this.tableSolventsDATA.PentaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropaneNull() {
                return this.IsNull(this.tableSolventsDATA.PropaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropaneNull() {
                this[this.tableSolventsDATA.PropaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTolueneNull() {
                return this.IsNull(this.tableSolventsDATA.TolueneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTolueneNull() {
                this[this.tableSolventsDATA.TolueneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsorthoXyleneNull() {
                return this.IsNull(this.tableSolventsDATA.orthoXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetorthoXyleneNull() {
                this[this.tableSolventsDATA.orthoXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmetaXyleneNull() {
                return this.IsNull(this.tableSolventsDATA.metaXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmetaXyleneNull() {
                this[this.tableSolventsDATA.metaXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsparaXyleneNull() {
                return this.IsNull(this.tableSolventsDATA.paraXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetparaXyleneNull() {
                this[this.tableSolventsDATA.paraXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsobutaneNull() {
                return this.IsNull(this.tableSolventsDATA.IsobutaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsobutaneNull() {
                this[this.tableSolventsDATA.IsobutaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnHexaneNull() {
                return this.IsNull(this.tableSolventsDATA.nHexaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnHexaneNull() {
                this[this.tableSolventsDATA.nHexaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiethylEtherNull() {
                return this.IsNull(this.tableSolventsDATA.DiethylEtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiethylEtherNull() {
                this[this.tableSolventsDATA.DiethylEtherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class terpenesDATARow : global::System.Data.DataRow {
            
            private terpenesDATADataTable tableterpenesDATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal terpenesDATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableterpenesDATA = ((terpenesDATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableterpenesDATA.IDColumn]));
                }
                set {
                    this[this.tableterpenesDATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleID {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.SampleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleID\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.SampleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TerpWT {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.TerpWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerpWT\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.TerpWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aPinene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.aPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aPinene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.aPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Camphene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.CampheneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Camphene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.CampheneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bMyrcene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.bMyrceneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bMyrcene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.bMyrceneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bPinene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.bPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bPinene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.bPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string d3Carene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.d3CareneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'d3Carene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.d3CareneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aTerpinene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.aTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aTerpinene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.aTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ocimene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.OcimeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ocimene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.OcimeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Limonene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.LimoneneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Limonene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.LimoneneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string pCymene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.pCymeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pCymene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.pCymeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string yTerpinene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.yTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yTerpinene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.yTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Terpinolene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.TerpinoleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terpinolene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.TerpinoleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Linalool {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.LinaloolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linalool\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.LinaloolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Isopulegol {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.IsopulegolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isopulegol\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.IsopulegolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Geraniol {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.GeraniolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Geraniol\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.GeraniolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bCaryophyllene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.bCaryophylleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bCaryophyllene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.bCaryophylleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aHumulene {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.aHumuleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aHumulene\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.aHumuleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Nerolidol {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.NerolidolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nerolidol\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.NerolidolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guaiol {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.GuaiolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Guaiol\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.GuaiolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aBisabolol {
                get {
                    try {
                        return ((string)(this[this.tableterpenesDATA.aBisabololColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aBisabolol\' in table \'terpenesDATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterpenesDATA.aBisabololColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableterpenesDATA.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateNull() {
                this[this.tableterpenesDATA.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIDNull() {
                return this.IsNull(this.tableterpenesDATA.SampleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIDNull() {
                this[this.tableterpenesDATA.SampleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tableterpenesDATA.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tableterpenesDATA.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tableterpenesDATA.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tableterpenesDATA.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tableterpenesDATA.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tableterpenesDATA.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpWTNull() {
                return this.IsNull(this.tableterpenesDATA.TerpWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpWTNull() {
                this[this.tableterpenesDATA.TerpWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaPineneNull() {
                return this.IsNull(this.tableterpenesDATA.aPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaPineneNull() {
                this[this.tableterpenesDATA.aPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCampheneNull() {
                return this.IsNull(this.tableterpenesDATA.CampheneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCampheneNull() {
                this[this.tableterpenesDATA.CampheneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbMyrceneNull() {
                return this.IsNull(this.tableterpenesDATA.bMyrceneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbMyrceneNull() {
                this[this.tableterpenesDATA.bMyrceneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbPineneNull() {
                return this.IsNull(this.tableterpenesDATA.bPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbPineneNull() {
                this[this.tableterpenesDATA.bPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isd3CareneNull() {
                return this.IsNull(this.tableterpenesDATA.d3CareneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setd3CareneNull() {
                this[this.tableterpenesDATA.d3CareneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaTerpineneNull() {
                return this.IsNull(this.tableterpenesDATA.aTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaTerpineneNull() {
                this[this.tableterpenesDATA.aTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOcimeneNull() {
                return this.IsNull(this.tableterpenesDATA.OcimeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOcimeneNull() {
                this[this.tableterpenesDATA.OcimeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLimoneneNull() {
                return this.IsNull(this.tableterpenesDATA.LimoneneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLimoneneNull() {
                this[this.tableterpenesDATA.LimoneneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspCymeneNull() {
                return this.IsNull(this.tableterpenesDATA.pCymeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpCymeneNull() {
                this[this.tableterpenesDATA.pCymeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsyTerpineneNull() {
                return this.IsNull(this.tableterpenesDATA.yTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetyTerpineneNull() {
                this[this.tableterpenesDATA.yTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpinoleneNull() {
                return this.IsNull(this.tableterpenesDATA.TerpinoleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpinoleneNull() {
                this[this.tableterpenesDATA.TerpinoleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLinaloolNull() {
                return this.IsNull(this.tableterpenesDATA.LinaloolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLinaloolNull() {
                this[this.tableterpenesDATA.LinaloolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsopulegolNull() {
                return this.IsNull(this.tableterpenesDATA.IsopulegolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsopulegolNull() {
                this[this.tableterpenesDATA.IsopulegolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGeraniolNull() {
                return this.IsNull(this.tableterpenesDATA.GeraniolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGeraniolNull() {
                this[this.tableterpenesDATA.GeraniolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbCaryophylleneNull() {
                return this.IsNull(this.tableterpenesDATA.bCaryophylleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbCaryophylleneNull() {
                this[this.tableterpenesDATA.bCaryophylleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaHumuleneNull() {
                return this.IsNull(this.tableterpenesDATA.aHumuleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaHumuleneNull() {
                this[this.tableterpenesDATA.aHumuleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNerolidolNull() {
                return this.IsNull(this.tableterpenesDATA.NerolidolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNerolidolNull() {
                this[this.tableterpenesDATA.NerolidolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGuaiolNull() {
                return this.IsNull(this.tableterpenesDATA.GuaiolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGuaiolNull() {
                this[this.tableterpenesDATA.GuaiolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaBisabololNull() {
                return this.IsNull(this.tableterpenesDATA.aBisabololColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaBisabololNull() {
                this[this.tableterpenesDATA.aBisabololColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class wADATARow : global::System.Data.DataRow {
            
            private wADATADataTable tablewADATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal wADATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablewADATA = ((wADATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablewADATA.IDColumn]));
                }
                set {
                    this[this.tablewADATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tablewADATA.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'wADATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADATA.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleID {
                get {
                    try {
                        return ((string)(this[this.tablewADATA.SampleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleID\' in table \'wADATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADATA.SampleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablewADATA.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'wADATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADATA.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablewADATA.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'wADATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADATA.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aw {
                get {
                    try {
                        return ((string)(this[this.tablewADATA.AwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aw\' in table \'wADATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADATA.AwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tablewADATA.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateNull() {
                this[this.tablewADATA.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIDNull() {
                return this.IsNull(this.tablewADATA.SampleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIDNull() {
                this[this.tablewADATA.SampleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablewADATA.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablewADATA.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablewADATA.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablewADATA.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAwNull() {
                return this.IsNull(this.tablewADATA.AwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAwNull() {
                this[this.tablewADATA.AwColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dataDTRow : global::System.Data.DataRow {
            
            private dataDTDataTable tabledataDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dataDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataDT = ((dataDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledataDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tabledataDT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PotencyID {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.PotencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotencyID\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.PotencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDVP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBDVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDVP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBGPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBGPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCVP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.THCVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCVP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.THCVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDAP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBDAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDAP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBNP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBNP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGAP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBGAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGAP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBGAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D9THCP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.D9THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THCP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.D9THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D8THCP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.D8THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THCP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.D8THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCAP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.THCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCAP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.THCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBCP {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.CBCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBCP\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEST {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.TESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEST\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.TESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalTHC {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.TotalTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTHC\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.TotalTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalCBD {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.TotalCBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCBD\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.TotalCBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabledataDT.IDColumn]));
                }
                set {
                    this[this.tabledataDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledataDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tabledataDT.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double WETWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.WETWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WETWEIGHT\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.WETWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDV {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBDVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDV\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBD {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBD\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBG {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBG\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCV {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.THCVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCV\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.THCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDA {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDA\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBN {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBN\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBGA {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGA\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D9THC {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.D9THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THC\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.D9THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D8THC {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.D8THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THC\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.D8THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCA {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.THCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCA\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.THCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBC {
                get {
                    try {
                        return ((double)(this[this.tabledataDT.CBCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBC\' in table \'dataDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataDT.CBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tabledataDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tabledataDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tabledataDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tabledataDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tabledataDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tabledataDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tabledataDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tabledataDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tabledataDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tabledataDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tabledataDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tabledataDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tabledataDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tabledataDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tabledataDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tabledataDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tabledataDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tabledataDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tabledataDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tabledataDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tabledataDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tabledataDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tabledataDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tabledataDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledataDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tabledataDT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tabledataDT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tabledataDT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPotencyIDNull() {
                return this.IsNull(this.tabledataDT.PotencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPotencyIDNull() {
                this[this.tabledataDT.PotencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVPNull() {
                return this.IsNull(this.tabledataDT.CBDVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVPNull() {
                this[this.tabledataDT.CBDVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDPNull() {
                return this.IsNull(this.tabledataDT.CBDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDPNull() {
                this[this.tabledataDT.CBDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGPNull() {
                return this.IsNull(this.tabledataDT.CBGPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGPNull() {
                this[this.tabledataDT.CBGPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVPNull() {
                return this.IsNull(this.tabledataDT.THCVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVPNull() {
                this[this.tabledataDT.THCVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDAPNull() {
                return this.IsNull(this.tabledataDT.CBDAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDAPNull() {
                this[this.tabledataDT.CBDAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNPNull() {
                return this.IsNull(this.tabledataDT.CBNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNPNull() {
                this[this.tabledataDT.CBNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGAPNull() {
                return this.IsNull(this.tabledataDT.CBGAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGAPNull() {
                this[this.tabledataDT.CBGAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCPNull() {
                return this.IsNull(this.tabledataDT.D9THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCPNull() {
                this[this.tabledataDT.D9THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCPNull() {
                return this.IsNull(this.tabledataDT.D8THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCPNull() {
                this[this.tabledataDT.D8THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCAPNull() {
                return this.IsNull(this.tabledataDT.THCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCAPNull() {
                this[this.tabledataDT.THCAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCPNull() {
                return this.IsNull(this.tabledataDT.CBCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCPNull() {
                this[this.tabledataDT.CBCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTESTNull() {
                return this.IsNull(this.tabledataDT.TESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTESTNull() {
                this[this.tabledataDT.TESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalTHCNull() {
                return this.IsNull(this.tabledataDT.TotalTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalTHCNull() {
                this[this.tabledataDT.TotalTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalCBDNull() {
                return this.IsNull(this.tabledataDT.TotalCBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalCBDNull() {
                this[this.tabledataDT.TotalCBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tabledataDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tabledataDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tabledataDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tabledataDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMETHODNull() {
                return this.IsNull(this.tabledataDT.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMETHODNull() {
                this[this.tabledataDT.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWETWEIGHTNull() {
                return this.IsNull(this.tabledataDT.WETWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWETWEIGHTNull() {
                this[this.tabledataDT.WETWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVNull() {
                return this.IsNull(this.tabledataDT.CBDVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVNull() {
                this[this.tabledataDT.CBDVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDNull() {
                return this.IsNull(this.tabledataDT.CBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDNull() {
                this[this.tabledataDT.CBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGNull() {
                return this.IsNull(this.tabledataDT.CBGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGNull() {
                this[this.tabledataDT.CBGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVNull() {
                return this.IsNull(this.tabledataDT.THCVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVNull() {
                this[this.tabledataDT.THCVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDANull() {
                return this.IsNull(this.tabledataDT.CBDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDANull() {
                this[this.tabledataDT.CBDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNNull() {
                return this.IsNull(this.tabledataDT.CBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNNull() {
                this[this.tabledataDT.CBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGANull() {
                return this.IsNull(this.tabledataDT.CBGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGANull() {
                this[this.tabledataDT.CBGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCNull() {
                return this.IsNull(this.tabledataDT.D9THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCNull() {
                this[this.tabledataDT.D9THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCNull() {
                return this.IsNull(this.tabledataDT.D8THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCNull() {
                this[this.tabledataDT.D8THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCANull() {
                return this.IsNull(this.tabledataDT.THCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCANull() {
                this[this.tabledataDT.THCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCNull() {
                return this.IsNull(this.tabledataDT.CBCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCNull() {
                this[this.tabledataDT.CBCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PestiDTRow : global::System.Data.DataRow {
            
            private PestiDTDataTable tablePestiDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PestiDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePestiDT = ((PestiDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePestiDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePestiDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tablePestiDT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LCMSID {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.LCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMSID\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.LCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PestInputWt {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PestInputWtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PestInputWt\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PestInputWtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Abamectin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AbamectinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abamectin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AbamectinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acephate {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AcephateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acephate\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AcephateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acequinocyl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AcequinocylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acequinocyl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AcequinocylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetamiprid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AcetamipridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetamiprid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AcetamipridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aldicarb {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AldicarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aldicarb\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AldicarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Azoxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.AzoxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Azoxystrobin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.AzoxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenazate {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.BifenazateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenazate\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.BifenazateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenthrin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.BifenthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenthrin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.BifenthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Boscalid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.BoscalidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Boscalid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.BoscalidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Captan {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CaptanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Captan\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CaptanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbaryl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CarbarylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbaryl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CarbarylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbofuran {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CarbofuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbofuran\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CarbofuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorantranilprole {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ChlorantranilproleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorantranilprole\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ChlorantranilproleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlordane {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ChlordaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlordane\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ChlordaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorfenapyr {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ChlorfenapyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorfenapyr\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ChlorfenapyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorpyrifos {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ChlorpyrifosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorpyrifos\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ChlorpyrifosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Clofentezine {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ClofentezineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clofentezine\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ClofentezineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Coumaphos {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CoumaphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coumaphos\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CoumaphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cyfluthrin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CyfluthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cyfluthrin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CyfluthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cypermethrin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.CypermethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cypermethrin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.CypermethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Daminozide {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DaminozideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Daminozide\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DaminozideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dichlorvos {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DichlorvosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dichlorvos\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DichlorvosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Diazinon {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DiazinonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diazinon\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DiazinonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethoate {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DimethoateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethoate\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DimethoateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethomorph {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.DimethomorphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethomorph\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.DimethomorphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ethoprophos {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.EthoprophosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethoprophos\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.EthoprophosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etofenprox {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.EtofenproxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etofenprox\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.EtofenproxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etoxazole {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.EtoxazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etoxazole\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.EtoxazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenhexamid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FenhexamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenhexamid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FenhexamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenoxycarb {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FenoxycarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenoxycarb\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FenoxycarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenpyroximate {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FenpyroximateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenpyroximate\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FenpyroximateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fipronil {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FipronilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fipronil\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FipronilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Flonicamid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FlonicamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flonicamid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FlonicamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fludioxonil {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.FludioxonilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fludioxonil\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.FludioxonilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Hexythiazox {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.HexythiazoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hexythiazox\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.HexythiazoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imazalil {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ImazalilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imazalil\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ImazalilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imidacloprid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ImidaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imidacloprid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ImidaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KresoximMethyl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.KresoximMethylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KresoximMethyl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.KresoximMethylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Malathion {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MalathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Malathion\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MalathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Metalaxyl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MetalaxylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Metalaxyl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MetalaxylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methiocarb {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MethiocarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methiocarb\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MethiocarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methomyl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MethomylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methomyl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MethomylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethylParathion {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MethylParathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethylParathion\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MethylParathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mevinphos {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MevinphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mevinphos\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MevinphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Myclobutanil {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.MyclobutanilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myclobutanil\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.MyclobutanilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Naled {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.NaledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Naled\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.NaledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Oxamyl {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.OxamylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oxamyl\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.OxamylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pentachloronitrobenzene {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PentachloronitrobenzeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pentachloronitrobenzene\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PentachloronitrobenzeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Permethrins {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PermethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Permethrins\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PermethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Phosmet {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PhosmetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phosmet\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PhosmetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PiperonylButoxide {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PiperonylButoxideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiperonylButoxide\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PiperonylButoxideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Prallethrin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PrallethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prallethrin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PrallethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propiconazole {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PropiconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propiconazole\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PropiconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propoxur {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PropoxurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propoxur\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PropoxurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyrethrins {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PyrethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyrethrins\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PyrethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyridaben {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PyridabenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyridaben\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PyridabenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramJ {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpinetoramJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramJ\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpinetoramJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramL {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpinetoramLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramL\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpinetoramLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadA {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpinosadAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadA\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpinosadAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadD {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpinosadDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadD\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpinosadDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiromesifen {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpiromesifenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiromesifen\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpiromesifenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spirotetramat {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpirotetramatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spirotetramat\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpirotetramatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiroxamine {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.SpiroxamineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiroxamine\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.SpiroxamineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Tebuconazole {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.TebuconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tebuconazole\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.TebuconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiacloprid {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ThiaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiacloprid\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ThiaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiamethoxam {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.ThiamethoxamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiamethoxam\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.ThiamethoxamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trifloxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.TrifloxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trifloxystrobin\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.TrifloxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablePestiDT.IDColumn]));
                }
                set {
                    this[this.tablePestiDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Paclobutrazol {
                get {
                    try {
                        return ((string)(this[this.tablePestiDT.PaclobutrazolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paclobutrazol\' in table \'PestiDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePestiDT.PaclobutrazolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablePestiDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablePestiDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablePestiDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablePestiDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablePestiDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablePestiDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablePestiDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablePestiDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablePestiDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablePestiDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablePestiDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablePestiDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablePestiDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablePestiDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablePestiDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablePestiDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablePestiDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablePestiDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablePestiDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablePestiDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablePestiDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablePestiDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablePestiDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablePestiDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablePestiDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablePestiDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablePestiDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablePestiDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablePestiDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablePestiDT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tablePestiDT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tablePestiDT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLCMSIDNull() {
                return this.IsNull(this.tablePestiDT.LCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLCMSIDNull() {
                this[this.tablePestiDT.LCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tablePestiDT.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tablePestiDT.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPestInputWtNull() {
                return this.IsNull(this.tablePestiDT.PestInputWtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPestInputWtNull() {
                this[this.tablePestiDT.PestInputWtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAbamectinNull() {
                return this.IsNull(this.tablePestiDT.AbamectinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAbamectinNull() {
                this[this.tablePestiDT.AbamectinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcephateNull() {
                return this.IsNull(this.tablePestiDT.AcephateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcephateNull() {
                this[this.tablePestiDT.AcephateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcequinocylNull() {
                return this.IsNull(this.tablePestiDT.AcequinocylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcequinocylNull() {
                this[this.tablePestiDT.AcequinocylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetamipridNull() {
                return this.IsNull(this.tablePestiDT.AcetamipridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetamipridNull() {
                this[this.tablePestiDT.AcetamipridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAldicarbNull() {
                return this.IsNull(this.tablePestiDT.AldicarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAldicarbNull() {
                this[this.tablePestiDT.AldicarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAzoxystrobinNull() {
                return this.IsNull(this.tablePestiDT.AzoxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAzoxystrobinNull() {
                this[this.tablePestiDT.AzoxystrobinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenazateNull() {
                return this.IsNull(this.tablePestiDT.BifenazateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenazateNull() {
                this[this.tablePestiDT.BifenazateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenthrinNull() {
                return this.IsNull(this.tablePestiDT.BifenthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenthrinNull() {
                this[this.tablePestiDT.BifenthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBoscalidNull() {
                return this.IsNull(this.tablePestiDT.BoscalidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBoscalidNull() {
                this[this.tablePestiDT.BoscalidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCaptanNull() {
                return this.IsNull(this.tablePestiDT.CaptanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCaptanNull() {
                this[this.tablePestiDT.CaptanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbarylNull() {
                return this.IsNull(this.tablePestiDT.CarbarylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbarylNull() {
                this[this.tablePestiDT.CarbarylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbofuranNull() {
                return this.IsNull(this.tablePestiDT.CarbofuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbofuranNull() {
                this[this.tablePestiDT.CarbofuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorantranilproleNull() {
                return this.IsNull(this.tablePestiDT.ChlorantranilproleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorantranilproleNull() {
                this[this.tablePestiDT.ChlorantranilproleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlordaneNull() {
                return this.IsNull(this.tablePestiDT.ChlordaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlordaneNull() {
                this[this.tablePestiDT.ChlordaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorfenapyrNull() {
                return this.IsNull(this.tablePestiDT.ChlorfenapyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorfenapyrNull() {
                this[this.tablePestiDT.ChlorfenapyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorpyrifosNull() {
                return this.IsNull(this.tablePestiDT.ChlorpyrifosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorpyrifosNull() {
                this[this.tablePestiDT.ChlorpyrifosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClofentezineNull() {
                return this.IsNull(this.tablePestiDT.ClofentezineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClofentezineNull() {
                this[this.tablePestiDT.ClofentezineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCoumaphosNull() {
                return this.IsNull(this.tablePestiDT.CoumaphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCoumaphosNull() {
                this[this.tablePestiDT.CoumaphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCyfluthrinNull() {
                return this.IsNull(this.tablePestiDT.CyfluthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCyfluthrinNull() {
                this[this.tablePestiDT.CyfluthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCypermethrinNull() {
                return this.IsNull(this.tablePestiDT.CypermethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCypermethrinNull() {
                this[this.tablePestiDT.CypermethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDaminozideNull() {
                return this.IsNull(this.tablePestiDT.DaminozideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDaminozideNull() {
                this[this.tablePestiDT.DaminozideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDichlorvosNull() {
                return this.IsNull(this.tablePestiDT.DichlorvosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDichlorvosNull() {
                this[this.tablePestiDT.DichlorvosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiazinonNull() {
                return this.IsNull(this.tablePestiDT.DiazinonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiazinonNull() {
                this[this.tablePestiDT.DiazinonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethoateNull() {
                return this.IsNull(this.tablePestiDT.DimethoateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethoateNull() {
                this[this.tablePestiDT.DimethoateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethomorphNull() {
                return this.IsNull(this.tablePestiDT.DimethomorphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethomorphNull() {
                this[this.tablePestiDT.DimethomorphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthoprophosNull() {
                return this.IsNull(this.tablePestiDT.EthoprophosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthoprophosNull() {
                this[this.tablePestiDT.EthoprophosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtofenproxNull() {
                return this.IsNull(this.tablePestiDT.EtofenproxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtofenproxNull() {
                this[this.tablePestiDT.EtofenproxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtoxazoleNull() {
                return this.IsNull(this.tablePestiDT.EtoxazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtoxazoleNull() {
                this[this.tablePestiDT.EtoxazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenhexamidNull() {
                return this.IsNull(this.tablePestiDT.FenhexamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenhexamidNull() {
                this[this.tablePestiDT.FenhexamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenoxycarbNull() {
                return this.IsNull(this.tablePestiDT.FenoxycarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenoxycarbNull() {
                this[this.tablePestiDT.FenoxycarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenpyroximateNull() {
                return this.IsNull(this.tablePestiDT.FenpyroximateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenpyroximateNull() {
                this[this.tablePestiDT.FenpyroximateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFipronilNull() {
                return this.IsNull(this.tablePestiDT.FipronilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFipronilNull() {
                this[this.tablePestiDT.FipronilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFlonicamidNull() {
                return this.IsNull(this.tablePestiDT.FlonicamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFlonicamidNull() {
                this[this.tablePestiDT.FlonicamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFludioxonilNull() {
                return this.IsNull(this.tablePestiDT.FludioxonilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFludioxonilNull() {
                this[this.tablePestiDT.FludioxonilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHexythiazoxNull() {
                return this.IsNull(this.tablePestiDT.HexythiazoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHexythiazoxNull() {
                this[this.tablePestiDT.HexythiazoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImazalilNull() {
                return this.IsNull(this.tablePestiDT.ImazalilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImazalilNull() {
                this[this.tablePestiDT.ImazalilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImidaclopridNull() {
                return this.IsNull(this.tablePestiDT.ImidaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImidaclopridNull() {
                this[this.tablePestiDT.ImidaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKresoximMethylNull() {
                return this.IsNull(this.tablePestiDT.KresoximMethylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKresoximMethylNull() {
                this[this.tablePestiDT.KresoximMethylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMalathionNull() {
                return this.IsNull(this.tablePestiDT.MalathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMalathionNull() {
                this[this.tablePestiDT.MalathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMetalaxylNull() {
                return this.IsNull(this.tablePestiDT.MetalaxylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMetalaxylNull() {
                this[this.tablePestiDT.MetalaxylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethiocarbNull() {
                return this.IsNull(this.tablePestiDT.MethiocarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethiocarbNull() {
                this[this.tablePestiDT.MethiocarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethomylNull() {
                return this.IsNull(this.tablePestiDT.MethomylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethomylNull() {
                this[this.tablePestiDT.MethomylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethylParathionNull() {
                return this.IsNull(this.tablePestiDT.MethylParathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethylParathionNull() {
                this[this.tablePestiDT.MethylParathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMevinphosNull() {
                return this.IsNull(this.tablePestiDT.MevinphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMevinphosNull() {
                this[this.tablePestiDT.MevinphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMyclobutanilNull() {
                return this.IsNull(this.tablePestiDT.MyclobutanilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMyclobutanilNull() {
                this[this.tablePestiDT.MyclobutanilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNaledNull() {
                return this.IsNull(this.tablePestiDT.NaledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNaledNull() {
                this[this.tablePestiDT.NaledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOxamylNull() {
                return this.IsNull(this.tablePestiDT.OxamylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOxamylNull() {
                this[this.tablePestiDT.OxamylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPentachloronitrobenzeneNull() {
                return this.IsNull(this.tablePestiDT.PentachloronitrobenzeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPentachloronitrobenzeneNull() {
                this[this.tablePestiDT.PentachloronitrobenzeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPermethrinsNull() {
                return this.IsNull(this.tablePestiDT.PermethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPermethrinsNull() {
                this[this.tablePestiDT.PermethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhosmetNull() {
                return this.IsNull(this.tablePestiDT.PhosmetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhosmetNull() {
                this[this.tablePestiDT.PhosmetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPiperonylButoxideNull() {
                return this.IsNull(this.tablePestiDT.PiperonylButoxideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPiperonylButoxideNull() {
                this[this.tablePestiDT.PiperonylButoxideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrallethrinNull() {
                return this.IsNull(this.tablePestiDT.PrallethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrallethrinNull() {
                this[this.tablePestiDT.PrallethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropiconazoleNull() {
                return this.IsNull(this.tablePestiDT.PropiconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropiconazoleNull() {
                this[this.tablePestiDT.PropiconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropoxurNull() {
                return this.IsNull(this.tablePestiDT.PropoxurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropoxurNull() {
                this[this.tablePestiDT.PropoxurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyrethrinsNull() {
                return this.IsNull(this.tablePestiDT.PyrethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyrethrinsNull() {
                this[this.tablePestiDT.PyrethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyridabenNull() {
                return this.IsNull(this.tablePestiDT.PyridabenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyridabenNull() {
                this[this.tablePestiDT.PyridabenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramJNull() {
                return this.IsNull(this.tablePestiDT.SpinetoramJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramJNull() {
                this[this.tablePestiDT.SpinetoramJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramLNull() {
                return this.IsNull(this.tablePestiDT.SpinetoramLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramLNull() {
                this[this.tablePestiDT.SpinetoramLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadANull() {
                return this.IsNull(this.tablePestiDT.SpinosadAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadANull() {
                this[this.tablePestiDT.SpinosadAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadDNull() {
                return this.IsNull(this.tablePestiDT.SpinosadDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadDNull() {
                this[this.tablePestiDT.SpinosadDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiromesifenNull() {
                return this.IsNull(this.tablePestiDT.SpiromesifenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiromesifenNull() {
                this[this.tablePestiDT.SpiromesifenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpirotetramatNull() {
                return this.IsNull(this.tablePestiDT.SpirotetramatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpirotetramatNull() {
                this[this.tablePestiDT.SpirotetramatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiroxamineNull() {
                return this.IsNull(this.tablePestiDT.SpiroxamineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiroxamineNull() {
                this[this.tablePestiDT.SpiroxamineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTebuconazoleNull() {
                return this.IsNull(this.tablePestiDT.TebuconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTebuconazoleNull() {
                this[this.tablePestiDT.TebuconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiaclopridNull() {
                return this.IsNull(this.tablePestiDT.ThiaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiaclopridNull() {
                this[this.tablePestiDT.ThiaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiamethoxamNull() {
                return this.IsNull(this.tablePestiDT.ThiamethoxamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiamethoxamNull() {
                this[this.tablePestiDT.ThiamethoxamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrifloxystrobinNull() {
                return this.IsNull(this.tablePestiDT.TrifloxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrifloxystrobinNull() {
                this[this.tablePestiDT.TrifloxystrobinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaclobutrazolNull() {
                return this.IsNull(this.tablePestiDT.PaclobutrazolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaclobutrazolNull() {
                this[this.tablePestiDT.PaclobutrazolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SolventDTRow : global::System.Data.DataRow {
            
            private SolventDTDataTable tableSolventDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SolventDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSolventDT = ((SolventDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSolventDT.IDColumn]));
                }
                set {
                    this[this.tableSolventDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSolventDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSolventDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SolventInputWeight {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.SolventInputWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SolventInputWeight\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.SolventInputWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dichloroethane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.DichloroethaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dichloroethane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.DichloroethaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Benzene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.BenzeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Benzene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.BenzeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chloroform {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.ChloroformColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chloroform\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.ChloroformColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthyleneOxide {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.EthyleneOxideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthyleneOxide\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.EthyleneOxideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethyleneChloride {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.MethyleneChlorideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethyleneChloride\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.MethyleneChlorideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trichloroethylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.TrichloroethyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trichloroethylene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.TrichloroethyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetone {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.AcetoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetone\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.AcetoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetonitrile {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.AcetonitrileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetonitrile\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.AcetonitrileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Butane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.ButaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Butane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.ButaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ethanol {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.EthanolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethanol\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.EthanolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthylAcetate {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.EthylAcetateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthylAcetate\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.EthylAcetateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EthylEther {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.EthylEtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthylEther\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.EthylEtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Heptane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.HeptaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heptane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.HeptaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Hexane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.HexaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hexane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.HexaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IsopropylAlcohol {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.IsopropylAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsopropylAlcohol\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.IsopropylAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methanol {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.MethanolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methanol\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.MethanolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pentane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.PentaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pentane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.PentaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.PropaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.PropaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Toluene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.TolueneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Toluene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.TolueneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string orthoXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.orthoXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orthoXylene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.orthoXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string metaXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.metaXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'metaXylene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.metaXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string paraXylene {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.paraXyleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paraXylene\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.paraXyleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Isobutane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.IsobutaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isobutane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.IsobutaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nHexane {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.nHexaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nHexane\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.nHexaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DiethylEther {
                get {
                    try {
                        return ((string)(this[this.tableSolventDT.DiethylEtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiethylEther\' in table \'SolventDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolventDT.DiethylEtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tableSolventDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tableSolventDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tableSolventDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tableSolventDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tableSolventDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tableSolventDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableSolventDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tableSolventDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableSolventDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableSolventDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tableSolventDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tableSolventDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tableSolventDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tableSolventDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tableSolventDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tableSolventDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tableSolventDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tableSolventDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tableSolventDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tableSolventDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableSolventDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableSolventDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tableSolventDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tableSolventDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tableSolventDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tableSolventDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tableSolventDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tableSolventDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSolventInputWeightNull() {
                return this.IsNull(this.tableSolventDT.SolventInputWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSolventInputWeightNull() {
                this[this.tableSolventDT.SolventInputWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDichloroethaneNull() {
                return this.IsNull(this.tableSolventDT.DichloroethaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDichloroethaneNull() {
                this[this.tableSolventDT.DichloroethaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBenzeneNull() {
                return this.IsNull(this.tableSolventDT.BenzeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBenzeneNull() {
                this[this.tableSolventDT.BenzeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChloroformNull() {
                return this.IsNull(this.tableSolventDT.ChloroformColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChloroformNull() {
                this[this.tableSolventDT.ChloroformColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthyleneOxideNull() {
                return this.IsNull(this.tableSolventDT.EthyleneOxideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthyleneOxideNull() {
                this[this.tableSolventDT.EthyleneOxideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethyleneChlorideNull() {
                return this.IsNull(this.tableSolventDT.MethyleneChlorideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethyleneChlorideNull() {
                this[this.tableSolventDT.MethyleneChlorideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrichloroethyleneNull() {
                return this.IsNull(this.tableSolventDT.TrichloroethyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrichloroethyleneNull() {
                this[this.tableSolventDT.TrichloroethyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetoneNull() {
                return this.IsNull(this.tableSolventDT.AcetoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetoneNull() {
                this[this.tableSolventDT.AcetoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetonitrileNull() {
                return this.IsNull(this.tableSolventDT.AcetonitrileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetonitrileNull() {
                this[this.tableSolventDT.AcetonitrileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsButaneNull() {
                return this.IsNull(this.tableSolventDT.ButaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetButaneNull() {
                this[this.tableSolventDT.ButaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthanolNull() {
                return this.IsNull(this.tableSolventDT.EthanolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthanolNull() {
                this[this.tableSolventDT.EthanolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthylAcetateNull() {
                return this.IsNull(this.tableSolventDT.EthylAcetateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthylAcetateNull() {
                this[this.tableSolventDT.EthylAcetateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthylEtherNull() {
                return this.IsNull(this.tableSolventDT.EthylEtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthylEtherNull() {
                this[this.tableSolventDT.EthylEtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHeptaneNull() {
                return this.IsNull(this.tableSolventDT.HeptaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHeptaneNull() {
                this[this.tableSolventDT.HeptaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHexaneNull() {
                return this.IsNull(this.tableSolventDT.HexaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHexaneNull() {
                this[this.tableSolventDT.HexaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsopropylAlcoholNull() {
                return this.IsNull(this.tableSolventDT.IsopropylAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsopropylAlcoholNull() {
                this[this.tableSolventDT.IsopropylAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethanolNull() {
                return this.IsNull(this.tableSolventDT.MethanolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethanolNull() {
                this[this.tableSolventDT.MethanolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPentaneNull() {
                return this.IsNull(this.tableSolventDT.PentaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPentaneNull() {
                this[this.tableSolventDT.PentaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropaneNull() {
                return this.IsNull(this.tableSolventDT.PropaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropaneNull() {
                this[this.tableSolventDT.PropaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTolueneNull() {
                return this.IsNull(this.tableSolventDT.TolueneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTolueneNull() {
                this[this.tableSolventDT.TolueneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsorthoXyleneNull() {
                return this.IsNull(this.tableSolventDT.orthoXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetorthoXyleneNull() {
                this[this.tableSolventDT.orthoXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmetaXyleneNull() {
                return this.IsNull(this.tableSolventDT.metaXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmetaXyleneNull() {
                this[this.tableSolventDT.metaXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsparaXyleneNull() {
                return this.IsNull(this.tableSolventDT.paraXyleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetparaXyleneNull() {
                this[this.tableSolventDT.paraXyleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsobutaneNull() {
                return this.IsNull(this.tableSolventDT.IsobutaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsobutaneNull() {
                this[this.tableSolventDT.IsobutaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnHexaneNull() {
                return this.IsNull(this.tableSolventDT.nHexaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnHexaneNull() {
                this[this.tableSolventDT.nHexaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiethylEtherNull() {
                return this.IsNull(this.tableSolventDT.DiethylEtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiethylEtherNull() {
                this[this.tableSolventDT.DiethylEtherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class metalsDTRow : global::System.Data.DataRow {
            
            private metalsDTDataTable tablemetalsDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal metalsDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemetalsDT = ((metalsDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemetalsDT.IDColumn]));
                }
                set {
                    this[this.tablemetalsDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemetalsDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemetalsDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablemetalsDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'metalsDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalsDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AASID {
                get {
                    return ((string)(this[this.tablemetalsDT.AASIDColumn]));
                }
                set {
                    this[this.tablemetalsDT.AASIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    return ((string)(this[this.tablemetalsDT.MethodColumn]));
                }
                set {
                    this[this.tablemetalsDT.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    return ((string)(this[this.tablemetalsDT.TechniqueColumn]));
                }
                set {
                    this[this.tablemetalsDT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MetalsWeight {
                get {
                    return ((string)(this[this.tablemetalsDT.MetalsWeightColumn]));
                }
                set {
                    this[this.tablemetalsDT.MetalsWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Arsenic {
                get {
                    return ((string)(this[this.tablemetalsDT.ArsenicColumn]));
                }
                set {
                    this[this.tablemetalsDT.ArsenicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cadmium {
                get {
                    return ((string)(this[this.tablemetalsDT.CadmiumColumn]));
                }
                set {
                    this[this.tablemetalsDT.CadmiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Lead {
                get {
                    return ((string)(this[this.tablemetalsDT.LeadColumn]));
                }
                set {
                    this[this.tablemetalsDT.LeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mercury {
                get {
                    return ((string)(this[this.tablemetalsDT.MercuryColumn]));
                }
                set {
                    this[this.tablemetalsDT.MercuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablemetalsDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablemetalsDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablemetalsDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablemetalsDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablemetalsDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablemetalsDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablemetalsDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablemetalsDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablemetalsDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablemetalsDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablemetalsDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablemetalsDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablemetalsDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablemetalsDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablemetalsDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablemetalsDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablemetalsDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablemetalsDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablemetalsDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablemetalsDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablemetalsDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablemetalsDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablemetalsDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablemetalsDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablemetalsDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablemetalsDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablemetalsDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablemetalsDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablemetalsDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablemetalsDT.RemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class microbialDTRow : global::System.Data.DataRow {
            
            private microbialDTDataTable tablemicrobialDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal microbialDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemicrobialDT = ((microbialDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemicrobialDT.IDColumn]));
                }
                set {
                    this[this.tablemicrobialDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemicrobialDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemicrobialDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MicrobialWeight {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.MicrobialWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MicrobialWeight\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.MicrobialWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aspergillus {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.AspergillusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aspergillus\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.AspergillusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShigaToxin {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.ShigaToxinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShigaToxin\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.ShigaToxinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Salmonella {
                get {
                    try {
                        return ((string)(this[this.tablemicrobialDT.SalmonellaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salmonella\' in table \'microbialDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemicrobialDT.SalmonellaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablemicrobialDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablemicrobialDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablemicrobialDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablemicrobialDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablemicrobialDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablemicrobialDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablemicrobialDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablemicrobialDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablemicrobialDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablemicrobialDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablemicrobialDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablemicrobialDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablemicrobialDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablemicrobialDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablemicrobialDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablemicrobialDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablemicrobialDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablemicrobialDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablemicrobialDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablemicrobialDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablemicrobialDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablemicrobialDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablemicrobialDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablemicrobialDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablemicrobialDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablemicrobialDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablemicrobialDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablemicrobialDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablemicrobialDT.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablemicrobialDT.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablemicrobialDT.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablemicrobialDT.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMicrobialWeightNull() {
                return this.IsNull(this.tablemicrobialDT.MicrobialWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMicrobialWeightNull() {
                this[this.tablemicrobialDT.MicrobialWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAspergillusNull() {
                return this.IsNull(this.tablemicrobialDT.AspergillusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAspergillusNull() {
                this[this.tablemicrobialDT.AspergillusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShigaToxinNull() {
                return this.IsNull(this.tablemicrobialDT.ShigaToxinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShigaToxinNull() {
                this[this.tablemicrobialDT.ShigaToxinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalmonellaNull() {
                return this.IsNull(this.tablemicrobialDT.SalmonellaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalmonellaNull() {
                this[this.tablemicrobialDT.SalmonellaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mycotoxinDTRow : global::System.Data.DataRow {
            
            private mycotoxinDTDataTable tablemycotoxinDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal mycotoxinDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemycotoxinDT = ((mycotoxinDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablemycotoxinDT.IDColumn]));
                }
                set {
                    this[this.tablemycotoxinDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemycotoxinDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemycotoxinDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tablemycotoxinDT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LCMSID {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.LCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMSID\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.LCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MycoWeight {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.MycoWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MycoWeight\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.MycoWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AB1 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.AB1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AB1\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.AB1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AB2 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.AB2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AB2\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.AB2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AG1 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.AG1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AG1\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.AG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AG2 {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.AG2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AG2\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.AG2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTA {
                get {
                    try {
                        return ((string)(this[this.tablemycotoxinDT.OTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTA\' in table \'mycotoxinDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemycotoxinDT.OTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablemycotoxinDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablemycotoxinDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablemycotoxinDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablemycotoxinDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablemycotoxinDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablemycotoxinDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablemycotoxinDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablemycotoxinDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablemycotoxinDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablemycotoxinDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablemycotoxinDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablemycotoxinDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablemycotoxinDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablemycotoxinDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablemycotoxinDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablemycotoxinDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablemycotoxinDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablemycotoxinDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablemycotoxinDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablemycotoxinDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablemycotoxinDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablemycotoxinDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablemycotoxinDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablemycotoxinDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablemycotoxinDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablemycotoxinDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablemycotoxinDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablemycotoxinDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablemycotoxinDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablemycotoxinDT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tablemycotoxinDT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tablemycotoxinDT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablemycotoxinDT.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablemycotoxinDT.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablemycotoxinDT.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablemycotoxinDT.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLCMSIDNull() {
                return this.IsNull(this.tablemycotoxinDT.LCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLCMSIDNull() {
                this[this.tablemycotoxinDT.LCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMycoWeightNull() {
                return this.IsNull(this.tablemycotoxinDT.MycoWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMycoWeightNull() {
                this[this.tablemycotoxinDT.MycoWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAB1Null() {
                return this.IsNull(this.tablemycotoxinDT.AB1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAB1Null() {
                this[this.tablemycotoxinDT.AB1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAB2Null() {
                return this.IsNull(this.tablemycotoxinDT.AB2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAB2Null() {
                this[this.tablemycotoxinDT.AB2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAG1Null() {
                return this.IsNull(this.tablemycotoxinDT.AG1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAG1Null() {
                this[this.tablemycotoxinDT.AG1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAG2Null() {
                return this.IsNull(this.tablemycotoxinDT.AG2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAG2Null() {
                this[this.tablemycotoxinDT.AG2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOTANull() {
                return this.IsNull(this.tablemycotoxinDT.OTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOTANull() {
                this[this.tablemycotoxinDT.OTAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class wADTRow : global::System.Data.DataRow {
            
            private wADTDataTable tablewADT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal wADTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablewADT = ((wADTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablewADT.IDColumn]));
                }
                set {
                    this[this.tablewADT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablewADT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablewADT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablewADT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablewADT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablewADT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablewADT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablewADT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablewADT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablewADT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablewADT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablewADT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablewADT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablewADT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablewADT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablewADT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tablewADT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tablewADT.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tablewADT.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aw {
                get {
                    try {
                        return ((string)(this[this.tablewADT.AwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aw\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.AwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablewADT.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'wADT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablewADT.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablewADT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablewADT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablewADT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablewADT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablewADT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablewADT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablewADT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablewADT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablewADT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablewADT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablewADT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablewADT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablewADT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablewADT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablewADT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablewADT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablewADT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablewADT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablewADT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablewADT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablewADT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablewADT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablewADT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablewADT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablewADT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablewADT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablewADT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablewADT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablewADT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablewADT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tablewADT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tablewADT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tablewADT.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tablewADT.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tablewADT.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tablewADT.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAwNull() {
                return this.IsNull(this.tablewADT.AwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAwNull() {
                this[this.tablewADT.AwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tablewADT.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaddressNull() {
                this[this.tablewADT.addressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TerpeneDTRow : global::System.Data.DataRow {
            
            private TerpeneDTDataTable tableTerpeneDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TerpeneDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTerpeneDT = ((TerpeneDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTerpeneDT.IDColumn]));
                }
                set {
                    this[this.tableTerpeneDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTerpeneDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTerpeneDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tableTerpeneDT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.TechniqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Technique\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TerpWT {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.TerpWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerpWT\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.TerpWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aPinene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.aPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aPinene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.aPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Camphene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.CampheneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Camphene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.CampheneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bMyrcene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.bMyrceneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bMyrcene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.bMyrceneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bPinene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.bPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bPinene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.bPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string d3Carene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.d3CareneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'d3Carene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.d3CareneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aTerpinene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.aTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aTerpinene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.aTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ocimene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.OcimeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ocimene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.OcimeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Limonene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.LimoneneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Limonene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.LimoneneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string pCymene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.pCymeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pCymene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.pCymeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string yTerpinene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.yTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yTerpinene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.yTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Terpinolene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.TerpinoleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terpinolene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.TerpinoleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Linalool {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.LinaloolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linalool\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.LinaloolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Isopulegol {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.IsopulegolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isopulegol\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.IsopulegolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Geraniol {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.GeraniolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Geraniol\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.GeraniolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bCaryophyllene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.bCaryophylleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bCaryophyllene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.bCaryophylleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aHumulene {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.aHumuleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aHumulene\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.aHumuleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Nerolidol {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.NerolidolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nerolidol\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.NerolidolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guaiol {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.GuaiolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Guaiol\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.GuaiolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aBisabolol {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.aBisabololColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aBisabolol\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.aBisabololColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string license {
                get {
                    try {
                        return ((string)(this[this.tableTerpeneDT.licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'license\' in table \'TerpeneDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTerpeneDT.licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tableTerpeneDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tableTerpeneDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tableTerpeneDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tableTerpeneDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tableTerpeneDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tableTerpeneDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableTerpeneDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tableTerpeneDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableTerpeneDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableTerpeneDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tableTerpeneDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tableTerpeneDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tableTerpeneDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tableTerpeneDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tableTerpeneDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tableTerpeneDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tableTerpeneDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tableTerpeneDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tableTerpeneDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tableTerpeneDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableTerpeneDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableTerpeneDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tableTerpeneDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tableTerpeneDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tableTerpeneDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tableTerpeneDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tableTerpeneDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tableTerpeneDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableTerpeneDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableTerpeneDT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tableTerpeneDT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tableTerpeneDT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodNull() {
                return this.IsNull(this.tableTerpeneDT.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodNull() {
                this[this.tableTerpeneDT.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueNull() {
                return this.IsNull(this.tableTerpeneDT.TechniqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueNull() {
                this[this.tableTerpeneDT.TechniqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tableTerpeneDT.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tableTerpeneDT.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpWTNull() {
                return this.IsNull(this.tableTerpeneDT.TerpWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpWTNull() {
                this[this.tableTerpeneDT.TerpWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaPineneNull() {
                return this.IsNull(this.tableTerpeneDT.aPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaPineneNull() {
                this[this.tableTerpeneDT.aPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCampheneNull() {
                return this.IsNull(this.tableTerpeneDT.CampheneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCampheneNull() {
                this[this.tableTerpeneDT.CampheneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbMyrceneNull() {
                return this.IsNull(this.tableTerpeneDT.bMyrceneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbMyrceneNull() {
                this[this.tableTerpeneDT.bMyrceneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbPineneNull() {
                return this.IsNull(this.tableTerpeneDT.bPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbPineneNull() {
                this[this.tableTerpeneDT.bPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isd3CareneNull() {
                return this.IsNull(this.tableTerpeneDT.d3CareneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setd3CareneNull() {
                this[this.tableTerpeneDT.d3CareneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaTerpineneNull() {
                return this.IsNull(this.tableTerpeneDT.aTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaTerpineneNull() {
                this[this.tableTerpeneDT.aTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOcimeneNull() {
                return this.IsNull(this.tableTerpeneDT.OcimeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOcimeneNull() {
                this[this.tableTerpeneDT.OcimeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLimoneneNull() {
                return this.IsNull(this.tableTerpeneDT.LimoneneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLimoneneNull() {
                this[this.tableTerpeneDT.LimoneneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspCymeneNull() {
                return this.IsNull(this.tableTerpeneDT.pCymeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpCymeneNull() {
                this[this.tableTerpeneDT.pCymeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsyTerpineneNull() {
                return this.IsNull(this.tableTerpeneDT.yTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetyTerpineneNull() {
                this[this.tableTerpeneDT.yTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpinoleneNull() {
                return this.IsNull(this.tableTerpeneDT.TerpinoleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpinoleneNull() {
                this[this.tableTerpeneDT.TerpinoleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLinaloolNull() {
                return this.IsNull(this.tableTerpeneDT.LinaloolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLinaloolNull() {
                this[this.tableTerpeneDT.LinaloolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsopulegolNull() {
                return this.IsNull(this.tableTerpeneDT.IsopulegolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsopulegolNull() {
                this[this.tableTerpeneDT.IsopulegolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGeraniolNull() {
                return this.IsNull(this.tableTerpeneDT.GeraniolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGeraniolNull() {
                this[this.tableTerpeneDT.GeraniolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbCaryophylleneNull() {
                return this.IsNull(this.tableTerpeneDT.bCaryophylleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbCaryophylleneNull() {
                this[this.tableTerpeneDT.bCaryophylleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaHumuleneNull() {
                return this.IsNull(this.tableTerpeneDT.aHumuleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaHumuleneNull() {
                this[this.tableTerpeneDT.aHumuleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNerolidolNull() {
                return this.IsNull(this.tableTerpeneDT.NerolidolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNerolidolNull() {
                this[this.tableTerpeneDT.NerolidolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGuaiolNull() {
                return this.IsNull(this.tableTerpeneDT.GuaiolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGuaiolNull() {
                this[this.tableTerpeneDT.GuaiolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaBisabololNull() {
                return this.IsNull(this.tableTerpeneDT.aBisabololColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaBisabololNull() {
                this[this.tableTerpeneDT.aBisabololColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tableTerpeneDT.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaddressNull() {
                this[this.tableTerpeneDT.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IslicenseNull() {
                return this.IsNull(this.tableTerpeneDT.licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetlicenseNull() {
                this[this.tableTerpeneDT.licenseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class complianceDTRow : global::System.Data.DataRow {
            
            private complianceDTDataTable tablecomplianceDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal complianceDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecomplianceDT = ((complianceDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablecomplianceDT.IDColumn]));
                }
                set {
                    this[this.tablecomplianceDT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecomplianceDT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLEID {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SAMPLEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEID\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SAMPLEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CHEMIST {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CHEMISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEMIST\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CHEMISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLENAME {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SAMPLENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLENAME\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SAMPLENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLETYPE {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SAMPLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLETYPE\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SAMPLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISTRIBUTOR {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DISTRIBUTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISTRIBUTOR\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DISTRIBUTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCER {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PRODUCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCER\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PRODUCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SAMPLEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecomplianceDT.SAMPLEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLEDATE\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SAMPLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHID {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.BATCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHID\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.BATCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BATCHSIZE {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.BATCHSIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCHSIZE\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.BATCHSIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAMPLESIZE {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SAMPLESIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLESIZE\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SAMPLESIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SampleImage {
                get {
                    try {
                        return ((byte[])(this[this.tablecomplianceDT.SampleImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleImage\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SampleImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalCBD {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TotalCBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCBD\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TotalCBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalTHC {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TotalTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTHC\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TotalTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEST {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEST\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBCP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBCP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCAP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.THCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCAP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.THCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D8THCP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.D8THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THCP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.D8THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D9THCP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.D9THCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THCP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.D9THCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGAP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBGAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGAP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBGAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBNP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBNP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDAP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBDAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDAP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string THCVP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.THCVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCVP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.THCVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBGP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBGPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBGPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CBDVP {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CBDVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDVP\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double TargetCBD {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.TargetCBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCBD\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TargetCBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double TargetTHC {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.TargetTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetTHC\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TargetTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double WETWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.WETWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WETWEIGHT\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.WETWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double HPLCWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.HPLCWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HPLCWEIGHT\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.HPLCWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double DRYWEIGHT {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.DRYWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRYWEIGHT\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DRYWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBC {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBC\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCA {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.THCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCA\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.THCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D8THC {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.D8THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D8THC\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.D8THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double D9THC {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.D9THCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D9THC\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.D9THCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBGA {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBGA\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBN {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBN\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDA {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDA\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double THCV {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.THCVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THCV\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.THCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBD {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBD\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBG {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBG\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double CBDV {
                get {
                    try {
                        return ((double)(this[this.tablecomplianceDT.CBDVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBDV\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CBDVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PotencyID {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PotencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotencyID\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PotencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string license {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'license\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LCMSID {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.LCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMSID\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.LCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSID {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.GCMSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSID\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.GCMSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PestInputWt {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PestInputWtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PestInputWt\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PestInputWtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Abamectin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AbamectinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abamectin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AbamectinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acephate {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AcephateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acephate\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AcephateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acequinocyl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AcequinocylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acequinocyl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AcequinocylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Acetamiprid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AcetamipridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acetamiprid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AcetamipridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aldicarb {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AldicarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aldicarb\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AldicarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Azoxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AzoxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Azoxystrobin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AzoxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenazate {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.BifenazateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenazate\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.BifenazateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bifenthrin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.BifenthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bifenthrin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.BifenthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Boscalid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.BoscalidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Boscalid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.BoscalidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Captan {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CaptanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Captan\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CaptanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbaryl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CarbarylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbaryl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CarbarylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carbofuran {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CarbofuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carbofuran\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CarbofuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorantranilprole {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ChlorantranilproleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorantranilprole\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ChlorantranilproleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlordane {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ChlordaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlordane\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ChlordaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorfenapyr {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ChlorfenapyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorfenapyr\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ChlorfenapyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Chlorpyrifos {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ChlorpyrifosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chlorpyrifos\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ChlorpyrifosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Clofentezine {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ClofentezineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clofentezine\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ClofentezineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Coumaphos {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CoumaphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coumaphos\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CoumaphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cyfluthrin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CyfluthrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cyfluthrin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CyfluthrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cypermethrin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CypermethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cypermethrin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CypermethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Daminozide {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DaminozideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Daminozide\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DaminozideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dichlorvos {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DichlorvosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dichlorvos\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DichlorvosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Diazinon {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DiazinonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diazinon\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DiazinonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethoate {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DimethoateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethoate\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DimethoateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Dimethomorph {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.DimethomorphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dimethomorph\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.DimethomorphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ethoprophos {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.EthoprophosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethoprophos\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.EthoprophosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etofenprox {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.EtofenproxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etofenprox\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.EtofenproxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Etoxazole {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.EtoxazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etoxazole\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.EtoxazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenhexamid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FenhexamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenhexamid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FenhexamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenoxycarb {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FenoxycarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenoxycarb\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FenoxycarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fenpyroximate {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FenpyroximateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fenpyroximate\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FenpyroximateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fipronil {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FipronilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fipronil\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FipronilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Flonicamid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FlonicamidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flonicamid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FlonicamidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fludioxonil {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.FludioxonilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fludioxonil\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.FludioxonilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Hexythiazox {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.HexythiazoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hexythiazox\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.HexythiazoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imazalil {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ImazalilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imazalil\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ImazalilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Imidacloprid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ImidaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Imidacloprid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ImidaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KresoximMethyl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.KresoximMethylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KresoximMethyl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.KresoximMethylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Malathion {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MalathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Malathion\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MalathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Metalaxyl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MetalaxylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Metalaxyl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MetalaxylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methiocarb {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethiocarbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methiocarb\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethiocarbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Methomyl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethomylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Methomyl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethomylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethylParathion {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethylParathionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethylParathion\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethylParathionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mevinphos {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MevinphosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mevinphos\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MevinphosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Myclobutanil {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MyclobutanilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myclobutanil\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MyclobutanilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Naled {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.NaledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Naled\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.NaledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Oxamyl {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.OxamylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oxamyl\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.OxamylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pentachloronitrobenzene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PentachloronitrobenzeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pentachloronitrobenzene\' in table \'complianceDT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PentachloronitrobenzeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Permethrins {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PermethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Permethrins\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PermethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Phosmet {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PhosmetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phosmet\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PhosmetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PiperonylButoxide {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PiperonylButoxideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiperonylButoxide\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PiperonylButoxideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Prallethrin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PrallethrinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prallethrin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PrallethrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propiconazole {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PropiconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propiconazole\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PropiconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Propoxur {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PropoxurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propoxur\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PropoxurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyrethrins {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PyrethrinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyrethrins\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PyrethrinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pyridaben {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PyridabenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pyridaben\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PyridabenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramJ {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpinetoramJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramJ\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpinetoramJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinetoramL {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpinetoramLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinetoramL\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpinetoramLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadA {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpinosadAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadA\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpinosadAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SpinosadD {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpinosadDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinosadD\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpinosadDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiromesifen {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpiromesifenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiromesifen\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpiromesifenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spirotetramat {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpirotetramatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spirotetramat\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpirotetramatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Spiroxamine {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SpiroxamineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spiroxamine\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SpiroxamineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Tebuconazole {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TebuconazoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tebuconazole\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TebuconazoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiacloprid {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ThiaclopridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiacloprid\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ThiaclopridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thiamethoxam {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ThiamethoxamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thiamethoxam\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ThiamethoxamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trifloxystrobin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TrifloxystrobinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trifloxystrobin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TrifloxystrobinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Paclobutrazol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.PaclobutrazolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paclobutrazol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.PaclobutrazolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AASID {
                get {
                    return ((string)(this[this.tablecomplianceDT.AASIDColumn]));
                }
                set {
                    this[this.tablecomplianceDT.AASIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Technique {
                get {
                    return ((string)(this[this.tablecomplianceDT.TechniqueColumn]));
                }
                set {
                    this[this.tablecomplianceDT.TechniqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MetalsWeight {
                get {
                    return ((string)(this[this.tablecomplianceDT.MetalsWeightColumn]));
                }
                set {
                    this[this.tablecomplianceDT.MetalsWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Arsenic {
                get {
                    return ((string)(this[this.tablecomplianceDT.ArsenicColumn]));
                }
                set {
                    this[this.tablecomplianceDT.ArsenicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cadmium {
                get {
                    return ((string)(this[this.tablecomplianceDT.CadmiumColumn]));
                }
                set {
                    this[this.tablecomplianceDT.CadmiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Lead {
                get {
                    return ((string)(this[this.tablecomplianceDT.LeadColumn]));
                }
                set {
                    this[this.tablecomplianceDT.LeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mercury {
                get {
                    return ((string)(this[this.tablecomplianceDT.MercuryColumn]));
                }
                set {
                    this[this.tablecomplianceDT.MercuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MicrobialWeight {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MicrobialWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MicrobialWeight\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MicrobialWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aspergillus {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AspergillusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aspergillus\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AspergillusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShigaToxin {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.ShigaToxinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShigaToxin\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.ShigaToxinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Salmonella {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SalmonellaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salmonella\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SalmonellaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TerpWT {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TerpWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerpWT\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TerpWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aPinene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.aPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aPinene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.aPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Camphene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.CampheneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Camphene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.CampheneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bMyrcene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.bMyrceneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bMyrcene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.bMyrceneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bPinene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.bPineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bPinene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.bPineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string d3Carene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.d3CareneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'d3Carene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.d3CareneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aTerpinene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.aTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aTerpinene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.aTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ocimene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.OcimeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ocimene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.OcimeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Limonene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.LimoneneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Limonene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.LimoneneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string pCymene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.pCymeneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pCymene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.pCymeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string yTerpinene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.yTerpineneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yTerpinene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.yTerpineneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Terpinolene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TerpinoleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terpinolene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TerpinoleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Linalool {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.LinaloolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linalool\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.LinaloolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Isopulegol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.IsopulegolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isopulegol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.IsopulegolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Geraniol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.GeraniolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Geraniol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.GeraniolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bCaryophyllene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.bCaryophylleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bCaryophyllene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.bCaryophylleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aHumulene {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.aHumuleneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aHumulene\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.aHumuleneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Nerolidol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.NerolidolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nerolidol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.NerolidolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guaiol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.GuaiolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Guaiol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.GuaiolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string aBisabolol {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.aBisabololColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aBisabolol\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.aBisabololColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Aw {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.AwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aw\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.AwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SampleIdPesticides {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.SampleIdPesticidesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleIdPesticides\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.SampleIdPesticidesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethodMetals {
                get {
                    return ((string)(this[this.tablecomplianceDT.MethodMetalsColumn]));
                }
                set {
                    this[this.tablecomplianceDT.MethodMetalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TechniqueMicrobial {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TechniqueMicrobialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechniqueMicrobial\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TechniqueMicrobialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethodMicrobial {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethodMicrobialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodMicrobial\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethodMicrobialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethodTerpenes {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethodTerpenesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodTerpenes\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethodTerpenesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TechniqueTerpenes {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TechniqueTerpenesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechniqueTerpenes\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TechniqueTerpenesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GCMSIdTerpenes {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.GCMSIdTerpenesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCMSIdTerpenes\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.GCMSIdTerpenesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethodAw {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.MethodAwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodAw\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.MethodAwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TechniqueAw {
                get {
                    try {
                        return ((string)(this[this.tablecomplianceDT.TechniqueAwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechniqueAw\' in table \'complianceDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecomplianceDT.TechniqueAwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tablecomplianceDT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATENull() {
                this[this.tablecomplianceDT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEIDNull() {
                return this.IsNull(this.tablecomplianceDT.SAMPLEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEIDNull() {
                this[this.tablecomplianceDT.SAMPLEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCHEMISTNull() {
                return this.IsNull(this.tablecomplianceDT.CHEMISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCHEMISTNull() {
                this[this.tablecomplianceDT.CHEMISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablecomplianceDT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tablecomplianceDT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablecomplianceDT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tablecomplianceDT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLENAMENull() {
                return this.IsNull(this.tablecomplianceDT.SAMPLENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLENAMENull() {
                this[this.tablecomplianceDT.SAMPLENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLETYPENull() {
                return this.IsNull(this.tablecomplianceDT.SAMPLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLETYPENull() {
                this[this.tablecomplianceDT.SAMPLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDISTRIBUTORNull() {
                return this.IsNull(this.tablecomplianceDT.DISTRIBUTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDISTRIBUTORNull() {
                this[this.tablecomplianceDT.DISTRIBUTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCERNull() {
                return this.IsNull(this.tablecomplianceDT.PRODUCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCERNull() {
                this[this.tablecomplianceDT.PRODUCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLEDATENull() {
                return this.IsNull(this.tablecomplianceDT.SAMPLEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLEDATENull() {
                this[this.tablecomplianceDT.SAMPLEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablecomplianceDT.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tablecomplianceDT.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHIDNull() {
                return this.IsNull(this.tablecomplianceDT.BATCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHIDNull() {
                this[this.tablecomplianceDT.BATCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBATCHSIZENull() {
                return this.IsNull(this.tablecomplianceDT.BATCHSIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBATCHSIZENull() {
                this[this.tablecomplianceDT.BATCHSIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAMPLESIZENull() {
                return this.IsNull(this.tablecomplianceDT.SAMPLESIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAMPLESIZENull() {
                this[this.tablecomplianceDT.SAMPLESIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablecomplianceDT.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablecomplianceDT.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleImageNull() {
                return this.IsNull(this.tablecomplianceDT.SampleImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleImageNull() {
                this[this.tablecomplianceDT.SampleImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalCBDNull() {
                return this.IsNull(this.tablecomplianceDT.TotalCBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalCBDNull() {
                this[this.tablecomplianceDT.TotalCBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalTHCNull() {
                return this.IsNull(this.tablecomplianceDT.TotalTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalTHCNull() {
                this[this.tablecomplianceDT.TotalTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTESTNull() {
                return this.IsNull(this.tablecomplianceDT.TESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTESTNull() {
                this[this.tablecomplianceDT.TESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMETHODNull() {
                return this.IsNull(this.tablecomplianceDT.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMETHODNull() {
                this[this.tablecomplianceDT.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCPNull() {
                return this.IsNull(this.tablecomplianceDT.CBCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCPNull() {
                this[this.tablecomplianceDT.CBCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCAPNull() {
                return this.IsNull(this.tablecomplianceDT.THCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCAPNull() {
                this[this.tablecomplianceDT.THCAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCPNull() {
                return this.IsNull(this.tablecomplianceDT.D8THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCPNull() {
                this[this.tablecomplianceDT.D8THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCPNull() {
                return this.IsNull(this.tablecomplianceDT.D9THCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCPNull() {
                this[this.tablecomplianceDT.D9THCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGAPNull() {
                return this.IsNull(this.tablecomplianceDT.CBGAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGAPNull() {
                this[this.tablecomplianceDT.CBGAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNPNull() {
                return this.IsNull(this.tablecomplianceDT.CBNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNPNull() {
                this[this.tablecomplianceDT.CBNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDAPNull() {
                return this.IsNull(this.tablecomplianceDT.CBDAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDAPNull() {
                this[this.tablecomplianceDT.CBDAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVPNull() {
                return this.IsNull(this.tablecomplianceDT.THCVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVPNull() {
                this[this.tablecomplianceDT.THCVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGPNull() {
                return this.IsNull(this.tablecomplianceDT.CBGPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGPNull() {
                this[this.tablecomplianceDT.CBGPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDPNull() {
                return this.IsNull(this.tablecomplianceDT.CBDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDPNull() {
                this[this.tablecomplianceDT.CBDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVPNull() {
                return this.IsNull(this.tablecomplianceDT.CBDVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVPNull() {
                this[this.tablecomplianceDT.CBDVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTargetCBDNull() {
                return this.IsNull(this.tablecomplianceDT.TargetCBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTargetCBDNull() {
                this[this.tablecomplianceDT.TargetCBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTargetTHCNull() {
                return this.IsNull(this.tablecomplianceDT.TargetTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTargetTHCNull() {
                this[this.tablecomplianceDT.TargetTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWETWEIGHTNull() {
                return this.IsNull(this.tablecomplianceDT.WETWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWETWEIGHTNull() {
                this[this.tablecomplianceDT.WETWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHPLCWEIGHTNull() {
                return this.IsNull(this.tablecomplianceDT.HPLCWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHPLCWEIGHTNull() {
                this[this.tablecomplianceDT.HPLCWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDRYWEIGHTNull() {
                return this.IsNull(this.tablecomplianceDT.DRYWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDRYWEIGHTNull() {
                this[this.tablecomplianceDT.DRYWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBCNull() {
                return this.IsNull(this.tablecomplianceDT.CBCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBCNull() {
                this[this.tablecomplianceDT.CBCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCANull() {
                return this.IsNull(this.tablecomplianceDT.THCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCANull() {
                this[this.tablecomplianceDT.THCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD8THCNull() {
                return this.IsNull(this.tablecomplianceDT.D8THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD8THCNull() {
                this[this.tablecomplianceDT.D8THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD9THCNull() {
                return this.IsNull(this.tablecomplianceDT.D9THCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD9THCNull() {
                this[this.tablecomplianceDT.D9THCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGANull() {
                return this.IsNull(this.tablecomplianceDT.CBGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGANull() {
                this[this.tablecomplianceDT.CBGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBNNull() {
                return this.IsNull(this.tablecomplianceDT.CBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBNNull() {
                this[this.tablecomplianceDT.CBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDANull() {
                return this.IsNull(this.tablecomplianceDT.CBDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDANull() {
                this[this.tablecomplianceDT.CBDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTHCVNull() {
                return this.IsNull(this.tablecomplianceDT.THCVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTHCVNull() {
                this[this.tablecomplianceDT.THCVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDNull() {
                return this.IsNull(this.tablecomplianceDT.CBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDNull() {
                this[this.tablecomplianceDT.CBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBGNull() {
                return this.IsNull(this.tablecomplianceDT.CBGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBGNull() {
                this[this.tablecomplianceDT.CBGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCBDVNull() {
                return this.IsNull(this.tablecomplianceDT.CBDVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCBDVNull() {
                this[this.tablecomplianceDT.CBDVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPotencyIDNull() {
                return this.IsNull(this.tablecomplianceDT.PotencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPotencyIDNull() {
                this[this.tablecomplianceDT.PotencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IslicenseNull() {
                return this.IsNull(this.tablecomplianceDT.licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetlicenseNull() {
                this[this.tablecomplianceDT.licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tablecomplianceDT.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaddressNull() {
                this[this.tablecomplianceDT.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLCMSIDNull() {
                return this.IsNull(this.tablecomplianceDT.LCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLCMSIDNull() {
                this[this.tablecomplianceDT.LCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIDNull() {
                return this.IsNull(this.tablecomplianceDT.GCMSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIDNull() {
                this[this.tablecomplianceDT.GCMSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPestInputWtNull() {
                return this.IsNull(this.tablecomplianceDT.PestInputWtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPestInputWtNull() {
                this[this.tablecomplianceDT.PestInputWtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAbamectinNull() {
                return this.IsNull(this.tablecomplianceDT.AbamectinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAbamectinNull() {
                this[this.tablecomplianceDT.AbamectinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcephateNull() {
                return this.IsNull(this.tablecomplianceDT.AcephateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcephateNull() {
                this[this.tablecomplianceDT.AcephateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcequinocylNull() {
                return this.IsNull(this.tablecomplianceDT.AcequinocylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcequinocylNull() {
                this[this.tablecomplianceDT.AcequinocylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAcetamipridNull() {
                return this.IsNull(this.tablecomplianceDT.AcetamipridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAcetamipridNull() {
                this[this.tablecomplianceDT.AcetamipridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAldicarbNull() {
                return this.IsNull(this.tablecomplianceDT.AldicarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAldicarbNull() {
                this[this.tablecomplianceDT.AldicarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAzoxystrobinNull() {
                return this.IsNull(this.tablecomplianceDT.AzoxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAzoxystrobinNull() {
                this[this.tablecomplianceDT.AzoxystrobinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenazateNull() {
                return this.IsNull(this.tablecomplianceDT.BifenazateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenazateNull() {
                this[this.tablecomplianceDT.BifenazateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBifenthrinNull() {
                return this.IsNull(this.tablecomplianceDT.BifenthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBifenthrinNull() {
                this[this.tablecomplianceDT.BifenthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBoscalidNull() {
                return this.IsNull(this.tablecomplianceDT.BoscalidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBoscalidNull() {
                this[this.tablecomplianceDT.BoscalidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCaptanNull() {
                return this.IsNull(this.tablecomplianceDT.CaptanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCaptanNull() {
                this[this.tablecomplianceDT.CaptanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbarylNull() {
                return this.IsNull(this.tablecomplianceDT.CarbarylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbarylNull() {
                this[this.tablecomplianceDT.CarbarylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCarbofuranNull() {
                return this.IsNull(this.tablecomplianceDT.CarbofuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCarbofuranNull() {
                this[this.tablecomplianceDT.CarbofuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorantranilproleNull() {
                return this.IsNull(this.tablecomplianceDT.ChlorantranilproleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorantranilproleNull() {
                this[this.tablecomplianceDT.ChlorantranilproleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlordaneNull() {
                return this.IsNull(this.tablecomplianceDT.ChlordaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlordaneNull() {
                this[this.tablecomplianceDT.ChlordaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorfenapyrNull() {
                return this.IsNull(this.tablecomplianceDT.ChlorfenapyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorfenapyrNull() {
                this[this.tablecomplianceDT.ChlorfenapyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChlorpyrifosNull() {
                return this.IsNull(this.tablecomplianceDT.ChlorpyrifosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChlorpyrifosNull() {
                this[this.tablecomplianceDT.ChlorpyrifosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClofentezineNull() {
                return this.IsNull(this.tablecomplianceDT.ClofentezineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClofentezineNull() {
                this[this.tablecomplianceDT.ClofentezineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCoumaphosNull() {
                return this.IsNull(this.tablecomplianceDT.CoumaphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCoumaphosNull() {
                this[this.tablecomplianceDT.CoumaphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCyfluthrinNull() {
                return this.IsNull(this.tablecomplianceDT.CyfluthrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCyfluthrinNull() {
                this[this.tablecomplianceDT.CyfluthrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCypermethrinNull() {
                return this.IsNull(this.tablecomplianceDT.CypermethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCypermethrinNull() {
                this[this.tablecomplianceDT.CypermethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDaminozideNull() {
                return this.IsNull(this.tablecomplianceDT.DaminozideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDaminozideNull() {
                this[this.tablecomplianceDT.DaminozideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDichlorvosNull() {
                return this.IsNull(this.tablecomplianceDT.DichlorvosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDichlorvosNull() {
                this[this.tablecomplianceDT.DichlorvosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDiazinonNull() {
                return this.IsNull(this.tablecomplianceDT.DiazinonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDiazinonNull() {
                this[this.tablecomplianceDT.DiazinonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethoateNull() {
                return this.IsNull(this.tablecomplianceDT.DimethoateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethoateNull() {
                this[this.tablecomplianceDT.DimethoateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDimethomorphNull() {
                return this.IsNull(this.tablecomplianceDT.DimethomorphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDimethomorphNull() {
                this[this.tablecomplianceDT.DimethomorphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEthoprophosNull() {
                return this.IsNull(this.tablecomplianceDT.EthoprophosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEthoprophosNull() {
                this[this.tablecomplianceDT.EthoprophosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtofenproxNull() {
                return this.IsNull(this.tablecomplianceDT.EtofenproxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtofenproxNull() {
                this[this.tablecomplianceDT.EtofenproxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEtoxazoleNull() {
                return this.IsNull(this.tablecomplianceDT.EtoxazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEtoxazoleNull() {
                this[this.tablecomplianceDT.EtoxazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenhexamidNull() {
                return this.IsNull(this.tablecomplianceDT.FenhexamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenhexamidNull() {
                this[this.tablecomplianceDT.FenhexamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenoxycarbNull() {
                return this.IsNull(this.tablecomplianceDT.FenoxycarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenoxycarbNull() {
                this[this.tablecomplianceDT.FenoxycarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFenpyroximateNull() {
                return this.IsNull(this.tablecomplianceDT.FenpyroximateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFenpyroximateNull() {
                this[this.tablecomplianceDT.FenpyroximateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFipronilNull() {
                return this.IsNull(this.tablecomplianceDT.FipronilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFipronilNull() {
                this[this.tablecomplianceDT.FipronilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFlonicamidNull() {
                return this.IsNull(this.tablecomplianceDT.FlonicamidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFlonicamidNull() {
                this[this.tablecomplianceDT.FlonicamidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFludioxonilNull() {
                return this.IsNull(this.tablecomplianceDT.FludioxonilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFludioxonilNull() {
                this[this.tablecomplianceDT.FludioxonilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHexythiazoxNull() {
                return this.IsNull(this.tablecomplianceDT.HexythiazoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHexythiazoxNull() {
                this[this.tablecomplianceDT.HexythiazoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImazalilNull() {
                return this.IsNull(this.tablecomplianceDT.ImazalilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImazalilNull() {
                this[this.tablecomplianceDT.ImazalilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImidaclopridNull() {
                return this.IsNull(this.tablecomplianceDT.ImidaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImidaclopridNull() {
                this[this.tablecomplianceDT.ImidaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKresoximMethylNull() {
                return this.IsNull(this.tablecomplianceDT.KresoximMethylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKresoximMethylNull() {
                this[this.tablecomplianceDT.KresoximMethylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMalathionNull() {
                return this.IsNull(this.tablecomplianceDT.MalathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMalathionNull() {
                this[this.tablecomplianceDT.MalathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMetalaxylNull() {
                return this.IsNull(this.tablecomplianceDT.MetalaxylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMetalaxylNull() {
                this[this.tablecomplianceDT.MetalaxylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethiocarbNull() {
                return this.IsNull(this.tablecomplianceDT.MethiocarbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethiocarbNull() {
                this[this.tablecomplianceDT.MethiocarbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethomylNull() {
                return this.IsNull(this.tablecomplianceDT.MethomylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethomylNull() {
                this[this.tablecomplianceDT.MethomylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethylParathionNull() {
                return this.IsNull(this.tablecomplianceDT.MethylParathionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethylParathionNull() {
                this[this.tablecomplianceDT.MethylParathionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMevinphosNull() {
                return this.IsNull(this.tablecomplianceDT.MevinphosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMevinphosNull() {
                this[this.tablecomplianceDT.MevinphosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMyclobutanilNull() {
                return this.IsNull(this.tablecomplianceDT.MyclobutanilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMyclobutanilNull() {
                this[this.tablecomplianceDT.MyclobutanilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNaledNull() {
                return this.IsNull(this.tablecomplianceDT.NaledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNaledNull() {
                this[this.tablecomplianceDT.NaledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOxamylNull() {
                return this.IsNull(this.tablecomplianceDT.OxamylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOxamylNull() {
                this[this.tablecomplianceDT.OxamylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPentachloronitrobenzeneNull() {
                return this.IsNull(this.tablecomplianceDT.PentachloronitrobenzeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPentachloronitrobenzeneNull() {
                this[this.tablecomplianceDT.PentachloronitrobenzeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPermethrinsNull() {
                return this.IsNull(this.tablecomplianceDT.PermethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPermethrinsNull() {
                this[this.tablecomplianceDT.PermethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhosmetNull() {
                return this.IsNull(this.tablecomplianceDT.PhosmetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhosmetNull() {
                this[this.tablecomplianceDT.PhosmetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPiperonylButoxideNull() {
                return this.IsNull(this.tablecomplianceDT.PiperonylButoxideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPiperonylButoxideNull() {
                this[this.tablecomplianceDT.PiperonylButoxideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrallethrinNull() {
                return this.IsNull(this.tablecomplianceDT.PrallethrinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrallethrinNull() {
                this[this.tablecomplianceDT.PrallethrinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropiconazoleNull() {
                return this.IsNull(this.tablecomplianceDT.PropiconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropiconazoleNull() {
                this[this.tablecomplianceDT.PropiconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPropoxurNull() {
                return this.IsNull(this.tablecomplianceDT.PropoxurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPropoxurNull() {
                this[this.tablecomplianceDT.PropoxurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyrethrinsNull() {
                return this.IsNull(this.tablecomplianceDT.PyrethrinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyrethrinsNull() {
                this[this.tablecomplianceDT.PyrethrinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPyridabenNull() {
                return this.IsNull(this.tablecomplianceDT.PyridabenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPyridabenNull() {
                this[this.tablecomplianceDT.PyridabenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramJNull() {
                return this.IsNull(this.tablecomplianceDT.SpinetoramJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramJNull() {
                this[this.tablecomplianceDT.SpinetoramJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinetoramLNull() {
                return this.IsNull(this.tablecomplianceDT.SpinetoramLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinetoramLNull() {
                this[this.tablecomplianceDT.SpinetoramLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadANull() {
                return this.IsNull(this.tablecomplianceDT.SpinosadAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadANull() {
                this[this.tablecomplianceDT.SpinosadAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpinosadDNull() {
                return this.IsNull(this.tablecomplianceDT.SpinosadDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpinosadDNull() {
                this[this.tablecomplianceDT.SpinosadDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiromesifenNull() {
                return this.IsNull(this.tablecomplianceDT.SpiromesifenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiromesifenNull() {
                this[this.tablecomplianceDT.SpiromesifenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpirotetramatNull() {
                return this.IsNull(this.tablecomplianceDT.SpirotetramatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpirotetramatNull() {
                this[this.tablecomplianceDT.SpirotetramatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpiroxamineNull() {
                return this.IsNull(this.tablecomplianceDT.SpiroxamineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpiroxamineNull() {
                this[this.tablecomplianceDT.SpiroxamineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTebuconazoleNull() {
                return this.IsNull(this.tablecomplianceDT.TebuconazoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTebuconazoleNull() {
                this[this.tablecomplianceDT.TebuconazoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiaclopridNull() {
                return this.IsNull(this.tablecomplianceDT.ThiaclopridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiaclopridNull() {
                this[this.tablecomplianceDT.ThiaclopridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsThiamethoxamNull() {
                return this.IsNull(this.tablecomplianceDT.ThiamethoxamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetThiamethoxamNull() {
                this[this.tablecomplianceDT.ThiamethoxamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrifloxystrobinNull() {
                return this.IsNull(this.tablecomplianceDT.TrifloxystrobinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrifloxystrobinNull() {
                this[this.tablecomplianceDT.TrifloxystrobinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaclobutrazolNull() {
                return this.IsNull(this.tablecomplianceDT.PaclobutrazolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaclobutrazolNull() {
                this[this.tablecomplianceDT.PaclobutrazolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMicrobialWeightNull() {
                return this.IsNull(this.tablecomplianceDT.MicrobialWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMicrobialWeightNull() {
                this[this.tablecomplianceDT.MicrobialWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAspergillusNull() {
                return this.IsNull(this.tablecomplianceDT.AspergillusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAspergillusNull() {
                this[this.tablecomplianceDT.AspergillusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShigaToxinNull() {
                return this.IsNull(this.tablecomplianceDT.ShigaToxinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShigaToxinNull() {
                this[this.tablecomplianceDT.ShigaToxinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalmonellaNull() {
                return this.IsNull(this.tablecomplianceDT.SalmonellaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalmonellaNull() {
                this[this.tablecomplianceDT.SalmonellaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpWTNull() {
                return this.IsNull(this.tablecomplianceDT.TerpWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpWTNull() {
                this[this.tablecomplianceDT.TerpWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaPineneNull() {
                return this.IsNull(this.tablecomplianceDT.aPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaPineneNull() {
                this[this.tablecomplianceDT.aPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCampheneNull() {
                return this.IsNull(this.tablecomplianceDT.CampheneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCampheneNull() {
                this[this.tablecomplianceDT.CampheneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbMyrceneNull() {
                return this.IsNull(this.tablecomplianceDT.bMyrceneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbMyrceneNull() {
                this[this.tablecomplianceDT.bMyrceneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbPineneNull() {
                return this.IsNull(this.tablecomplianceDT.bPineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbPineneNull() {
                this[this.tablecomplianceDT.bPineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isd3CareneNull() {
                return this.IsNull(this.tablecomplianceDT.d3CareneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setd3CareneNull() {
                this[this.tablecomplianceDT.d3CareneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaTerpineneNull() {
                return this.IsNull(this.tablecomplianceDT.aTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaTerpineneNull() {
                this[this.tablecomplianceDT.aTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOcimeneNull() {
                return this.IsNull(this.tablecomplianceDT.OcimeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOcimeneNull() {
                this[this.tablecomplianceDT.OcimeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLimoneneNull() {
                return this.IsNull(this.tablecomplianceDT.LimoneneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLimoneneNull() {
                this[this.tablecomplianceDT.LimoneneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspCymeneNull() {
                return this.IsNull(this.tablecomplianceDT.pCymeneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpCymeneNull() {
                this[this.tablecomplianceDT.pCymeneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsyTerpineneNull() {
                return this.IsNull(this.tablecomplianceDT.yTerpineneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetyTerpineneNull() {
                this[this.tablecomplianceDT.yTerpineneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTerpinoleneNull() {
                return this.IsNull(this.tablecomplianceDT.TerpinoleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTerpinoleneNull() {
                this[this.tablecomplianceDT.TerpinoleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLinaloolNull() {
                return this.IsNull(this.tablecomplianceDT.LinaloolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLinaloolNull() {
                this[this.tablecomplianceDT.LinaloolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsopulegolNull() {
                return this.IsNull(this.tablecomplianceDT.IsopulegolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsopulegolNull() {
                this[this.tablecomplianceDT.IsopulegolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGeraniolNull() {
                return this.IsNull(this.tablecomplianceDT.GeraniolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGeraniolNull() {
                this[this.tablecomplianceDT.GeraniolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbCaryophylleneNull() {
                return this.IsNull(this.tablecomplianceDT.bCaryophylleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbCaryophylleneNull() {
                this[this.tablecomplianceDT.bCaryophylleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaHumuleneNull() {
                return this.IsNull(this.tablecomplianceDT.aHumuleneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaHumuleneNull() {
                this[this.tablecomplianceDT.aHumuleneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNerolidolNull() {
                return this.IsNull(this.tablecomplianceDT.NerolidolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNerolidolNull() {
                this[this.tablecomplianceDT.NerolidolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGuaiolNull() {
                return this.IsNull(this.tablecomplianceDT.GuaiolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGuaiolNull() {
                this[this.tablecomplianceDT.GuaiolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsaBisabololNull() {
                return this.IsNull(this.tablecomplianceDT.aBisabololColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetaBisabololNull() {
                this[this.tablecomplianceDT.aBisabololColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAwNull() {
                return this.IsNull(this.tablecomplianceDT.AwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAwNull() {
                this[this.tablecomplianceDT.AwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSampleIdPesticidesNull() {
                return this.IsNull(this.tablecomplianceDT.SampleIdPesticidesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSampleIdPesticidesNull() {
                this[this.tablecomplianceDT.SampleIdPesticidesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueMicrobialNull() {
                return this.IsNull(this.tablecomplianceDT.TechniqueMicrobialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueMicrobialNull() {
                this[this.tablecomplianceDT.TechniqueMicrobialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodMicrobialNull() {
                return this.IsNull(this.tablecomplianceDT.MethodMicrobialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodMicrobialNull() {
                this[this.tablecomplianceDT.MethodMicrobialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodTerpenesNull() {
                return this.IsNull(this.tablecomplianceDT.MethodTerpenesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodTerpenesNull() {
                this[this.tablecomplianceDT.MethodTerpenesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueTerpenesNull() {
                return this.IsNull(this.tablecomplianceDT.TechniqueTerpenesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueTerpenesNull() {
                this[this.tablecomplianceDT.TechniqueTerpenesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGCMSIdTerpenesNull() {
                return this.IsNull(this.tablecomplianceDT.GCMSIdTerpenesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGCMSIdTerpenesNull() {
                this[this.tablecomplianceDT.GCMSIdTerpenesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodAwNull() {
                return this.IsNull(this.tablecomplianceDT.MethodAwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodAwNull() {
                this[this.tablecomplianceDT.MethodAwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechniqueAwNull() {
                return this.IsNull(this.tablecomplianceDT.TechniqueAwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechniqueAwNull() {
                this[this.tablecomplianceDT.TechniqueAwColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class customerDATARowChangeEvent : global::System.EventArgs {
            
            private customerDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARowChangeEvent(customerDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public customerDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class indexDATARowChangeEvent : global::System.EventArgs {
            
            private indexDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATARowChangeEvent(indexDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public indexDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class metalsDATARowChangeEvent : global::System.EventArgs {
            
            private metalsDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARowChangeEvent(metalsDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class microbialDATARowChangeEvent : global::System.EventArgs {
            
            private microbialDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARowChangeEvent(microbialDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class mycotoxinsDATARowChangeEvent : global::System.EventArgs {
            
            private mycotoxinsDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARowChangeEvent(mycotoxinsDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinsDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PesticidesDATARowChangeEvent : global::System.EventArgs {
            
            private PesticidesDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARowChangeEvent(PesticidesDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PesticidesDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PotencyDATARowChangeEvent : global::System.EventArgs {
            
            private PotencyDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATARowChangeEvent(PotencyDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PotencyDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SolventsDATARowChangeEvent : global::System.EventArgs {
            
            private SolventsDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARowChangeEvent(SolventsDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventsDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class terpenesDATARowChangeEvent : global::System.EventArgs {
            
            private terpenesDATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARowChangeEvent(terpenesDATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public terpenesDATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class wADATARowChangeEvent : global::System.EventArgs {
            
            private wADATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARowChangeEvent(wADATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class dataDTRowChangeEvent : global::System.EventArgs {
            
            private dataDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTRowChangeEvent(dataDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dataDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PestiDTRowChangeEvent : global::System.EventArgs {
            
            private PestiDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTRowChangeEvent(PestiDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PestiDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SolventDTRowChangeEvent : global::System.EventArgs {
            
            private SolventDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTRowChangeEvent(SolventDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SolventDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class metalsDTRowChangeEvent : global::System.EventArgs {
            
            private metalsDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTRowChangeEvent(metalsDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public metalsDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class microbialDTRowChangeEvent : global::System.EventArgs {
            
            private microbialDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTRowChangeEvent(microbialDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public microbialDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class mycotoxinDTRowChangeEvent : global::System.EventArgs {
            
            private mycotoxinDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTRowChangeEvent(mycotoxinDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public mycotoxinDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class wADTRowChangeEvent : global::System.EventArgs {
            
            private wADTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTRowChangeEvent(wADTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public wADTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TerpeneDTRowChangeEvent : global::System.EventArgs {
            
            private TerpeneDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTRowChangeEvent(TerpeneDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TerpeneDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class complianceDTRowChangeEvent : global::System.EventArgs {
            
            private complianceDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTRowChangeEvent(complianceDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public complianceDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LIMS_system_Prototype.fullDATASETTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class customerDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public customerDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "customerDATA";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("customer", "customer");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("license", "license");
            tableMapping.ColumnMappings.Add("address", "address");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[customerDATA] WHERE (([id] = @Original_id) AND ((@IsNull_customer = 1 AND [customer] IS NULL) OR ([customer] = @Original_customer)) AND ((@IsNull_email = 1 AND [email] IS NULL) OR ([email] = @Original_email)) AND ((@IsNull_license = 1 AND [license] IS NULL) OR ([license] = @Original_license)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[customerDATA] ([customer], [email], [license], [address]) VALU" +
                "ES (@customer, @email, @license, @address);\r\nSELECT id, customer, email, license" +
                ", address FROM customerDATA WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[customerDATA] SET [customer] = @customer, [email] = @email, [license] = @license, [address] = @address WHERE (([id] = @Original_id) AND ((@IsNull_customer = 1 AND [customer] IS NULL) OR ([customer] = @Original_customer)) AND ((@IsNull_email = 1 AND [email] IS NULL) OR ([email] = @Original_email)) AND ((@IsNull_license = 1 AND [license] IS NULL) OR ([license] = @Original_license)));
SELECT id, customer, email, license, address FROM customerDATA WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, customer, email, license, address FROM dbo.customerDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.customerDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.customerDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.customerDATADataTable dataTable = new fullDATASET.customerDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.customerDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "customerDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_customer, string Original_email, string Original_license) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_customer == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_customer));
            }
            if ((Original_email == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_email));
            }
            if ((Original_license == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_license));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string customer, string email, string license, string address) {
            if ((customer == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(customer));
            }
            if ((email == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(email));
            }
            if ((license == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(license));
            }
            if ((address == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(address));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string customer, string email, string license, string address, int Original_id, string Original_customer, string Original_email, string Original_license, int id) {
            if ((customer == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(customer));
            }
            if ((email == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(email));
            }
            if ((license == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(license));
            }
            if ((address == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_customer == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_customer));
            }
            if ((Original_email == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_email));
            }
            if ((Original_license == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_license));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string customer, string email, string license, string address, int Original_id, string Original_customer, string Original_email, string Original_license) {
            return this.Update(customer, email, license, address, Original_id, Original_customer, Original_email, Original_license, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class indexDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public indexDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "indexDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[indexDATA] ([DATE], [SAMPLEID], [CHEMIST], [CUSTOMER], [EMAIL], [SAMPLENAME], [SAMPLETYPE], [DISTRIBUTOR], [PRODUCER], [SAMPLEDATE], [LOCATION], [BATCHID], [BATCHSIZE], [SAMPLESIZE], [Remarks], [SampleImage]) VALUES (@DATE, @SAMPLEID, @CHEMIST, @CUSTOMER, @EMAIL, @SAMPLENAME, @SAMPLETYPE, @DISTRIBUTOR, @PRODUCER, @SAMPLEDATE, @LOCATION, @BATCHID, @BATCHSIZE, @SAMPLESIZE, @Remarks, @SampleImage)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHEMIST", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHEMIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLENAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLETYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLETYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISTRIBUTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISTRIBUTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEDATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOCATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOCATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCHID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCHID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCHSIZE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCHSIZE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLESIZE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLESIZE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleImage", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, DATE, SAMPLEID, CHEMIST, CUSTOMER, EMAIL, SAMPLENAME, SAMPLETYPE, DIST" +
                "RIBUTOR, PRODUCER, SAMPLEDATE, LOCATION, BATCHID, BATCHSIZE, SAMPLESIZE, Remarks" +
                ", SampleImage FROM dbo.indexDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.indexDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.indexDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.indexDATADataTable dataTable = new fullDATASET.indexDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.indexDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "indexDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> DATE, 
                    string SAMPLEID, 
                    string CHEMIST, 
                    string CUSTOMER, 
                    string EMAIL, 
                    string SAMPLENAME, 
                    string SAMPLETYPE, 
                    string DISTRIBUTOR, 
                    string PRODUCER, 
                    global::System.Nullable<global::System.DateTime> SAMPLEDATE, 
                    string LOCATION, 
                    string BATCHID, 
                    string BATCHSIZE, 
                    string SAMPLESIZE, 
                    string Remarks, 
                    byte[] SampleImage) {
            if ((DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SAMPLEID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SAMPLEID));
            }
            if ((CHEMIST == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CHEMIST));
            }
            if ((CUSTOMER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CUSTOMER));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMAIL));
            }
            if ((SAMPLENAME == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SAMPLENAME));
            }
            if ((SAMPLETYPE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SAMPLETYPE));
            }
            if ((DISTRIBUTOR == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DISTRIBUTOR));
            }
            if ((PRODUCER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PRODUCER));
            }
            if ((SAMPLEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(SAMPLEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LOCATION));
            }
            if ((BATCHID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(BATCHID));
            }
            if ((BATCHSIZE == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(BATCHSIZE));
            }
            if ((SAMPLESIZE == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(SAMPLESIZE));
            }
            if ((Remarks == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Remarks));
            }
            if ((SampleImage == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((byte[])(SampleImage));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class metalsDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public metalsDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "metalsDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("AASID", "AASID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("MetalsWeight", "MetalsWeight");
            tableMapping.ColumnMappings.Add("Arsenic", "Arsenic");
            tableMapping.ColumnMappings.Add("Cadmium", "Cadmium");
            tableMapping.ColumnMappings.Add("Lead", "Lead");
            tableMapping.ColumnMappings.Add("Mercury", "Mercury");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[metalsDATA] WHERE (([ID] = @Original_ID) AND ([SAMPLEID] = @Original_SAMPLEID) AND ([AASID] = @Original_AASID) AND ([Method] = @Original_Method) AND ([Technique] = @Original_Technique) AND ([MetalsWeight] = @Original_MetalsWeight) AND ([Arsenic] = @Original_Arsenic) AND ([Cadmium] = @Original_Cadmium) AND ([Lead] = @Original_Lead) AND ([Mercury] = @Original_Mercury))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AASID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AASID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MetalsWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MetalsWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arsenic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arsenic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cadmium", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cadmium", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lead", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mercury", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mercury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[metalsDATA] ([SAMPLEID], [AASID], [Method], [Technique], [MetalsWeight], [Arsenic], [Cadmium], [Lead], [Mercury]) VALUES (@SAMPLEID, @AASID, @Method, @Technique, @MetalsWeight, @Arsenic, @Cadmium, @Lead, @Mercury);
SELECT ID, SAMPLEID, AASID, Method, Technique, MetalsWeight, Arsenic, Cadmium, Lead, Mercury FROM metalsDATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AASID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AASID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MetalsWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MetalsWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arsenic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arsenic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cadmium", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cadmium", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lead", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mercury", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mercury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[metalsDATA] SET [SAMPLEID] = @SAMPLEID, [AASID] = @AASID, [Method] = @Method, [Technique] = @Technique, [MetalsWeight] = @MetalsWeight, [Arsenic] = @Arsenic, [Cadmium] = @Cadmium, [Lead] = @Lead, [Mercury] = @Mercury WHERE (([ID] = @Original_ID) AND ([SAMPLEID] = @Original_SAMPLEID) AND ([AASID] = @Original_AASID) AND ([Method] = @Original_Method) AND ([Technique] = @Original_Technique) AND ([MetalsWeight] = @Original_MetalsWeight) AND ([Arsenic] = @Original_Arsenic) AND ([Cadmium] = @Original_Cadmium) AND ([Lead] = @Original_Lead) AND ([Mercury] = @Original_Mercury));
SELECT ID, SAMPLEID, AASID, Method, Technique, MetalsWeight, Arsenic, Cadmium, Lead, Mercury FROM metalsDATA WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AASID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AASID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MetalsWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MetalsWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arsenic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arsenic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cadmium", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cadmium", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lead", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mercury", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mercury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AASID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AASID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MetalsWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MetalsWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arsenic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arsenic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cadmium", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cadmium", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lead", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mercury", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mercury", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SAMPLEID, AASID, Method, Technique, MetalsWeight, Arsenic, Cadmium, Le" +
                "ad, Mercury FROM dbo.metalsDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.metalsDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.metalsDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.metalsDATADataTable dataTable = new fullDATASET.metalsDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.metalsDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "metalsDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_SAMPLEID, string Original_AASID, string Original_Method, string Original_Technique, string Original_MetalsWeight, string Original_Arsenic, string Original_Cadmium, string Original_Lead, string Original_Mercury) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_SAMPLEID == null)) {
                throw new global::System.ArgumentNullException("Original_SAMPLEID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SAMPLEID));
            }
            if ((Original_AASID == null)) {
                throw new global::System.ArgumentNullException("Original_AASID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_AASID));
            }
            if ((Original_Method == null)) {
                throw new global::System.ArgumentNullException("Original_Method");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                throw new global::System.ArgumentNullException("Original_Technique");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Technique));
            }
            if ((Original_MetalsWeight == null)) {
                throw new global::System.ArgumentNullException("Original_MetalsWeight");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_MetalsWeight));
            }
            if ((Original_Arsenic == null)) {
                throw new global::System.ArgumentNullException("Original_Arsenic");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Arsenic));
            }
            if ((Original_Cadmium == null)) {
                throw new global::System.ArgumentNullException("Original_Cadmium");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Cadmium));
            }
            if ((Original_Lead == null)) {
                throw new global::System.ArgumentNullException("Original_Lead");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Lead));
            }
            if ((Original_Mercury == null)) {
                throw new global::System.ArgumentNullException("Original_Mercury");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Mercury));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SAMPLEID, string AASID, string Method, string Technique, string MetalsWeight, string Arsenic, string Cadmium, string Lead, string Mercury) {
            if ((SAMPLEID == null)) {
                throw new global::System.ArgumentNullException("SAMPLEID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SAMPLEID));
            }
            if ((AASID == null)) {
                throw new global::System.ArgumentNullException("AASID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AASID));
            }
            if ((Method == null)) {
                throw new global::System.ArgumentNullException("Method");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                throw new global::System.ArgumentNullException("Technique");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((MetalsWeight == null)) {
                throw new global::System.ArgumentNullException("MetalsWeight");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MetalsWeight));
            }
            if ((Arsenic == null)) {
                throw new global::System.ArgumentNullException("Arsenic");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Arsenic));
            }
            if ((Cadmium == null)) {
                throw new global::System.ArgumentNullException("Cadmium");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Cadmium));
            }
            if ((Lead == null)) {
                throw new global::System.ArgumentNullException("Lead");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Lead));
            }
            if ((Mercury == null)) {
                throw new global::System.ArgumentNullException("Mercury");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Mercury));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAMPLEID, 
                    string AASID, 
                    string Method, 
                    string Technique, 
                    string MetalsWeight, 
                    string Arsenic, 
                    string Cadmium, 
                    string Lead, 
                    string Mercury, 
                    int Original_ID, 
                    string Original_SAMPLEID, 
                    string Original_AASID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_MetalsWeight, 
                    string Original_Arsenic, 
                    string Original_Cadmium, 
                    string Original_Lead, 
                    string Original_Mercury, 
                    int ID) {
            if ((SAMPLEID == null)) {
                throw new global::System.ArgumentNullException("SAMPLEID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SAMPLEID));
            }
            if ((AASID == null)) {
                throw new global::System.ArgumentNullException("AASID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AASID));
            }
            if ((Method == null)) {
                throw new global::System.ArgumentNullException("Method");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                throw new global::System.ArgumentNullException("Technique");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((MetalsWeight == null)) {
                throw new global::System.ArgumentNullException("MetalsWeight");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MetalsWeight));
            }
            if ((Arsenic == null)) {
                throw new global::System.ArgumentNullException("Arsenic");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Arsenic));
            }
            if ((Cadmium == null)) {
                throw new global::System.ArgumentNullException("Cadmium");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Cadmium));
            }
            if ((Lead == null)) {
                throw new global::System.ArgumentNullException("Lead");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Lead));
            }
            if ((Mercury == null)) {
                throw new global::System.ArgumentNullException("Mercury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Mercury));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            if ((Original_SAMPLEID == null)) {
                throw new global::System.ArgumentNullException("Original_SAMPLEID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SAMPLEID));
            }
            if ((Original_AASID == null)) {
                throw new global::System.ArgumentNullException("Original_AASID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_AASID));
            }
            if ((Original_Method == null)) {
                throw new global::System.ArgumentNullException("Original_Method");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                throw new global::System.ArgumentNullException("Original_Technique");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Technique));
            }
            if ((Original_MetalsWeight == null)) {
                throw new global::System.ArgumentNullException("Original_MetalsWeight");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MetalsWeight));
            }
            if ((Original_Arsenic == null)) {
                throw new global::System.ArgumentNullException("Original_Arsenic");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Arsenic));
            }
            if ((Original_Cadmium == null)) {
                throw new global::System.ArgumentNullException("Original_Cadmium");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Cadmium));
            }
            if ((Original_Lead == null)) {
                throw new global::System.ArgumentNullException("Original_Lead");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Lead));
            }
            if ((Original_Mercury == null)) {
                throw new global::System.ArgumentNullException("Original_Mercury");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Mercury));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAMPLEID, 
                    string AASID, 
                    string Method, 
                    string Technique, 
                    string MetalsWeight, 
                    string Arsenic, 
                    string Cadmium, 
                    string Lead, 
                    string Mercury, 
                    int Original_ID, 
                    string Original_SAMPLEID, 
                    string Original_AASID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_MetalsWeight, 
                    string Original_Arsenic, 
                    string Original_Cadmium, 
                    string Original_Lead, 
                    string Original_Mercury) {
            return this.Update(SAMPLEID, AASID, Method, Technique, MetalsWeight, Arsenic, Cadmium, Lead, Mercury, Original_ID, Original_SAMPLEID, Original_AASID, Original_Method, Original_Technique, Original_MetalsWeight, Original_Arsenic, Original_Cadmium, Original_Lead, Original_Mercury, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class microbialDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public microbialDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "microbialDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("MicrobialWeight", "MicrobialWeight");
            tableMapping.ColumnMappings.Add("Aspergillus", "Aspergillus");
            tableMapping.ColumnMappings.Add("ShigaToxin", "ShigaToxin");
            tableMapping.ColumnMappings.Add("Salmonella", "Salmonella");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[microbialDATA] WHERE (([ID] = @Original_ID) AND ((@IsNull_SAMPLEID = 1 AND [SAMPLEID] IS NULL) OR ([SAMPLEID] = @Original_SAMPLEID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_MicrobialWeight = 1 AND [MicrobialWeight] IS NULL) OR ([MicrobialWeight] = @Original_MicrobialWeight)) AND ((@IsNull_Aspergillus = 1 AND [Aspergillus] IS NULL) OR ([Aspergillus] = @Original_Aspergillus)) AND ((@IsNull_ShigaToxin = 1 AND [ShigaToxin] IS NULL) OR ([ShigaToxin] = @Original_ShigaToxin)) AND ((@IsNull_Salmonella = 1 AND [Salmonella] IS NULL) OR ([Salmonella] = @Original_Salmonella)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAMPLEID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MicrobialWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrobialWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aspergillus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aspergillus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShigaToxin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShigaToxin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Salmonella", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Salmonella", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[microbialDATA] ([SAMPLEID], [Method], [Technique], [MicrobialWeight], [Aspergillus], [ShigaToxin], [Salmonella]) VALUES (@SAMPLEID, @Method, @Technique, @MicrobialWeight, @Aspergillus, @ShigaToxin, @Salmonella);
SELECT ID, SAMPLEID, Method, Technique, MicrobialWeight, Aspergillus, ShigaToxin, Salmonella FROM microbialDATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrobialWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aspergillus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShigaToxin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Salmonella", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[microbialDATA] SET [SAMPLEID] = @SAMPLEID, [Method] = @Method, [Technique] = @Technique, [MicrobialWeight] = @MicrobialWeight, [Aspergillus] = @Aspergillus, [ShigaToxin] = @ShigaToxin, [Salmonella] = @Salmonella WHERE (([ID] = @Original_ID) AND ((@IsNull_SAMPLEID = 1 AND [SAMPLEID] IS NULL) OR ([SAMPLEID] = @Original_SAMPLEID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_MicrobialWeight = 1 AND [MicrobialWeight] IS NULL) OR ([MicrobialWeight] = @Original_MicrobialWeight)) AND ((@IsNull_Aspergillus = 1 AND [Aspergillus] IS NULL) OR ([Aspergillus] = @Original_Aspergillus)) AND ((@IsNull_ShigaToxin = 1 AND [ShigaToxin] IS NULL) OR ([ShigaToxin] = @Original_ShigaToxin)) AND ((@IsNull_Salmonella = 1 AND [Salmonella] IS NULL) OR ([Salmonella] = @Original_Salmonella)));
SELECT ID, SAMPLEID, Method, Technique, MicrobialWeight, Aspergillus, ShigaToxin, Salmonella FROM microbialDATA WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicrobialWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aspergillus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShigaToxin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Salmonella", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAMPLEID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAMPLEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MicrobialWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicrobialWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicrobialWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aspergillus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aspergillus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aspergillus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShigaToxin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShigaToxin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShigaToxin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Salmonella", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Salmonella", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salmonella", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SAMPLEID, Method, Technique, MicrobialWeight, Aspergillus, ShigaToxin," +
                " Salmonella FROM dbo.microbialDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.microbialDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.microbialDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.microbialDATADataTable dataTable = new fullDATASET.microbialDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.microbialDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "microbialDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_SAMPLEID, string Original_Method, string Original_Technique, string Original_MicrobialWeight, string Original_Aspergillus, string Original_ShigaToxin, string Original_Salmonella) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_SAMPLEID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAMPLEID));
            }
            if ((Original_Method == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Technique));
            }
            if ((Original_MicrobialWeight == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MicrobialWeight));
            }
            if ((Original_Aspergillus == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Aspergillus));
            }
            if ((Original_ShigaToxin == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ShigaToxin));
            }
            if ((Original_Salmonella == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Salmonella));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SAMPLEID, string Method, string Technique, string MicrobialWeight, string Aspergillus, string ShigaToxin, string Salmonella) {
            if ((SAMPLEID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SAMPLEID));
            }
            if ((Method == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Technique));
            }
            if ((MicrobialWeight == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MicrobialWeight));
            }
            if ((Aspergillus == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Aspergillus));
            }
            if ((ShigaToxin == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ShigaToxin));
            }
            if ((Salmonella == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Salmonella));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAMPLEID, 
                    string Method, 
                    string Technique, 
                    string MicrobialWeight, 
                    string Aspergillus, 
                    string ShigaToxin, 
                    string Salmonella, 
                    int Original_ID, 
                    string Original_SAMPLEID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_MicrobialWeight, 
                    string Original_Aspergillus, 
                    string Original_ShigaToxin, 
                    string Original_Salmonella, 
                    int ID) {
            if ((SAMPLEID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SAMPLEID));
            }
            if ((Method == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Technique));
            }
            if ((MicrobialWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MicrobialWeight));
            }
            if ((Aspergillus == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Aspergillus));
            }
            if ((ShigaToxin == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ShigaToxin));
            }
            if ((Salmonella == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Salmonella));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID));
            if ((Original_SAMPLEID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SAMPLEID));
            }
            if ((Original_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Technique));
            }
            if ((Original_MicrobialWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MicrobialWeight));
            }
            if ((Original_Aspergillus == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Aspergillus));
            }
            if ((Original_ShigaToxin == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ShigaToxin));
            }
            if ((Original_Salmonella == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Salmonella));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SAMPLEID, string Method, string Technique, string MicrobialWeight, string Aspergillus, string ShigaToxin, string Salmonella, int Original_ID, string Original_SAMPLEID, string Original_Method, string Original_Technique, string Original_MicrobialWeight, string Original_Aspergillus, string Original_ShigaToxin, string Original_Salmonella) {
            return this.Update(SAMPLEID, Method, Technique, MicrobialWeight, Aspergillus, ShigaToxin, Salmonella, Original_ID, Original_SAMPLEID, Original_Method, Original_Technique, Original_MicrobialWeight, Original_Aspergillus, Original_ShigaToxin, Original_Salmonella, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mycotoxinsDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public mycotoxinsDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mycotoxinsDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("SampleID", "SampleID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("LCMSID", "LCMSID");
            tableMapping.ColumnMappings.Add("MycoWeight", "MycoWeight");
            tableMapping.ColumnMappings.Add("AB1", "AB1");
            tableMapping.ColumnMappings.Add("AB2", "AB2");
            tableMapping.ColumnMappings.Add("AG1", "AG1");
            tableMapping.ColumnMappings.Add("AG2", "AG2");
            tableMapping.ColumnMappings.Add("OTA", "OTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[mycotoxinsDATA] WHERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_LCMSID = 1 AND [LCMSID] IS NULL) OR ([LCMSID] = @Original_LCMSID)) AND ((@IsNull_MycoWeight = 1 AND [MycoWeight] IS NULL) OR ([MycoWeight] = @Original_MycoWeight)) AND ((@IsNull_AB1 = 1 AND [AB1] IS NULL) OR ([AB1] = @Original_AB1)) AND ((@IsNull_AB2 = 1 AND [AB2] IS NULL) OR ([AB2] = @Original_AB2)) AND ((@IsNull_AG1 = 1 AND [AG1] IS NULL) OR ([AG1] = @Original_AG1)) AND ((@IsNull_AG2 = 1 AND [AG2] IS NULL) OR ([AG2] = @Original_AG2)) AND ((@IsNull_OTA = 1 AND [OTA] IS NULL) OR ([OTA] = @Original_OTA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MycoWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MycoWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AB1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AB1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AB2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AB2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AG1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AG1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AG2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AG2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[mycotoxinsDATA] ([Date], [SampleID], [Method], [Technique], [LCMSID], [MycoWeight], [AB1], [AB2], [AG1], [AG2], [OTA]) VALUES (@Date, @SampleID, @Method, @Technique, @LCMSID, @MycoWeight, @AB1, @AB2, @AG1, @AG2, @OTA);
SELECT ID, Date, SampleID, Method, Technique, LCMSID, MycoWeight, AB1, AB2, AG1, AG2, OTA FROM mycotoxinsDATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MycoWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[mycotoxinsDATA] SET [Date] = @Date, [SampleID] = @SampleID, [Method] = @Method, [Technique] = @Technique, [LCMSID] = @LCMSID, [MycoWeight] = @MycoWeight, [AB1] = @AB1, [AB2] = @AB2, [AG1] = @AG1, [AG2] = @AG2, [OTA] = @OTA WHERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_LCMSID = 1 AND [LCMSID] IS NULL) OR ([LCMSID] = @Original_LCMSID)) AND ((@IsNull_MycoWeight = 1 AND [MycoWeight] IS NULL) OR ([MycoWeight] = @Original_MycoWeight)) AND ((@IsNull_AB1 = 1 AND [AB1] IS NULL) OR ([AB1] = @Original_AB1)) AND ((@IsNull_AB2 = 1 AND [AB2] IS NULL) OR ([AB2] = @Original_AB2)) AND ((@IsNull_AG1 = 1 AND [AG1] IS NULL) OR ([AG1] = @Original_AG1)) AND ((@IsNull_AG2 = 1 AND [AG2] IS NULL) OR ([AG2] = @Original_AG2)) AND ((@IsNull_OTA = 1 AND [OTA] IS NULL) OR ([OTA] = @Original_OTA)));
SELECT ID, Date, SampleID, Method, Technique, LCMSID, MycoWeight, AB1, AB2, AG1, AG2, OTA FROM mycotoxinsDATA WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MycoWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MycoWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MycoWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MycoWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AB1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AB1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AB2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AB2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AG1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AG1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AG2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AG2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Date, SampleID, Method, Technique, LCMSID, MycoWeight, AB1, AB2, AG1, " +
                "AG2, OTA FROM dbo.mycotoxinsDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.mycotoxinsDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.mycotoxinsDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.mycotoxinsDATADataTable dataTable = new fullDATASET.mycotoxinsDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.mycotoxinsDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "mycotoxinsDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Date, string Original_SampleID, string Original_Method, string Original_Technique, string Original_LCMSID, string Original_MycoWeight, string Original_AB1, string Original_AB2, string Original_AG1, string Original_AG2, string Original_OTA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Technique));
            }
            if ((Original_LCMSID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_LCMSID));
            }
            if ((Original_MycoWeight == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MycoWeight));
            }
            if ((Original_AB1 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_AB1));
            }
            if ((Original_AB2 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_AB2));
            }
            if ((Original_AG1 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_AG1));
            }
            if ((Original_AG2 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_AG2));
            }
            if ((Original_OTA == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_OTA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Date, string SampleID, string Method, string Technique, string LCMSID, string MycoWeight, string AB1, string AB2, string AG1, string AG2, string OTA) {
            if ((Date == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((LCMSID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LCMSID));
            }
            if ((MycoWeight == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MycoWeight));
            }
            if ((AB1 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(AB1));
            }
            if ((AB2 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(AB2));
            }
            if ((AG1 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(AG1));
            }
            if ((AG2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(AG2));
            }
            if ((OTA == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(OTA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string Method, 
                    string Technique, 
                    string LCMSID, 
                    string MycoWeight, 
                    string AB1, 
                    string AB2, 
                    string AG1, 
                    string AG2, 
                    string OTA, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_LCMSID, 
                    string Original_MycoWeight, 
                    string Original_AB1, 
                    string Original_AB2, 
                    string Original_AG1, 
                    string Original_AG2, 
                    string Original_OTA, 
                    int ID) {
            if ((Date == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((LCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LCMSID));
            }
            if ((MycoWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MycoWeight));
            }
            if ((AB1 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(AB1));
            }
            if ((AB2 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(AB2));
            }
            if ((AG1 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(AG1));
            }
            if ((AG2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(AG2));
            }
            if ((OTA == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(OTA));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Technique));
            }
            if ((Original_LCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LCMSID));
            }
            if ((Original_MycoWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_MycoWeight));
            }
            if ((Original_AB1 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_AB1));
            }
            if ((Original_AB2 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_AB2));
            }
            if ((Original_AG1 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_AG1));
            }
            if ((Original_AG2 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_AG2));
            }
            if ((Original_OTA == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_OTA));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string Method, 
                    string Technique, 
                    string LCMSID, 
                    string MycoWeight, 
                    string AB1, 
                    string AB2, 
                    string AG1, 
                    string AG2, 
                    string OTA, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_LCMSID, 
                    string Original_MycoWeight, 
                    string Original_AB1, 
                    string Original_AB2, 
                    string Original_AG1, 
                    string Original_AG2, 
                    string Original_OTA) {
            return this.Update(Date, SampleID, Method, Technique, LCMSID, MycoWeight, AB1, AB2, AG1, AG2, OTA, Original_ID, Original_Date, Original_SampleID, Original_Method, Original_Technique, Original_LCMSID, Original_MycoWeight, Original_AB1, Original_AB2, Original_AG1, Original_AG2, Original_OTA, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PesticidesDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PesticidesDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PesticidesDATA";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("SampleID", "SampleID");
            tableMapping.ColumnMappings.Add("LCMSID", "LCMSID");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("PestInputWt", "PestInputWt");
            tableMapping.ColumnMappings.Add("Abamectin", "Abamectin");
            tableMapping.ColumnMappings.Add("Acephate", "Acephate");
            tableMapping.ColumnMappings.Add("Acequinocyl", "Acequinocyl");
            tableMapping.ColumnMappings.Add("Acetamiprid", "Acetamiprid");
            tableMapping.ColumnMappings.Add("Aldicarb", "Aldicarb");
            tableMapping.ColumnMappings.Add("Azoxystrobin", "Azoxystrobin");
            tableMapping.ColumnMappings.Add("Bifenazate", "Bifenazate");
            tableMapping.ColumnMappings.Add("Bifenthrin", "Bifenthrin");
            tableMapping.ColumnMappings.Add("Boscalid", "Boscalid");
            tableMapping.ColumnMappings.Add("Captan", "Captan");
            tableMapping.ColumnMappings.Add("Carbaryl", "Carbaryl");
            tableMapping.ColumnMappings.Add("Carbofuran", "Carbofuran");
            tableMapping.ColumnMappings.Add("Chlorantranilprole", "Chlorantranilprole");
            tableMapping.ColumnMappings.Add("Chlordane", "Chlordane");
            tableMapping.ColumnMappings.Add("Chlorfenapyr", "Chlorfenapyr");
            tableMapping.ColumnMappings.Add("Chlorpyrifos", "Chlorpyrifos");
            tableMapping.ColumnMappings.Add("Clofentezine", "Clofentezine");
            tableMapping.ColumnMappings.Add("Coumaphos", "Coumaphos");
            tableMapping.ColumnMappings.Add("Cyfluthrin", "Cyfluthrin");
            tableMapping.ColumnMappings.Add("Cypermethrin", "Cypermethrin");
            tableMapping.ColumnMappings.Add("Daminozide", "Daminozide");
            tableMapping.ColumnMappings.Add("Dichlorvos", "Dichlorvos");
            tableMapping.ColumnMappings.Add("Diazinon", "Diazinon");
            tableMapping.ColumnMappings.Add("Dimethoate", "Dimethoate");
            tableMapping.ColumnMappings.Add("Dimethomorph", "Dimethomorph");
            tableMapping.ColumnMappings.Add("Ethoprophos", "Ethoprophos");
            tableMapping.ColumnMappings.Add("Etofenprox", "Etofenprox");
            tableMapping.ColumnMappings.Add("Etoxazole", "Etoxazole");
            tableMapping.ColumnMappings.Add("Fenhexamid", "Fenhexamid");
            tableMapping.ColumnMappings.Add("Fenoxycarb", "Fenoxycarb");
            tableMapping.ColumnMappings.Add("Fenpyroximate", "Fenpyroximate");
            tableMapping.ColumnMappings.Add("Fipronil", "Fipronil");
            tableMapping.ColumnMappings.Add("Flonicamid", "Flonicamid");
            tableMapping.ColumnMappings.Add("Fludioxonil", "Fludioxonil");
            tableMapping.ColumnMappings.Add("Hexythiazox", "Hexythiazox");
            tableMapping.ColumnMappings.Add("Imazalil", "Imazalil");
            tableMapping.ColumnMappings.Add("Imidacloprid", "Imidacloprid");
            tableMapping.ColumnMappings.Add("KresoximMethyl", "KresoximMethyl");
            tableMapping.ColumnMappings.Add("Malathion", "Malathion");
            tableMapping.ColumnMappings.Add("Metalaxyl", "Metalaxyl");
            tableMapping.ColumnMappings.Add("Methiocarb", "Methiocarb");
            tableMapping.ColumnMappings.Add("Methomyl", "Methomyl");
            tableMapping.ColumnMappings.Add("MethylParathion", "MethylParathion");
            tableMapping.ColumnMappings.Add("Mevinphos", "Mevinphos");
            tableMapping.ColumnMappings.Add("Myclobutanil", "Myclobutanil");
            tableMapping.ColumnMappings.Add("Naled", "Naled");
            tableMapping.ColumnMappings.Add("Oxamyl", "Oxamyl");
            tableMapping.ColumnMappings.Add("Pentachloronitrobenzene", "Pentachloronitrobenzene");
            tableMapping.ColumnMappings.Add("Permethrins", "Permethrins");
            tableMapping.ColumnMappings.Add("Phosmet", "Phosmet");
            tableMapping.ColumnMappings.Add("PiperonylButoxide", "PiperonylButoxide");
            tableMapping.ColumnMappings.Add("Prallethrin", "Prallethrin");
            tableMapping.ColumnMappings.Add("Propiconazole", "Propiconazole");
            tableMapping.ColumnMappings.Add("Propoxur", "Propoxur");
            tableMapping.ColumnMappings.Add("Pyrethrins", "Pyrethrins");
            tableMapping.ColumnMappings.Add("Pyridaben", "Pyridaben");
            tableMapping.ColumnMappings.Add("SpinetoramJ", "SpinetoramJ");
            tableMapping.ColumnMappings.Add("SpinetoramL", "SpinetoramL");
            tableMapping.ColumnMappings.Add("SpinosadA", "SpinosadA");
            tableMapping.ColumnMappings.Add("SpinosadD", "SpinosadD");
            tableMapping.ColumnMappings.Add("Spiromesifen", "Spiromesifen");
            tableMapping.ColumnMappings.Add("Spirotetramat", "Spirotetramat");
            tableMapping.ColumnMappings.Add("Spiroxamine", "Spiroxamine");
            tableMapping.ColumnMappings.Add("Tebuconazole", "Tebuconazole");
            tableMapping.ColumnMappings.Add("Thiacloprid", "Thiacloprid");
            tableMapping.ColumnMappings.Add("Thiamethoxam", "Thiamethoxam");
            tableMapping.ColumnMappings.Add("Trifloxystrobin", "Trifloxystrobin");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PesticidesDATA] WHERE (([Id] = @Original_Id) AND ((@IsNull_Sam" +
                "pleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@I" +
                "sNull_LCMSID = 1 AND [LCMSID] IS NULL) OR ([LCMSID] = @Original_LCMSID)) AND ((@" +
                "IsNull_GCMSID = 1 AND [GCMSID] IS NULL) OR ([GCMSID] = @Original_GCMSID)) AND ((" +
                "@IsNull_PestInputWt = 1 AND [PestInputWt] IS NULL) OR ([PestInputWt] = @Original" +
                "_PestInputWt)) AND ((@IsNull_Abamectin = 1 AND [Abamectin] IS NULL) OR ([Abamect" +
                "in] = @Original_Abamectin)) AND ((@IsNull_Acephate = 1 AND [Acephate] IS NULL) O" +
                "R ([Acephate] = @Original_Acephate)) AND ((@IsNull_Acequinocyl = 1 AND [Acequino" +
                "cyl] IS NULL) OR ([Acequinocyl] = @Original_Acequinocyl)) AND ((@IsNull_Acetamip" +
                "rid = 1 AND [Acetamiprid] IS NULL) OR ([Acetamiprid] = @Original_Acetamiprid)) A" +
                "ND ((@IsNull_Aldicarb = 1 AND [Aldicarb] IS NULL) OR ([Aldicarb] = @Original_Ald" +
                "icarb)) AND ((@IsNull_Azoxystrobin = 1 AND [Azoxystrobin] IS NULL) OR ([Azoxystr" +
                "obin] = @Original_Azoxystrobin)) AND ((@IsNull_Bifenazate = 1 AND [Bifenazate] I" +
                "S NULL) OR ([Bifenazate] = @Original_Bifenazate)) AND ((@IsNull_Bifenthrin = 1 A" +
                "ND [Bifenthrin] IS NULL) OR ([Bifenthrin] = @Original_Bifenthrin)) AND ((@IsNull" +
                "_Boscalid = 1 AND [Boscalid] IS NULL) OR ([Boscalid] = @Original_Boscalid)) AND " +
                "((@IsNull_Captan = 1 AND [Captan] IS NULL) OR ([Captan] = @Original_Captan)) AND" +
                " ((@IsNull_Carbaryl = 1 AND [Carbaryl] IS NULL) OR ([Carbaryl] = @Original_Carba" +
                "ryl)) AND ((@IsNull_Carbofuran = 1 AND [Carbofuran] IS NULL) OR ([Carbofuran] = " +
                "@Original_Carbofuran)) AND ((@IsNull_Chlorantranilprole = 1 AND [Chlorantranilpr" +
                "ole] IS NULL) OR ([Chlorantranilprole] = @Original_Chlorantranilprole)) AND ((@I" +
                "sNull_Chlordane = 1 AND [Chlordane] IS NULL) OR ([Chlordane] = @Original_Chlorda" +
                "ne)) AND ((@IsNull_Chlorfenapyr = 1 AND [Chlorfenapyr] IS NULL) OR ([Chlorfenapy" +
                "r] = @Original_Chlorfenapyr)) AND ((@IsNull_Chlorpyrifos = 1 AND [Chlorpyrifos] " +
                "IS NULL) OR ([Chlorpyrifos] = @Original_Chlorpyrifos)) AND ((@IsNull_Clofentezin" +
                "e = 1 AND [Clofentezine] IS NULL) OR ([Clofentezine] = @Original_Clofentezine)) " +
                "AND ((@IsNull_Coumaphos = 1 AND [Coumaphos] IS NULL) OR ([Coumaphos] = @Original" +
                "_Coumaphos)) AND ((@IsNull_Cyfluthrin = 1 AND [Cyfluthrin] IS NULL) OR ([Cyfluth" +
                "rin] = @Original_Cyfluthrin)) AND ((@IsNull_Cypermethrin = 1 AND [Cypermethrin] " +
                "IS NULL) OR ([Cypermethrin] = @Original_Cypermethrin)) AND ((@IsNull_Daminozide " +
                "= 1 AND [Daminozide] IS NULL) OR ([Daminozide] = @Original_Daminozide)) AND ((@I" +
                "sNull_Dichlorvos = 1 AND [Dichlorvos] IS NULL) OR ([Dichlorvos] = @Original_Dich" +
                "lorvos)) AND ((@IsNull_Diazinon = 1 AND [Diazinon] IS NULL) OR ([Diazinon] = @Or" +
                "iginal_Diazinon)) AND ((@IsNull_Dimethoate = 1 AND [Dimethoate] IS NULL) OR ([Di" +
                "methoate] = @Original_Dimethoate)) AND ((@IsNull_Dimethomorph = 1 AND [Dimethomo" +
                "rph] IS NULL) OR ([Dimethomorph] = @Original_Dimethomorph)) AND ((@IsNull_Ethopr" +
                "ophos = 1 AND [Ethoprophos] IS NULL) OR ([Ethoprophos] = @Original_Ethoprophos))" +
                " AND ((@IsNull_Etofenprox = 1 AND [Etofenprox] IS NULL) OR ([Etofenprox] = @Orig" +
                "inal_Etofenprox)) AND ((@IsNull_Etoxazole = 1 AND [Etoxazole] IS NULL) OR ([Etox" +
                "azole] = @Original_Etoxazole)) AND ((@IsNull_Fenhexamid = 1 AND [Fenhexamid] IS " +
                "NULL) OR ([Fenhexamid] = @Original_Fenhexamid)) AND ((@IsNull_Fenoxycarb = 1 AND" +
                " [Fenoxycarb] IS NULL) OR ([Fenoxycarb] = @Original_Fenoxycarb)) AND ((@IsNull_F" +
                "enpyroximate = 1 AND [Fenpyroximate] IS NULL) OR ([Fenpyroximate] = @Original_Fe" +
                "npyroximate)) AND ((@IsNull_Fipronil = 1 AND [Fipronil] IS NULL) OR ([Fipronil] " +
                "= @Original_Fipronil)) AND ((@IsNull_Flonicamid = 1 AND [Flonicamid] IS NULL) OR" +
                " ([Flonicamid] = @Original_Flonicamid)) AND ((@IsNull_Fludioxonil = 1 AND [Fludi" +
                "oxonil] IS NULL) OR ([Fludioxonil] = @Original_Fludioxonil)) AND ((@IsNull_Hexyt" +
                "hiazox = 1 AND [Hexythiazox] IS NULL) OR ([Hexythiazox] = @Original_Hexythiazox)" +
                ") AND ((@IsNull_Imazalil = 1 AND [Imazalil] IS NULL) OR ([Imazalil] = @Original_" +
                "Imazalil)) AND ((@IsNull_Imidacloprid = 1 AND [Imidacloprid] IS NULL) OR ([Imida" +
                "cloprid] = @Original_Imidacloprid)) AND ((@IsNull_KresoximMethyl = 1 AND [Kresox" +
                "imMethyl] IS NULL) OR ([KresoximMethyl] = @Original_KresoximMethyl)) AND ((@IsNu" +
                "ll_Malathion = 1 AND [Malathion] IS NULL) OR ([Malathion] = @Original_Malathion)" +
                ") AND ((@IsNull_Metalaxyl = 1 AND [Metalaxyl] IS NULL) OR ([Metalaxyl] = @Origin" +
                "al_Metalaxyl)) AND ((@IsNull_Methiocarb = 1 AND [Methiocarb] IS NULL) OR ([Methi" +
                "ocarb] = @Original_Methiocarb)) AND ((@IsNull_Methomyl = 1 AND [Methomyl] IS NUL" +
                "L) OR ([Methomyl] = @Original_Methomyl)) AND ((@IsNull_MethylParathion = 1 AND [" +
                "MethylParathion] IS NULL) OR ([MethylParathion] = @Original_MethylParathion)) AN" +
                "D ((@IsNull_Mevinphos = 1 AND [Mevinphos] IS NULL) OR ([Mevinphos] = @Original_M" +
                "evinphos)) AND ((@IsNull_Myclobutanil = 1 AND [Myclobutanil] IS NULL) OR ([Myclo" +
                "butanil] = @Original_Myclobutanil)) AND ((@IsNull_Naled = 1 AND [Naled] IS NULL)" +
                " OR ([Naled] = @Original_Naled)) AND ((@IsNull_Oxamyl = 1 AND [Oxamyl] IS NULL) " +
                "OR ([Oxamyl] = @Original_Oxamyl)) AND ((@IsNull_Pentachloronitrobenzene = 1 AND " +
                "[Pentachloronitrobenzene] IS NULL) OR ([Pentachloronitrobenzene] = @Original_Pen" +
                "tachloronitrobenzene)) AND ((@IsNull_Permethrins = 1 AND [Permethrins] IS NULL) " +
                "OR ([Permethrins] = @Original_Permethrins)) AND ((@IsNull_Phosmet = 1 AND [Phosm" +
                "et] IS NULL) OR ([Phosmet] = @Original_Phosmet)) AND ((@IsNull_PiperonylButoxide" +
                " = 1 AND [PiperonylButoxide] IS NULL) OR ([PiperonylButoxide] = @Original_Pipero" +
                "nylButoxide)) AND ((@IsNull_Prallethrin = 1 AND [Prallethrin] IS NULL) OR ([Pral" +
                "lethrin] = @Original_Prallethrin)) AND ((@IsNull_Propiconazole = 1 AND [Propicon" +
                "azole] IS NULL) OR ([Propiconazole] = @Original_Propiconazole)) AND ((@IsNull_Pr" +
                "opoxur = 1 AND [Propoxur] IS NULL) OR ([Propoxur] = @Original_Propoxur)) AND ((@" +
                "IsNull_Pyrethrins = 1 AND [Pyrethrins] IS NULL) OR ([Pyrethrins] = @Original_Pyr" +
                "ethrins)) AND ((@IsNull_Pyridaben = 1 AND [Pyridaben] IS NULL) OR ([Pyridaben] =" +
                " @Original_Pyridaben)) AND ((@IsNull_SpinetoramJ = 1 AND [SpinetoramJ] IS NULL) " +
                "OR ([SpinetoramJ] = @Original_SpinetoramJ)) AND ((@IsNull_SpinetoramL = 1 AND [S" +
                "pinetoramL] IS NULL) OR ([SpinetoramL] = @Original_SpinetoramL)) AND ((@IsNull_S" +
                "pinosadA = 1 AND [SpinosadA] IS NULL) OR ([SpinosadA] = @Original_SpinosadA)) AN" +
                "D ((@IsNull_SpinosadD = 1 AND [SpinosadD] IS NULL) OR ([SpinosadD] = @Original_S" +
                "pinosadD)) AND ((@IsNull_Spiromesifen = 1 AND [Spiromesifen] IS NULL) OR ([Spiro" +
                "mesifen] = @Original_Spiromesifen)) AND ((@IsNull_Spirotetramat = 1 AND [Spirote" +
                "tramat] IS NULL) OR ([Spirotetramat] = @Original_Spirotetramat)) AND ((@IsNull_S" +
                "piroxamine = 1 AND [Spiroxamine] IS NULL) OR ([Spiroxamine] = @Original_Spiroxam" +
                "ine)) AND ((@IsNull_Tebuconazole = 1 AND [Tebuconazole] IS NULL) OR ([Tebuconazo" +
                "le] = @Original_Tebuconazole)) AND ((@IsNull_Thiacloprid = 1 AND [Thiacloprid] I" +
                "S NULL) OR ([Thiacloprid] = @Original_Thiacloprid)) AND ((@IsNull_Thiamethoxam =" +
                " 1 AND [Thiamethoxam] IS NULL) OR ([Thiamethoxam] = @Original_Thiamethoxam)) AND" +
                " ((@IsNull_Trifloxystrobin = 1 AND [Trifloxystrobin] IS NULL) OR ([Trifloxystrob" +
                "in] = @Original_Trifloxystrobin)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PestInputWt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PestInputWt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Abamectin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Abamectin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acephate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acephate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acequinocyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acequinocyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acetamiprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acetamiprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aldicarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aldicarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Azoxystrobin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Azoxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bifenazate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bifenazate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bifenthrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bifenthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Boscalid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Boscalid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Captan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Captan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carbaryl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carbaryl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carbofuran", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carbofuran", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorantranilprole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorantranilprole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlordane", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlordane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorfenapyr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorfenapyr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorpyrifos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorpyrifos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clofentezine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clofentezine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coumaphos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coumaphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cyfluthrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cyfluthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cypermethrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cypermethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Daminozide", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Daminozide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dichlorvos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dichlorvos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diazinon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diazinon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dimethoate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimethoate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dimethomorph", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimethomorph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ethoprophos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ethoprophos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Etofenprox", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etofenprox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Etoxazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etoxazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenhexamid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenhexamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenoxycarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenoxycarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenpyroximate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenpyroximate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fipronil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fipronil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flonicamid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flonicamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fludioxonil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fludioxonil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hexythiazox", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hexythiazox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Imazalil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Imazalil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Imidacloprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Imidacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KresoximMethyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KresoximMethyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Malathion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Malathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Metalaxyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Metalaxyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Methiocarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Methiocarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Methomyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Methomyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MethylParathion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MethylParathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mevinphos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mevinphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Myclobutanil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Myclobutanil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Naled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Naled", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxamyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxamyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pentachloronitrobenzene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pentachloronitrobenzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Permethrins", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Permethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phosmet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phosmet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PiperonylButoxide", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiperonylButoxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Prallethrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Prallethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Propiconazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Propiconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Propoxur", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Propoxur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pyrethrins", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pyrethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pyridaben", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pyridaben", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinetoramJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinetoramJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinetoramL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinetoramL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinosadA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinosadA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinosadD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinosadD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spiromesifen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spiromesifen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spirotetramat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spirotetramat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spiroxamine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spiroxamine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tebuconazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tebuconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thiacloprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thiacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thiamethoxam", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thiamethoxam", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Trifloxystrobin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trifloxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PesticidesDATA] ([SampleID], [LCMSID], [GCMSID], [PestInputWt]" +
                ", [Abamectin], [Acephate], [Acequinocyl], [Acetamiprid], [Aldicarb], [Azoxystrob" +
                "in], [Bifenazate], [Bifenthrin], [Boscalid], [Captan], [Carbaryl], [Carbofuran]," +
                " [Chlorantranilprole], [Chlordane], [Chlorfenapyr], [Chlorpyrifos], [Clofentezin" +
                "e], [Coumaphos], [Cyfluthrin], [Cypermethrin], [Daminozide], [Dichlorvos], [Diaz" +
                "inon], [Dimethoate], [Dimethomorph], [Ethoprophos], [Etofenprox], [Etoxazole], [" +
                "Fenhexamid], [Fenoxycarb], [Fenpyroximate], [Fipronil], [Flonicamid], [Fludioxon" +
                "il], [Hexythiazox], [Imazalil], [Imidacloprid], [KresoximMethyl], [Malathion], [" +
                "Metalaxyl], [Methiocarb], [Methomyl], [MethylParathion], [Mevinphos], [Myclobuta" +
                "nil], [Naled], [Oxamyl], [Pentachloronitrobenzene], [Permethrins], [Phosmet], [P" +
                "iperonylButoxide], [Prallethrin], [Propiconazole], [Propoxur], [Pyrethrins], [Py" +
                "ridaben], [SpinetoramJ], [SpinetoramL], [SpinosadA], [SpinosadD], [Spiromesifen]" +
                ", [Spirotetramat], [Spiroxamine], [Tebuconazole], [Thiacloprid], [Thiamethoxam]," +
                " [Trifloxystrobin]) VALUES (@SampleID, @LCMSID, @GCMSID, @PestInputWt, @Abamecti" +
                "n, @Acephate, @Acequinocyl, @Acetamiprid, @Aldicarb, @Azoxystrobin, @Bifenazate," +
                " @Bifenthrin, @Boscalid, @Captan, @Carbaryl, @Carbofuran, @Chlorantranilprole, @" +
                "Chlordane, @Chlorfenapyr, @Chlorpyrifos, @Clofentezine, @Coumaphos, @Cyfluthrin," +
                " @Cypermethrin, @Daminozide, @Dichlorvos, @Diazinon, @Dimethoate, @Dimethomorph," +
                " @Ethoprophos, @Etofenprox, @Etoxazole, @Fenhexamid, @Fenoxycarb, @Fenpyroximate" +
                ", @Fipronil, @Flonicamid, @Fludioxonil, @Hexythiazox, @Imazalil, @Imidacloprid, " +
                "@KresoximMethyl, @Malathion, @Metalaxyl, @Methiocarb, @Methomyl, @MethylParathio" +
                "n, @Mevinphos, @Myclobutanil, @Naled, @Oxamyl, @Pentachloronitrobenzene, @Permet" +
                "hrins, @Phosmet, @PiperonylButoxide, @Prallethrin, @Propiconazole, @Propoxur, @P" +
                "yrethrins, @Pyridaben, @SpinetoramJ, @SpinetoramL, @SpinosadA, @SpinosadD, @Spir" +
                "omesifen, @Spirotetramat, @Spiroxamine, @Tebuconazole, @Thiacloprid, @Thiamethox" +
                "am, @Trifloxystrobin);\r\nSELECT Id, SampleID, LCMSID, GCMSID, PestInputWt, Abamec" +
                "tin, Acephate, Acequinocyl, Acetamiprid, Aldicarb, Azoxystrobin, Bifenazate, Bif" +
                "enthrin, Boscalid, Captan, Carbaryl, Carbofuran, Chlorantranilprole, Chlordane, " +
                "Chlorfenapyr, Chlorpyrifos, Clofentezine, Coumaphos, Cyfluthrin, Cypermethrin, D" +
                "aminozide, Dichlorvos, Diazinon, Dimethoate, Dimethomorph, Ethoprophos, Etofenpr" +
                "ox, Etoxazole, Fenhexamid, Fenoxycarb, Fenpyroximate, Fipronil, Flonicamid, Flud" +
                "ioxonil, Hexythiazox, Imazalil, Imidacloprid, KresoximMethyl, Malathion, Metalax" +
                "yl, Methiocarb, Methomyl, MethylParathion, Mevinphos, Myclobutanil, Naled, Oxamy" +
                "l, Pentachloronitrobenzene, Permethrins, Phosmet, PiperonylButoxide, Prallethrin" +
                ", Propiconazole, Propoxur, Pyrethrins, Pyridaben, SpinetoramJ, SpinetoramL, Spin" +
                "osadA, SpinosadD, Spiromesifen, Spirotetramat, Spiroxamine, Tebuconazole, Thiacl" +
                "oprid, Thiamethoxam, Trifloxystrobin FROM PesticidesDATA WHERE (Id = SCOPE_IDENT" +
                "ITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PestInputWt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Abamectin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acephate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acequinocyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetamiprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aldicarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Azoxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bifenazate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bifenthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Boscalid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Captan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carbaryl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carbofuran", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorantranilprole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlordane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorfenapyr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorpyrifos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clofentezine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coumaphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cyfluthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cypermethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Daminozide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dichlorvos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diazinon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimethoate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimethomorph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ethoprophos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etofenprox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etoxazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenhexamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenoxycarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenpyroximate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fipronil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flonicamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fludioxonil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hexythiazox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imazalil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imidacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KresoximMethyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Malathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Metalaxyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methiocarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methomyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethylParathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mevinphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Myclobutanil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Naled", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxamyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pentachloronitrobenzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Permethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phosmet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiperonylButoxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prallethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propiconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propoxur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pyrethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pyridaben", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinetoramJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinetoramL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinosadA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinosadD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spiromesifen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spirotetramat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spiroxamine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tebuconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thiacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thiamethoxam", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trifloxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PesticidesDATA] SET [SampleID] = @SampleID, [LCMSID] = @LCMSID, [GC" +
                "MSID] = @GCMSID, [PestInputWt] = @PestInputWt, [Abamectin] = @Abamectin, [Acepha" +
                "te] = @Acephate, [Acequinocyl] = @Acequinocyl, [Acetamiprid] = @Acetamiprid, [Al" +
                "dicarb] = @Aldicarb, [Azoxystrobin] = @Azoxystrobin, [Bifenazate] = @Bifenazate," +
                " [Bifenthrin] = @Bifenthrin, [Boscalid] = @Boscalid, [Captan] = @Captan, [Carbar" +
                "yl] = @Carbaryl, [Carbofuran] = @Carbofuran, [Chlorantranilprole] = @Chlorantran" +
                "ilprole, [Chlordane] = @Chlordane, [Chlorfenapyr] = @Chlorfenapyr, [Chlorpyrifos" +
                "] = @Chlorpyrifos, [Clofentezine] = @Clofentezine, [Coumaphos] = @Coumaphos, [Cy" +
                "fluthrin] = @Cyfluthrin, [Cypermethrin] = @Cypermethrin, [Daminozide] = @Daminoz" +
                "ide, [Dichlorvos] = @Dichlorvos, [Diazinon] = @Diazinon, [Dimethoate] = @Dimetho" +
                "ate, [Dimethomorph] = @Dimethomorph, [Ethoprophos] = @Ethoprophos, [Etofenprox] " +
                "= @Etofenprox, [Etoxazole] = @Etoxazole, [Fenhexamid] = @Fenhexamid, [Fenoxycarb" +
                "] = @Fenoxycarb, [Fenpyroximate] = @Fenpyroximate, [Fipronil] = @Fipronil, [Flon" +
                "icamid] = @Flonicamid, [Fludioxonil] = @Fludioxonil, [Hexythiazox] = @Hexythiazo" +
                "x, [Imazalil] = @Imazalil, [Imidacloprid] = @Imidacloprid, [KresoximMethyl] = @K" +
                "resoximMethyl, [Malathion] = @Malathion, [Metalaxyl] = @Metalaxyl, [Methiocarb] " +
                "= @Methiocarb, [Methomyl] = @Methomyl, [MethylParathion] = @MethylParathion, [Me" +
                "vinphos] = @Mevinphos, [Myclobutanil] = @Myclobutanil, [Naled] = @Naled, [Oxamyl" +
                "] = @Oxamyl, [Pentachloronitrobenzene] = @Pentachloronitrobenzene, [Permethrins]" +
                " = @Permethrins, [Phosmet] = @Phosmet, [PiperonylButoxide] = @PiperonylButoxide," +
                " [Prallethrin] = @Prallethrin, [Propiconazole] = @Propiconazole, [Propoxur] = @P" +
                "ropoxur, [Pyrethrins] = @Pyrethrins, [Pyridaben] = @Pyridaben, [SpinetoramJ] = @" +
                "SpinetoramJ, [SpinetoramL] = @SpinetoramL, [SpinosadA] = @SpinosadA, [SpinosadD]" +
                " = @SpinosadD, [Spiromesifen] = @Spiromesifen, [Spirotetramat] = @Spirotetramat," +
                " [Spiroxamine] = @Spiroxamine, [Tebuconazole] = @Tebuconazole, [Thiacloprid] = @" +
                "Thiacloprid, [Thiamethoxam] = @Thiamethoxam, [Trifloxystrobin] = @Trifloxystrobi" +
                "n WHERE (([Id] = @Original_Id) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL" +
                ") OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_LCMSID = 1 AND [LCMSID] IS" +
                " NULL) OR ([LCMSID] = @Original_LCMSID)) AND ((@IsNull_GCMSID = 1 AND [GCMSID] I" +
                "S NULL) OR ([GCMSID] = @Original_GCMSID)) AND ((@IsNull_PestInputWt = 1 AND [Pes" +
                "tInputWt] IS NULL) OR ([PestInputWt] = @Original_PestInputWt)) AND ((@IsNull_Aba" +
                "mectin = 1 AND [Abamectin] IS NULL) OR ([Abamectin] = @Original_Abamectin)) AND " +
                "((@IsNull_Acephate = 1 AND [Acephate] IS NULL) OR ([Acephate] = @Original_Acepha" +
                "te)) AND ((@IsNull_Acequinocyl = 1 AND [Acequinocyl] IS NULL) OR ([Acequinocyl] " +
                "= @Original_Acequinocyl)) AND ((@IsNull_Acetamiprid = 1 AND [Acetamiprid] IS NUL" +
                "L) OR ([Acetamiprid] = @Original_Acetamiprid)) AND ((@IsNull_Aldicarb = 1 AND [A" +
                "ldicarb] IS NULL) OR ([Aldicarb] = @Original_Aldicarb)) AND ((@IsNull_Azoxystrob" +
                "in = 1 AND [Azoxystrobin] IS NULL) OR ([Azoxystrobin] = @Original_Azoxystrobin))" +
                " AND ((@IsNull_Bifenazate = 1 AND [Bifenazate] IS NULL) OR ([Bifenazate] = @Orig" +
                "inal_Bifenazate)) AND ((@IsNull_Bifenthrin = 1 AND [Bifenthrin] IS NULL) OR ([Bi" +
                "fenthrin] = @Original_Bifenthrin)) AND ((@IsNull_Boscalid = 1 AND [Boscalid] IS " +
                "NULL) OR ([Boscalid] = @Original_Boscalid)) AND ((@IsNull_Captan = 1 AND [Captan" +
                "] IS NULL) OR ([Captan] = @Original_Captan)) AND ((@IsNull_Carbaryl = 1 AND [Car" +
                "baryl] IS NULL) OR ([Carbaryl] = @Original_Carbaryl)) AND ((@IsNull_Carbofuran =" +
                " 1 AND [Carbofuran] IS NULL) OR ([Carbofuran] = @Original_Carbofuran)) AND ((@Is" +
                "Null_Chlorantranilprole = 1 AND [Chlorantranilprole] IS NULL) OR ([Chlorantranil" +
                "prole] = @Original_Chlorantranilprole)) AND ((@IsNull_Chlordane = 1 AND [Chlorda" +
                "ne] IS NULL) OR ([Chlordane] = @Original_Chlordane)) AND ((@IsNull_Chlorfenapyr " +
                "= 1 AND [Chlorfenapyr] IS NULL) OR ([Chlorfenapyr] = @Original_Chlorfenapyr)) AN" +
                "D ((@IsNull_Chlorpyrifos = 1 AND [Chlorpyrifos] IS NULL) OR ([Chlorpyrifos] = @O" +
                "riginal_Chlorpyrifos)) AND ((@IsNull_Clofentezine = 1 AND [Clofentezine] IS NULL" +
                ") OR ([Clofentezine] = @Original_Clofentezine)) AND ((@IsNull_Coumaphos = 1 AND " +
                "[Coumaphos] IS NULL) OR ([Coumaphos] = @Original_Coumaphos)) AND ((@IsNull_Cyflu" +
                "thrin = 1 AND [Cyfluthrin] IS NULL) OR ([Cyfluthrin] = @Original_Cyfluthrin)) AN" +
                "D ((@IsNull_Cypermethrin = 1 AND [Cypermethrin] IS NULL) OR ([Cypermethrin] = @O" +
                "riginal_Cypermethrin)) AND ((@IsNull_Daminozide = 1 AND [Daminozide] IS NULL) OR" +
                " ([Daminozide] = @Original_Daminozide)) AND ((@IsNull_Dichlorvos = 1 AND [Dichlo" +
                "rvos] IS NULL) OR ([Dichlorvos] = @Original_Dichlorvos)) AND ((@IsNull_Diazinon " +
                "= 1 AND [Diazinon] IS NULL) OR ([Diazinon] = @Original_Diazinon)) AND ((@IsNull_" +
                "Dimethoate = 1 AND [Dimethoate] IS NULL) OR ([Dimethoate] = @Original_Dimethoate" +
                ")) AND ((@IsNull_Dimethomorph = 1 AND [Dimethomorph] IS NULL) OR ([Dimethomorph]" +
                " = @Original_Dimethomorph)) AND ((@IsNull_Ethoprophos = 1 AND [Ethoprophos] IS N" +
                "ULL) OR ([Ethoprophos] = @Original_Ethoprophos)) AND ((@IsNull_Etofenprox = 1 AN" +
                "D [Etofenprox] IS NULL) OR ([Etofenprox] = @Original_Etofenprox)) AND ((@IsNull_" +
                "Etoxazole = 1 AND [Etoxazole] IS NULL) OR ([Etoxazole] = @Original_Etoxazole)) A" +
                "ND ((@IsNull_Fenhexamid = 1 AND [Fenhexamid] IS NULL) OR ([Fenhexamid] = @Origin" +
                "al_Fenhexamid)) AND ((@IsNull_Fenoxycarb = 1 AND [Fenoxycarb] IS NULL) OR ([Feno" +
                "xycarb] = @Original_Fenoxycarb)) AND ((@IsNull_Fenpyroximate = 1 AND [Fenpyroxim" +
                "ate] IS NULL) OR ([Fenpyroximate] = @Original_Fenpyroximate)) AND ((@IsNull_Fipr" +
                "onil = 1 AND [Fipronil] IS NULL) OR ([Fipronil] = @Original_Fipronil)) AND ((@Is" +
                "Null_Flonicamid = 1 AND [Flonicamid] IS NULL) OR ([Flonicamid] = @Original_Floni" +
                "camid)) AND ((@IsNull_Fludioxonil = 1 AND [Fludioxonil] IS NULL) OR ([Fludioxoni" +
                "l] = @Original_Fludioxonil)) AND ((@IsNull_Hexythiazox = 1 AND [Hexythiazox] IS " +
                "NULL) OR ([Hexythiazox] = @Original_Hexythiazox)) AND ((@IsNull_Imazalil = 1 AND" +
                " [Imazalil] IS NULL) OR ([Imazalil] = @Original_Imazalil)) AND ((@IsNull_Imidacl" +
                "oprid = 1 AND [Imidacloprid] IS NULL) OR ([Imidacloprid] = @Original_Imidaclopri" +
                "d)) AND ((@IsNull_KresoximMethyl = 1 AND [KresoximMethyl] IS NULL) OR ([Kresoxim" +
                "Methyl] = @Original_KresoximMethyl)) AND ((@IsNull_Malathion = 1 AND [Malathion]" +
                " IS NULL) OR ([Malathion] = @Original_Malathion)) AND ((@IsNull_Metalaxyl = 1 AN" +
                "D [Metalaxyl] IS NULL) OR ([Metalaxyl] = @Original_Metalaxyl)) AND ((@IsNull_Met" +
                "hiocarb = 1 AND [Methiocarb] IS NULL) OR ([Methiocarb] = @Original_Methiocarb)) " +
                "AND ((@IsNull_Methomyl = 1 AND [Methomyl] IS NULL) OR ([Methomyl] = @Original_Me" +
                "thomyl)) AND ((@IsNull_MethylParathion = 1 AND [MethylParathion] IS NULL) OR ([M" +
                "ethylParathion] = @Original_MethylParathion)) AND ((@IsNull_Mevinphos = 1 AND [M" +
                "evinphos] IS NULL) OR ([Mevinphos] = @Original_Mevinphos)) AND ((@IsNull_Myclobu" +
                "tanil = 1 AND [Myclobutanil] IS NULL) OR ([Myclobutanil] = @Original_Myclobutani" +
                "l)) AND ((@IsNull_Naled = 1 AND [Naled] IS NULL) OR ([Naled] = @Original_Naled))" +
                " AND ((@IsNull_Oxamyl = 1 AND [Oxamyl] IS NULL) OR ([Oxamyl] = @Original_Oxamyl)" +
                ") AND ((@IsNull_Pentachloronitrobenzene = 1 AND [Pentachloronitrobenzene] IS NUL" +
                "L) OR ([Pentachloronitrobenzene] = @Original_Pentachloronitrobenzene)) AND ((@Is" +
                "Null_Permethrins = 1 AND [Permethrins] IS NULL) OR ([Permethrins] = @Original_Pe" +
                "rmethrins)) AND ((@IsNull_Phosmet = 1 AND [Phosmet] IS NULL) OR ([Phosmet] = @Or" +
                "iginal_Phosmet)) AND ((@IsNull_PiperonylButoxide = 1 AND [PiperonylButoxide] IS " +
                "NULL) OR ([PiperonylButoxide] = @Original_PiperonylButoxide)) AND ((@IsNull_Pral" +
                "lethrin = 1 AND [Prallethrin] IS NULL) OR ([Prallethrin] = @Original_Prallethrin" +
                ")) AND ((@IsNull_Propiconazole = 1 AND [Propiconazole] IS NULL) OR ([Propiconazo" +
                "le] = @Original_Propiconazole)) AND ((@IsNull_Propoxur = 1 AND [Propoxur] IS NUL" +
                "L) OR ([Propoxur] = @Original_Propoxur)) AND ((@IsNull_Pyrethrins = 1 AND [Pyret" +
                "hrins] IS NULL) OR ([Pyrethrins] = @Original_Pyrethrins)) AND ((@IsNull_Pyridabe" +
                "n = 1 AND [Pyridaben] IS NULL) OR ([Pyridaben] = @Original_Pyridaben)) AND ((@Is" +
                "Null_SpinetoramJ = 1 AND [SpinetoramJ] IS NULL) OR ([SpinetoramJ] = @Original_Sp" +
                "inetoramJ)) AND ((@IsNull_SpinetoramL = 1 AND [SpinetoramL] IS NULL) OR ([Spinet" +
                "oramL] = @Original_SpinetoramL)) AND ((@IsNull_SpinosadA = 1 AND [SpinosadA] IS " +
                "NULL) OR ([SpinosadA] = @Original_SpinosadA)) AND ((@IsNull_SpinosadD = 1 AND [S" +
                "pinosadD] IS NULL) OR ([SpinosadD] = @Original_SpinosadD)) AND ((@IsNull_Spirome" +
                "sifen = 1 AND [Spiromesifen] IS NULL) OR ([Spiromesifen] = @Original_Spiromesife" +
                "n)) AND ((@IsNull_Spirotetramat = 1 AND [Spirotetramat] IS NULL) OR ([Spirotetra" +
                "mat] = @Original_Spirotetramat)) AND ((@IsNull_Spiroxamine = 1 AND [Spiroxamine]" +
                " IS NULL) OR ([Spiroxamine] = @Original_Spiroxamine)) AND ((@IsNull_Tebuconazole" +
                " = 1 AND [Tebuconazole] IS NULL) OR ([Tebuconazole] = @Original_Tebuconazole)) A" +
                "ND ((@IsNull_Thiacloprid = 1 AND [Thiacloprid] IS NULL) OR ([Thiacloprid] = @Ori" +
                "ginal_Thiacloprid)) AND ((@IsNull_Thiamethoxam = 1 AND [Thiamethoxam] IS NULL) O" +
                "R ([Thiamethoxam] = @Original_Thiamethoxam)) AND ((@IsNull_Trifloxystrobin = 1 A" +
                "ND [Trifloxystrobin] IS NULL) OR ([Trifloxystrobin] = @Original_Trifloxystrobin)" +
                "));\r\nSELECT Id, SampleID, LCMSID, GCMSID, PestInputWt, Abamectin, Acephate, Aceq" +
                "uinocyl, Acetamiprid, Aldicarb, Azoxystrobin, Bifenazate, Bifenthrin, Boscalid, " +
                "Captan, Carbaryl, Carbofuran, Chlorantranilprole, Chlordane, Chlorfenapyr, Chlor" +
                "pyrifos, Clofentezine, Coumaphos, Cyfluthrin, Cypermethrin, Daminozide, Dichlorv" +
                "os, Diazinon, Dimethoate, Dimethomorph, Ethoprophos, Etofenprox, Etoxazole, Fenh" +
                "examid, Fenoxycarb, Fenpyroximate, Fipronil, Flonicamid, Fludioxonil, Hexythiazo" +
                "x, Imazalil, Imidacloprid, KresoximMethyl, Malathion, Metalaxyl, Methiocarb, Met" +
                "homyl, MethylParathion, Mevinphos, Myclobutanil, Naled, Oxamyl, Pentachloronitro" +
                "benzene, Permethrins, Phosmet, PiperonylButoxide, Prallethrin, Propiconazole, Pr" +
                "opoxur, Pyrethrins, Pyridaben, SpinetoramJ, SpinetoramL, SpinosadA, SpinosadD, S" +
                "piromesifen, Spirotetramat, Spiroxamine, Tebuconazole, Thiacloprid, Thiamethoxam" +
                ", Trifloxystrobin FROM PesticidesDATA WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PestInputWt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Abamectin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acephate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acequinocyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetamiprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aldicarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Azoxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bifenazate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bifenthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Boscalid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Captan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carbaryl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carbofuran", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorantranilprole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlordane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorfenapyr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chlorpyrifos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clofentezine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coumaphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cyfluthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cypermethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Daminozide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dichlorvos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diazinon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimethoate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimethomorph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ethoprophos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etofenprox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etoxazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenhexamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenoxycarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fenpyroximate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fipronil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flonicamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fludioxonil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hexythiazox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imazalil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imidacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KresoximMethyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Malathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Metalaxyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methiocarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methomyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethylParathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mevinphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Myclobutanil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Naled", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxamyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pentachloronitrobenzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Permethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phosmet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiperonylButoxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prallethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propiconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propoxur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pyrethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pyridaben", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinetoramJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinetoramL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinosadA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpinosadD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spiromesifen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spirotetramat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spiroxamine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tebuconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thiacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thiamethoxam", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trifloxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PestInputWt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PestInputWt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PestInputWt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Abamectin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Abamectin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abamectin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acephate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acephate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acephate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acequinocyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acequinocyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acequinocyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Acetamiprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Acetamiprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetamiprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aldicarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aldicarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aldicarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Azoxystrobin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Azoxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Azoxystrobin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bifenazate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bifenazate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenazate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bifenthrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bifenthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bifenthrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Boscalid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Boscalid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Boscalid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Captan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Captan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carbaryl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carbaryl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbaryl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carbofuran", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carbofuran", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carbofuran", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorantranilprole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorantranilprole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorantranilprole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlordane", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlordane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlordane", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorfenapyr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorfenapyr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorfenapyr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chlorpyrifos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chlorpyrifos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chlorpyrifos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clofentezine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clofentezine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clofentezine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coumaphos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coumaphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coumaphos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cyfluthrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cyfluthrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cyfluthrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cypermethrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cypermethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cypermethrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Daminozide", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Daminozide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Daminozide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dichlorvos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dichlorvos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichlorvos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diazinon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diazinon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diazinon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dimethoate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimethoate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethoate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dimethomorph", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dimethomorph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimethomorph", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ethoprophos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ethoprophos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethoprophos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Etofenprox", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etofenprox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etofenprox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Etoxazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etoxazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etoxazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenhexamid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenhexamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenhexamid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenoxycarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenoxycarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenoxycarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fenpyroximate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fenpyroximate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fenpyroximate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fipronil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fipronil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fipronil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flonicamid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flonicamid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flonicamid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fludioxonil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fludioxonil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fludioxonil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Hexythiazox", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hexythiazox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexythiazox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Imazalil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Imazalil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imazalil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Imidacloprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Imidacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imidacloprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KresoximMethyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KresoximMethyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KresoximMethyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Malathion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Malathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Malathion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Metalaxyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Metalaxyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Metalaxyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Methiocarb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Methiocarb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methiocarb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Methomyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Methomyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methomyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MethylParathion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MethylParathion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethylParathion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mevinphos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mevinphos", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mevinphos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Myclobutanil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Myclobutanil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myclobutanil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Naled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Naled", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxamyl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxamyl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxamyl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pentachloronitrobenzene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pentachloronitrobenzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentachloronitrobenzene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Permethrins", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Permethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permethrins", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phosmet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phosmet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phosmet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PiperonylButoxide", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiperonylButoxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiperonylButoxide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Prallethrin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Prallethrin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prallethrin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Propiconazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Propiconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propiconazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Propoxur", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Propoxur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propoxur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pyrethrins", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pyrethrins", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyrethrins", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pyridaben", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pyridaben", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pyridaben", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinetoramJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinetoramJ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinetoramL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinetoramL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinetoramL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinosadA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinosadA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpinosadD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpinosadD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpinosadD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spiromesifen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spiromesifen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiromesifen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spirotetramat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spirotetramat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spirotetramat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spiroxamine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spiroxamine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spiroxamine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tebuconazole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tebuconazole", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tebuconazole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thiacloprid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thiacloprid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiacloprid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thiamethoxam", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thiamethoxam", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thiamethoxam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Trifloxystrobin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trifloxystrobin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trifloxystrobin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, SampleID, LCMSID, GCMSID, PestInputWt, Abamectin, Acephate, Acequinocyl, Acetamiprid, Aldicarb, Azoxystrobin, Bifenazate, Bifenthrin, Boscalid, Captan, Carbaryl, Carbofuran, Chlorantranilprole, Chlordane, Chlorfenapyr, Chlorpyrifos, Clofentezine, Coumaphos, Cyfluthrin, Cypermethrin, Daminozide, Dichlorvos, Diazinon, Dimethoate, Dimethomorph, Ethoprophos, Etofenprox, Etoxazole, Fenhexamid, Fenoxycarb, Fenpyroximate, Fipronil, Flonicamid, Fludioxonil, Hexythiazox, Imazalil, Imidacloprid, KresoximMethyl, Malathion, Metalaxyl, Methiocarb, Methomyl, MethylParathion, Mevinphos, Myclobutanil, Naled, Oxamyl, Pentachloronitrobenzene, Permethrins, Phosmet, PiperonylButoxide, Prallethrin, Propiconazole, Propoxur, Pyrethrins, Pyridaben, SpinetoramJ, SpinetoramL, SpinosadA, SpinosadD, Spiromesifen, Spirotetramat, Spiroxamine, Tebuconazole, Thiacloprid, Thiamethoxam, Trifloxystrobin FROM dbo.PesticidesDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.PesticidesDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.PesticidesDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.PesticidesDATADataTable dataTable = new fullDATASET.PesticidesDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.PesticidesDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "PesticidesDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_SampleID, 
                    string Original_LCMSID, 
                    string Original_GCMSID, 
                    string Original_PestInputWt, 
                    string Original_Abamectin, 
                    string Original_Acephate, 
                    string Original_Acequinocyl, 
                    string Original_Acetamiprid, 
                    string Original_Aldicarb, 
                    string Original_Azoxystrobin, 
                    string Original_Bifenazate, 
                    string Original_Bifenthrin, 
                    string Original_Boscalid, 
                    string Original_Captan, 
                    string Original_Carbaryl, 
                    string Original_Carbofuran, 
                    string Original_Chlorantranilprole, 
                    string Original_Chlordane, 
                    string Original_Chlorfenapyr, 
                    string Original_Chlorpyrifos, 
                    string Original_Clofentezine, 
                    string Original_Coumaphos, 
                    string Original_Cyfluthrin, 
                    string Original_Cypermethrin, 
                    string Original_Daminozide, 
                    string Original_Dichlorvos, 
                    string Original_Diazinon, 
                    string Original_Dimethoate, 
                    string Original_Dimethomorph, 
                    string Original_Ethoprophos, 
                    string Original_Etofenprox, 
                    string Original_Etoxazole, 
                    string Original_Fenhexamid, 
                    string Original_Fenoxycarb, 
                    string Original_Fenpyroximate, 
                    string Original_Fipronil, 
                    string Original_Flonicamid, 
                    string Original_Fludioxonil, 
                    string Original_Hexythiazox, 
                    string Original_Imazalil, 
                    string Original_Imidacloprid, 
                    string Original_KresoximMethyl, 
                    string Original_Malathion, 
                    string Original_Metalaxyl, 
                    string Original_Methiocarb, 
                    string Original_Methomyl, 
                    string Original_MethylParathion, 
                    string Original_Mevinphos, 
                    string Original_Myclobutanil, 
                    string Original_Naled, 
                    string Original_Oxamyl, 
                    string Original_Pentachloronitrobenzene, 
                    string Original_Permethrins, 
                    string Original_Phosmet, 
                    string Original_PiperonylButoxide, 
                    string Original_Prallethrin, 
                    string Original_Propiconazole, 
                    string Original_Propoxur, 
                    string Original_Pyrethrins, 
                    string Original_Pyridaben, 
                    string Original_SpinetoramJ, 
                    string Original_SpinetoramL, 
                    string Original_SpinosadA, 
                    string Original_SpinosadD, 
                    string Original_Spiromesifen, 
                    string Original_Spirotetramat, 
                    string Original_Spiroxamine, 
                    string Original_Tebuconazole, 
                    string Original_Thiacloprid, 
                    string Original_Thiamethoxam, 
                    string Original_Trifloxystrobin) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_SampleID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SampleID));
            }
            if ((Original_LCMSID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LCMSID));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GCMSID));
            }
            if ((Original_PestInputWt == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PestInputWt));
            }
            if ((Original_Abamectin == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Abamectin));
            }
            if ((Original_Acephate == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Acephate));
            }
            if ((Original_Acequinocyl == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Acequinocyl));
            }
            if ((Original_Acetamiprid == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Acetamiprid));
            }
            if ((Original_Aldicarb == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Aldicarb));
            }
            if ((Original_Azoxystrobin == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Azoxystrobin));
            }
            if ((Original_Bifenazate == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Bifenazate));
            }
            if ((Original_Bifenthrin == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Bifenthrin));
            }
            if ((Original_Boscalid == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Boscalid));
            }
            if ((Original_Captan == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Captan));
            }
            if ((Original_Carbaryl == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Carbaryl));
            }
            if ((Original_Carbofuran == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Carbofuran));
            }
            if ((Original_Chlorantranilprole == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Chlorantranilprole));
            }
            if ((Original_Chlordane == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Chlordane));
            }
            if ((Original_Chlorfenapyr == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Chlorfenapyr));
            }
            if ((Original_Chlorpyrifos == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_Chlorpyrifos));
            }
            if ((Original_Clofentezine == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_Clofentezine));
            }
            if ((Original_Coumaphos == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Coumaphos));
            }
            if ((Original_Cyfluthrin == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_Cyfluthrin));
            }
            if ((Original_Cypermethrin == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Cypermethrin));
            }
            if ((Original_Daminozide == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_Daminozide));
            }
            if ((Original_Dichlorvos == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_Dichlorvos));
            }
            if ((Original_Diazinon == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_Diazinon));
            }
            if ((Original_Dimethoate == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_Dimethoate));
            }
            if ((Original_Dimethomorph == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_Dimethomorph));
            }
            if ((Original_Ethoprophos == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Ethoprophos));
            }
            if ((Original_Etofenprox == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Etofenprox));
            }
            if ((Original_Etoxazole == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_Etoxazole));
            }
            if ((Original_Fenhexamid == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_Fenhexamid));
            }
            if ((Original_Fenoxycarb == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_Fenoxycarb));
            }
            if ((Original_Fenpyroximate == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_Fenpyroximate));
            }
            if ((Original_Fipronil == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_Fipronil));
            }
            if ((Original_Flonicamid == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_Flonicamid));
            }
            if ((Original_Fludioxonil == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_Fludioxonil));
            }
            if ((Original_Hexythiazox == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_Hexythiazox));
            }
            if ((Original_Imazalil == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_Imazalil));
            }
            if ((Original_Imidacloprid == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_Imidacloprid));
            }
            if ((Original_KresoximMethyl == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_KresoximMethyl));
            }
            if ((Original_Malathion == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_Malathion));
            }
            if ((Original_Metalaxyl == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_Metalaxyl));
            }
            if ((Original_Methiocarb == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_Methiocarb));
            }
            if ((Original_Methomyl == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_Methomyl));
            }
            if ((Original_MethylParathion == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_MethylParathion));
            }
            if ((Original_Mevinphos == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_Mevinphos));
            }
            if ((Original_Myclobutanil == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_Myclobutanil));
            }
            if ((Original_Naled == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_Naled));
            }
            if ((Original_Oxamyl == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_Oxamyl));
            }
            if ((Original_Pentachloronitrobenzene == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_Pentachloronitrobenzene));
            }
            if ((Original_Permethrins == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_Permethrins));
            }
            if ((Original_Phosmet == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_Phosmet));
            }
            if ((Original_PiperonylButoxide == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_PiperonylButoxide));
            }
            if ((Original_Prallethrin == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_Prallethrin));
            }
            if ((Original_Propiconazole == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_Propiconazole));
            }
            if ((Original_Propoxur == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_Propoxur));
            }
            if ((Original_Pyrethrins == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_Pyrethrins));
            }
            if ((Original_Pyridaben == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_Pyridaben));
            }
            if ((Original_SpinetoramJ == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_SpinetoramJ));
            }
            if ((Original_SpinetoramL == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_SpinetoramL));
            }
            if ((Original_SpinosadA == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_SpinosadA));
            }
            if ((Original_SpinosadD == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_SpinosadD));
            }
            if ((Original_Spiromesifen == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_Spiromesifen));
            }
            if ((Original_Spirotetramat == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_Spirotetramat));
            }
            if ((Original_Spiroxamine == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_Spiroxamine));
            }
            if ((Original_Tebuconazole == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_Tebuconazole));
            }
            if ((Original_Thiacloprid == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_Thiacloprid));
            }
            if ((Original_Thiamethoxam == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_Thiamethoxam));
            }
            if ((Original_Trifloxystrobin == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_Trifloxystrobin));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SampleID, 
                    string LCMSID, 
                    string GCMSID, 
                    string PestInputWt, 
                    string Abamectin, 
                    string Acephate, 
                    string Acequinocyl, 
                    string Acetamiprid, 
                    string Aldicarb, 
                    string Azoxystrobin, 
                    string Bifenazate, 
                    string Bifenthrin, 
                    string Boscalid, 
                    string Captan, 
                    string Carbaryl, 
                    string Carbofuran, 
                    string Chlorantranilprole, 
                    string Chlordane, 
                    string Chlorfenapyr, 
                    string Chlorpyrifos, 
                    string Clofentezine, 
                    string Coumaphos, 
                    string Cyfluthrin, 
                    string Cypermethrin, 
                    string Daminozide, 
                    string Dichlorvos, 
                    string Diazinon, 
                    string Dimethoate, 
                    string Dimethomorph, 
                    string Ethoprophos, 
                    string Etofenprox, 
                    string Etoxazole, 
                    string Fenhexamid, 
                    string Fenoxycarb, 
                    string Fenpyroximate, 
                    string Fipronil, 
                    string Flonicamid, 
                    string Fludioxonil, 
                    string Hexythiazox, 
                    string Imazalil, 
                    string Imidacloprid, 
                    string KresoximMethyl, 
                    string Malathion, 
                    string Metalaxyl, 
                    string Methiocarb, 
                    string Methomyl, 
                    string MethylParathion, 
                    string Mevinphos, 
                    string Myclobutanil, 
                    string Naled, 
                    string Oxamyl, 
                    string Pentachloronitrobenzene, 
                    string Permethrins, 
                    string Phosmet, 
                    string PiperonylButoxide, 
                    string Prallethrin, 
                    string Propiconazole, 
                    string Propoxur, 
                    string Pyrethrins, 
                    string Pyridaben, 
                    string SpinetoramJ, 
                    string SpinetoramL, 
                    string SpinosadA, 
                    string SpinosadD, 
                    string Spiromesifen, 
                    string Spirotetramat, 
                    string Spiroxamine, 
                    string Tebuconazole, 
                    string Thiacloprid, 
                    string Thiamethoxam, 
                    string Trifloxystrobin) {
            if ((SampleID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SampleID));
            }
            if ((LCMSID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LCMSID));
            }
            if ((GCMSID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GCMSID));
            }
            if ((PestInputWt == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PestInputWt));
            }
            if ((Abamectin == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Abamectin));
            }
            if ((Acephate == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Acephate));
            }
            if ((Acequinocyl == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Acequinocyl));
            }
            if ((Acetamiprid == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Acetamiprid));
            }
            if ((Aldicarb == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Aldicarb));
            }
            if ((Azoxystrobin == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Azoxystrobin));
            }
            if ((Bifenazate == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Bifenazate));
            }
            if ((Bifenthrin == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Bifenthrin));
            }
            if ((Boscalid == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Boscalid));
            }
            if ((Captan == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Captan));
            }
            if ((Carbaryl == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Carbaryl));
            }
            if ((Carbofuran == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Carbofuran));
            }
            if ((Chlorantranilprole == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Chlorantranilprole));
            }
            if ((Chlordane == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Chlordane));
            }
            if ((Chlorfenapyr == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Chlorfenapyr));
            }
            if ((Chlorpyrifos == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Chlorpyrifos));
            }
            if ((Clofentezine == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Clofentezine));
            }
            if ((Coumaphos == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Coumaphos));
            }
            if ((Cyfluthrin == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Cyfluthrin));
            }
            if ((Cypermethrin == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Cypermethrin));
            }
            if ((Daminozide == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Daminozide));
            }
            if ((Dichlorvos == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Dichlorvos));
            }
            if ((Diazinon == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Diazinon));
            }
            if ((Dimethoate == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Dimethoate));
            }
            if ((Dimethomorph == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Dimethomorph));
            }
            if ((Ethoprophos == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Ethoprophos));
            }
            if ((Etofenprox == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Etofenprox));
            }
            if ((Etoxazole == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Etoxazole));
            }
            if ((Fenhexamid == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Fenhexamid));
            }
            if ((Fenoxycarb == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Fenoxycarb));
            }
            if ((Fenpyroximate == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Fenpyroximate));
            }
            if ((Fipronil == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Fipronil));
            }
            if ((Flonicamid == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Flonicamid));
            }
            if ((Fludioxonil == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Fludioxonil));
            }
            if ((Hexythiazox == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Hexythiazox));
            }
            if ((Imazalil == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Imazalil));
            }
            if ((Imidacloprid == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Imidacloprid));
            }
            if ((KresoximMethyl == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(KresoximMethyl));
            }
            if ((Malathion == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Malathion));
            }
            if ((Metalaxyl == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Metalaxyl));
            }
            if ((Methiocarb == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(Methiocarb));
            }
            if ((Methomyl == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Methomyl));
            }
            if ((MethylParathion == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(MethylParathion));
            }
            if ((Mevinphos == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Mevinphos));
            }
            if ((Myclobutanil == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Myclobutanil));
            }
            if ((Naled == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Naled));
            }
            if ((Oxamyl == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Oxamyl));
            }
            if ((Pentachloronitrobenzene == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Pentachloronitrobenzene));
            }
            if ((Permethrins == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(Permethrins));
            }
            if ((Phosmet == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(Phosmet));
            }
            if ((PiperonylButoxide == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(PiperonylButoxide));
            }
            if ((Prallethrin == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(Prallethrin));
            }
            if ((Propiconazole == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(Propiconazole));
            }
            if ((Propoxur == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(Propoxur));
            }
            if ((Pyrethrins == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(Pyrethrins));
            }
            if ((Pyridaben == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(Pyridaben));
            }
            if ((SpinetoramJ == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(SpinetoramJ));
            }
            if ((SpinetoramL == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(SpinetoramL));
            }
            if ((SpinosadA == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(SpinosadA));
            }
            if ((SpinosadD == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(SpinosadD));
            }
            if ((Spiromesifen == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(Spiromesifen));
            }
            if ((Spirotetramat == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(Spirotetramat));
            }
            if ((Spiroxamine == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(Spiroxamine));
            }
            if ((Tebuconazole == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(Tebuconazole));
            }
            if ((Thiacloprid == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(Thiacloprid));
            }
            if ((Thiamethoxam == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(Thiamethoxam));
            }
            if ((Trifloxystrobin == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(Trifloxystrobin));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SampleID, 
                    string LCMSID, 
                    string GCMSID, 
                    string PestInputWt, 
                    string Abamectin, 
                    string Acephate, 
                    string Acequinocyl, 
                    string Acetamiprid, 
                    string Aldicarb, 
                    string Azoxystrobin, 
                    string Bifenazate, 
                    string Bifenthrin, 
                    string Boscalid, 
                    string Captan, 
                    string Carbaryl, 
                    string Carbofuran, 
                    string Chlorantranilprole, 
                    string Chlordane, 
                    string Chlorfenapyr, 
                    string Chlorpyrifos, 
                    string Clofentezine, 
                    string Coumaphos, 
                    string Cyfluthrin, 
                    string Cypermethrin, 
                    string Daminozide, 
                    string Dichlorvos, 
                    string Diazinon, 
                    string Dimethoate, 
                    string Dimethomorph, 
                    string Ethoprophos, 
                    string Etofenprox, 
                    string Etoxazole, 
                    string Fenhexamid, 
                    string Fenoxycarb, 
                    string Fenpyroximate, 
                    string Fipronil, 
                    string Flonicamid, 
                    string Fludioxonil, 
                    string Hexythiazox, 
                    string Imazalil, 
                    string Imidacloprid, 
                    string KresoximMethyl, 
                    string Malathion, 
                    string Metalaxyl, 
                    string Methiocarb, 
                    string Methomyl, 
                    string MethylParathion, 
                    string Mevinphos, 
                    string Myclobutanil, 
                    string Naled, 
                    string Oxamyl, 
                    string Pentachloronitrobenzene, 
                    string Permethrins, 
                    string Phosmet, 
                    string PiperonylButoxide, 
                    string Prallethrin, 
                    string Propiconazole, 
                    string Propoxur, 
                    string Pyrethrins, 
                    string Pyridaben, 
                    string SpinetoramJ, 
                    string SpinetoramL, 
                    string SpinosadA, 
                    string SpinosadD, 
                    string Spiromesifen, 
                    string Spirotetramat, 
                    string Spiroxamine, 
                    string Tebuconazole, 
                    string Thiacloprid, 
                    string Thiamethoxam, 
                    string Trifloxystrobin, 
                    int Original_Id, 
                    string Original_SampleID, 
                    string Original_LCMSID, 
                    string Original_GCMSID, 
                    string Original_PestInputWt, 
                    string Original_Abamectin, 
                    string Original_Acephate, 
                    string Original_Acequinocyl, 
                    string Original_Acetamiprid, 
                    string Original_Aldicarb, 
                    string Original_Azoxystrobin, 
                    string Original_Bifenazate, 
                    string Original_Bifenthrin, 
                    string Original_Boscalid, 
                    string Original_Captan, 
                    string Original_Carbaryl, 
                    string Original_Carbofuran, 
                    string Original_Chlorantranilprole, 
                    string Original_Chlordane, 
                    string Original_Chlorfenapyr, 
                    string Original_Chlorpyrifos, 
                    string Original_Clofentezine, 
                    string Original_Coumaphos, 
                    string Original_Cyfluthrin, 
                    string Original_Cypermethrin, 
                    string Original_Daminozide, 
                    string Original_Dichlorvos, 
                    string Original_Diazinon, 
                    string Original_Dimethoate, 
                    string Original_Dimethomorph, 
                    string Original_Ethoprophos, 
                    string Original_Etofenprox, 
                    string Original_Etoxazole, 
                    string Original_Fenhexamid, 
                    string Original_Fenoxycarb, 
                    string Original_Fenpyroximate, 
                    string Original_Fipronil, 
                    string Original_Flonicamid, 
                    string Original_Fludioxonil, 
                    string Original_Hexythiazox, 
                    string Original_Imazalil, 
                    string Original_Imidacloprid, 
                    string Original_KresoximMethyl, 
                    string Original_Malathion, 
                    string Original_Metalaxyl, 
                    string Original_Methiocarb, 
                    string Original_Methomyl, 
                    string Original_MethylParathion, 
                    string Original_Mevinphos, 
                    string Original_Myclobutanil, 
                    string Original_Naled, 
                    string Original_Oxamyl, 
                    string Original_Pentachloronitrobenzene, 
                    string Original_Permethrins, 
                    string Original_Phosmet, 
                    string Original_PiperonylButoxide, 
                    string Original_Prallethrin, 
                    string Original_Propiconazole, 
                    string Original_Propoxur, 
                    string Original_Pyrethrins, 
                    string Original_Pyridaben, 
                    string Original_SpinetoramJ, 
                    string Original_SpinetoramL, 
                    string Original_SpinosadA, 
                    string Original_SpinosadD, 
                    string Original_Spiromesifen, 
                    string Original_Spirotetramat, 
                    string Original_Spiroxamine, 
                    string Original_Tebuconazole, 
                    string Original_Thiacloprid, 
                    string Original_Thiamethoxam, 
                    string Original_Trifloxystrobin, 
                    int Id) {
            if ((SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SampleID));
            }
            if ((LCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LCMSID));
            }
            if ((GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GCMSID));
            }
            if ((PestInputWt == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PestInputWt));
            }
            if ((Abamectin == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Abamectin));
            }
            if ((Acephate == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Acephate));
            }
            if ((Acequinocyl == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Acequinocyl));
            }
            if ((Acetamiprid == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Acetamiprid));
            }
            if ((Aldicarb == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Aldicarb));
            }
            if ((Azoxystrobin == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Azoxystrobin));
            }
            if ((Bifenazate == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Bifenazate));
            }
            if ((Bifenthrin == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Bifenthrin));
            }
            if ((Boscalid == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Boscalid));
            }
            if ((Captan == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Captan));
            }
            if ((Carbaryl == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Carbaryl));
            }
            if ((Carbofuran == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Carbofuran));
            }
            if ((Chlorantranilprole == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Chlorantranilprole));
            }
            if ((Chlordane == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Chlordane));
            }
            if ((Chlorfenapyr == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Chlorfenapyr));
            }
            if ((Chlorpyrifos == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Chlorpyrifos));
            }
            if ((Clofentezine == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Clofentezine));
            }
            if ((Coumaphos == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Coumaphos));
            }
            if ((Cyfluthrin == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Cyfluthrin));
            }
            if ((Cypermethrin == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Cypermethrin));
            }
            if ((Daminozide == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Daminozide));
            }
            if ((Dichlorvos == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Dichlorvos));
            }
            if ((Diazinon == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Diazinon));
            }
            if ((Dimethoate == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Dimethoate));
            }
            if ((Dimethomorph == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Dimethomorph));
            }
            if ((Ethoprophos == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Ethoprophos));
            }
            if ((Etofenprox == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Etofenprox));
            }
            if ((Etoxazole == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Etoxazole));
            }
            if ((Fenhexamid == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Fenhexamid));
            }
            if ((Fenoxycarb == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Fenoxycarb));
            }
            if ((Fenpyroximate == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Fenpyroximate));
            }
            if ((Fipronil == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Fipronil));
            }
            if ((Flonicamid == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Flonicamid));
            }
            if ((Fludioxonil == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Fludioxonil));
            }
            if ((Hexythiazox == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Hexythiazox));
            }
            if ((Imazalil == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Imazalil));
            }
            if ((Imidacloprid == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Imidacloprid));
            }
            if ((KresoximMethyl == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(KresoximMethyl));
            }
            if ((Malathion == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Malathion));
            }
            if ((Metalaxyl == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Metalaxyl));
            }
            if ((Methiocarb == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Methiocarb));
            }
            if ((Methomyl == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Methomyl));
            }
            if ((MethylParathion == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(MethylParathion));
            }
            if ((Mevinphos == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Mevinphos));
            }
            if ((Myclobutanil == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Myclobutanil));
            }
            if ((Naled == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Naled));
            }
            if ((Oxamyl == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Oxamyl));
            }
            if ((Pentachloronitrobenzene == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Pentachloronitrobenzene));
            }
            if ((Permethrins == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Permethrins));
            }
            if ((Phosmet == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Phosmet));
            }
            if ((PiperonylButoxide == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(PiperonylButoxide));
            }
            if ((Prallethrin == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Prallethrin));
            }
            if ((Propiconazole == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Propiconazole));
            }
            if ((Propoxur == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Propoxur));
            }
            if ((Pyrethrins == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Pyrethrins));
            }
            if ((Pyridaben == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Pyridaben));
            }
            if ((SpinetoramJ == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(SpinetoramJ));
            }
            if ((SpinetoramL == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(SpinetoramL));
            }
            if ((SpinosadA == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(SpinosadA));
            }
            if ((SpinosadD == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(SpinosadD));
            }
            if ((Spiromesifen == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Spiromesifen));
            }
            if ((Spirotetramat == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Spirotetramat));
            }
            if ((Spiroxamine == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Spiroxamine));
            }
            if ((Tebuconazole == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Tebuconazole));
            }
            if ((Thiacloprid == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Thiacloprid));
            }
            if ((Thiamethoxam == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Thiamethoxam));
            }
            if ((Trifloxystrobin == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Trifloxystrobin));
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_Id));
            if ((Original_SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_SampleID));
            }
            if ((Original_LCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_LCMSID));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_GCMSID));
            }
            if ((Original_PestInputWt == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_PestInputWt));
            }
            if ((Original_Abamectin == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_Abamectin));
            }
            if ((Original_Acephate == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Acephate));
            }
            if ((Original_Acequinocyl == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_Acequinocyl));
            }
            if ((Original_Acetamiprid == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Acetamiprid));
            }
            if ((Original_Aldicarb == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_Aldicarb));
            }
            if ((Original_Azoxystrobin == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_Azoxystrobin));
            }
            if ((Original_Bifenazate == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Bifenazate));
            }
            if ((Original_Bifenthrin == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_Bifenthrin));
            }
            if ((Original_Boscalid == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_Boscalid));
            }
            if ((Original_Captan == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_Captan));
            }
            if ((Original_Carbaryl == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_Carbaryl));
            }
            if ((Original_Carbofuran == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_Carbofuran));
            }
            if ((Original_Chlorantranilprole == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_Chlorantranilprole));
            }
            if ((Original_Chlordane == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_Chlordane));
            }
            if ((Original_Chlorfenapyr == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_Chlorfenapyr));
            }
            if ((Original_Chlorpyrifos == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_Chlorpyrifos));
            }
            if ((Original_Clofentezine == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_Clofentezine));
            }
            if ((Original_Coumaphos == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_Coumaphos));
            }
            if ((Original_Cyfluthrin == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_Cyfluthrin));
            }
            if ((Original_Cypermethrin == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_Cypermethrin));
            }
            if ((Original_Daminozide == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_Daminozide));
            }
            if ((Original_Dichlorvos == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_Dichlorvos));
            }
            if ((Original_Diazinon == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_Diazinon));
            }
            if ((Original_Dimethoate == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_Dimethoate));
            }
            if ((Original_Dimethomorph == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_Dimethomorph));
            }
            if ((Original_Ethoprophos == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_Ethoprophos));
            }
            if ((Original_Etofenprox == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_Etofenprox));
            }
            if ((Original_Etoxazole == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_Etoxazole));
            }
            if ((Original_Fenhexamid == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_Fenhexamid));
            }
            if ((Original_Fenoxycarb == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_Fenoxycarb));
            }
            if ((Original_Fenpyroximate == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_Fenpyroximate));
            }
            if ((Original_Fipronil == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_Fipronil));
            }
            if ((Original_Flonicamid == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_Flonicamid));
            }
            if ((Original_Fludioxonil == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_Fludioxonil));
            }
            if ((Original_Hexythiazox == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_Hexythiazox));
            }
            if ((Original_Imazalil == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_Imazalil));
            }
            if ((Original_Imidacloprid == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_Imidacloprid));
            }
            if ((Original_KresoximMethyl == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_KresoximMethyl));
            }
            if ((Original_Malathion == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_Malathion));
            }
            if ((Original_Metalaxyl == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_Metalaxyl));
            }
            if ((Original_Methiocarb == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_Methiocarb));
            }
            if ((Original_Methomyl == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_Methomyl));
            }
            if ((Original_MethylParathion == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_MethylParathion));
            }
            if ((Original_Mevinphos == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_Mevinphos));
            }
            if ((Original_Myclobutanil == null)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((string)(Original_Myclobutanil));
            }
            if ((Original_Naled == null)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((string)(Original_Naled));
            }
            if ((Original_Oxamyl == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_Oxamyl));
            }
            if ((Original_Pentachloronitrobenzene == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_Pentachloronitrobenzene));
            }
            if ((Original_Permethrins == null)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((string)(Original_Permethrins));
            }
            if ((Original_Phosmet == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((string)(Original_Phosmet));
            }
            if ((Original_PiperonylButoxide == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((string)(Original_PiperonylButoxide));
            }
            if ((Original_Prallethrin == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_Prallethrin));
            }
            if ((Original_Propiconazole == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_Propiconazole));
            }
            if ((Original_Propoxur == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_Propoxur));
            }
            if ((Original_Pyrethrins == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_Pyrethrins));
            }
            if ((Original_Pyridaben == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_Pyridaben));
            }
            if ((Original_SpinetoramJ == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_SpinetoramJ));
            }
            if ((Original_SpinetoramL == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(Original_SpinetoramL));
            }
            if ((Original_SpinosadA == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_SpinosadA));
            }
            if ((Original_SpinosadD == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_SpinosadD));
            }
            if ((Original_Spiromesifen == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((string)(Original_Spiromesifen));
            }
            if ((Original_Spirotetramat == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((string)(Original_Spirotetramat));
            }
            if ((Original_Spiroxamine == null)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((string)(Original_Spiroxamine));
            }
            if ((Original_Tebuconazole == null)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((string)(Original_Tebuconazole));
            }
            if ((Original_Thiacloprid == null)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((string)(Original_Thiacloprid));
            }
            if ((Original_Thiamethoxam == null)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((string)(Original_Thiamethoxam));
            }
            if ((Original_Trifloxystrobin == null)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((string)(Original_Trifloxystrobin));
            }
            this.Adapter.UpdateCommand.Parameters[214].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SampleID, 
                    string LCMSID, 
                    string GCMSID, 
                    string PestInputWt, 
                    string Abamectin, 
                    string Acephate, 
                    string Acequinocyl, 
                    string Acetamiprid, 
                    string Aldicarb, 
                    string Azoxystrobin, 
                    string Bifenazate, 
                    string Bifenthrin, 
                    string Boscalid, 
                    string Captan, 
                    string Carbaryl, 
                    string Carbofuran, 
                    string Chlorantranilprole, 
                    string Chlordane, 
                    string Chlorfenapyr, 
                    string Chlorpyrifos, 
                    string Clofentezine, 
                    string Coumaphos, 
                    string Cyfluthrin, 
                    string Cypermethrin, 
                    string Daminozide, 
                    string Dichlorvos, 
                    string Diazinon, 
                    string Dimethoate, 
                    string Dimethomorph, 
                    string Ethoprophos, 
                    string Etofenprox, 
                    string Etoxazole, 
                    string Fenhexamid, 
                    string Fenoxycarb, 
                    string Fenpyroximate, 
                    string Fipronil, 
                    string Flonicamid, 
                    string Fludioxonil, 
                    string Hexythiazox, 
                    string Imazalil, 
                    string Imidacloprid, 
                    string KresoximMethyl, 
                    string Malathion, 
                    string Metalaxyl, 
                    string Methiocarb, 
                    string Methomyl, 
                    string MethylParathion, 
                    string Mevinphos, 
                    string Myclobutanil, 
                    string Naled, 
                    string Oxamyl, 
                    string Pentachloronitrobenzene, 
                    string Permethrins, 
                    string Phosmet, 
                    string PiperonylButoxide, 
                    string Prallethrin, 
                    string Propiconazole, 
                    string Propoxur, 
                    string Pyrethrins, 
                    string Pyridaben, 
                    string SpinetoramJ, 
                    string SpinetoramL, 
                    string SpinosadA, 
                    string SpinosadD, 
                    string Spiromesifen, 
                    string Spirotetramat, 
                    string Spiroxamine, 
                    string Tebuconazole, 
                    string Thiacloprid, 
                    string Thiamethoxam, 
                    string Trifloxystrobin, 
                    int Original_Id, 
                    string Original_SampleID, 
                    string Original_LCMSID, 
                    string Original_GCMSID, 
                    string Original_PestInputWt, 
                    string Original_Abamectin, 
                    string Original_Acephate, 
                    string Original_Acequinocyl, 
                    string Original_Acetamiprid, 
                    string Original_Aldicarb, 
                    string Original_Azoxystrobin, 
                    string Original_Bifenazate, 
                    string Original_Bifenthrin, 
                    string Original_Boscalid, 
                    string Original_Captan, 
                    string Original_Carbaryl, 
                    string Original_Carbofuran, 
                    string Original_Chlorantranilprole, 
                    string Original_Chlordane, 
                    string Original_Chlorfenapyr, 
                    string Original_Chlorpyrifos, 
                    string Original_Clofentezine, 
                    string Original_Coumaphos, 
                    string Original_Cyfluthrin, 
                    string Original_Cypermethrin, 
                    string Original_Daminozide, 
                    string Original_Dichlorvos, 
                    string Original_Diazinon, 
                    string Original_Dimethoate, 
                    string Original_Dimethomorph, 
                    string Original_Ethoprophos, 
                    string Original_Etofenprox, 
                    string Original_Etoxazole, 
                    string Original_Fenhexamid, 
                    string Original_Fenoxycarb, 
                    string Original_Fenpyroximate, 
                    string Original_Fipronil, 
                    string Original_Flonicamid, 
                    string Original_Fludioxonil, 
                    string Original_Hexythiazox, 
                    string Original_Imazalil, 
                    string Original_Imidacloprid, 
                    string Original_KresoximMethyl, 
                    string Original_Malathion, 
                    string Original_Metalaxyl, 
                    string Original_Methiocarb, 
                    string Original_Methomyl, 
                    string Original_MethylParathion, 
                    string Original_Mevinphos, 
                    string Original_Myclobutanil, 
                    string Original_Naled, 
                    string Original_Oxamyl, 
                    string Original_Pentachloronitrobenzene, 
                    string Original_Permethrins, 
                    string Original_Phosmet, 
                    string Original_PiperonylButoxide, 
                    string Original_Prallethrin, 
                    string Original_Propiconazole, 
                    string Original_Propoxur, 
                    string Original_Pyrethrins, 
                    string Original_Pyridaben, 
                    string Original_SpinetoramJ, 
                    string Original_SpinetoramL, 
                    string Original_SpinosadA, 
                    string Original_SpinosadD, 
                    string Original_Spiromesifen, 
                    string Original_Spirotetramat, 
                    string Original_Spiroxamine, 
                    string Original_Tebuconazole, 
                    string Original_Thiacloprid, 
                    string Original_Thiamethoxam, 
                    string Original_Trifloxystrobin) {
            return this.Update(SampleID, LCMSID, GCMSID, PestInputWt, Abamectin, Acephate, Acequinocyl, Acetamiprid, Aldicarb, Azoxystrobin, Bifenazate, Bifenthrin, Boscalid, Captan, Carbaryl, Carbofuran, Chlorantranilprole, Chlordane, Chlorfenapyr, Chlorpyrifos, Clofentezine, Coumaphos, Cyfluthrin, Cypermethrin, Daminozide, Dichlorvos, Diazinon, Dimethoate, Dimethomorph, Ethoprophos, Etofenprox, Etoxazole, Fenhexamid, Fenoxycarb, Fenpyroximate, Fipronil, Flonicamid, Fludioxonil, Hexythiazox, Imazalil, Imidacloprid, KresoximMethyl, Malathion, Metalaxyl, Methiocarb, Methomyl, MethylParathion, Mevinphos, Myclobutanil, Naled, Oxamyl, Pentachloronitrobenzene, Permethrins, Phosmet, PiperonylButoxide, Prallethrin, Propiconazole, Propoxur, Pyrethrins, Pyridaben, SpinetoramJ, SpinetoramL, SpinosadA, SpinosadD, Spiromesifen, Spirotetramat, Spiroxamine, Tebuconazole, Thiacloprid, Thiamethoxam, Trifloxystrobin, Original_Id, Original_SampleID, Original_LCMSID, Original_GCMSID, Original_PestInputWt, Original_Abamectin, Original_Acephate, Original_Acequinocyl, Original_Acetamiprid, Original_Aldicarb, Original_Azoxystrobin, Original_Bifenazate, Original_Bifenthrin, Original_Boscalid, Original_Captan, Original_Carbaryl, Original_Carbofuran, Original_Chlorantranilprole, Original_Chlordane, Original_Chlorfenapyr, Original_Chlorpyrifos, Original_Clofentezine, Original_Coumaphos, Original_Cyfluthrin, Original_Cypermethrin, Original_Daminozide, Original_Dichlorvos, Original_Diazinon, Original_Dimethoate, Original_Dimethomorph, Original_Ethoprophos, Original_Etofenprox, Original_Etoxazole, Original_Fenhexamid, Original_Fenoxycarb, Original_Fenpyroximate, Original_Fipronil, Original_Flonicamid, Original_Fludioxonil, Original_Hexythiazox, Original_Imazalil, Original_Imidacloprid, Original_KresoximMethyl, Original_Malathion, Original_Metalaxyl, Original_Methiocarb, Original_Methomyl, Original_MethylParathion, Original_Mevinphos, Original_Myclobutanil, Original_Naled, Original_Oxamyl, Original_Pentachloronitrobenzene, Original_Permethrins, Original_Phosmet, Original_PiperonylButoxide, Original_Prallethrin, Original_Propiconazole, Original_Propoxur, Original_Pyrethrins, Original_Pyridaben, Original_SpinetoramJ, Original_SpinetoramL, Original_SpinosadA, Original_SpinosadD, Original_Spiromesifen, Original_Spirotetramat, Original_Spiroxamine, Original_Tebuconazole, Original_Thiacloprid, Original_Thiamethoxam, Original_Trifloxystrobin, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PotencyDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PotencyDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PotencyDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SampleId", "SampleId");
            tableMapping.ColumnMappings.Add("PotencyID", "PotencyID");
            tableMapping.ColumnMappings.Add("CBDV", "CBDV");
            tableMapping.ColumnMappings.Add("CBD", "CBD");
            tableMapping.ColumnMappings.Add("CBG", "CBG");
            tableMapping.ColumnMappings.Add("THCV", "THCV");
            tableMapping.ColumnMappings.Add("CBDA", "CBDA");
            tableMapping.ColumnMappings.Add("CBN", "CBN");
            tableMapping.ColumnMappings.Add("CBGA", "CBGA");
            tableMapping.ColumnMappings.Add("D9THC", "D9THC");
            tableMapping.ColumnMappings.Add("D8THC", "D8THC");
            tableMapping.ColumnMappings.Add("THCA", "THCA");
            tableMapping.ColumnMappings.Add("CBC", "CBC");
            tableMapping.ColumnMappings.Add("DRYWEIGHT", "DRYWEIGHT");
            tableMapping.ColumnMappings.Add("HPLCWEIGHT", "HPLCWEIGHT");
            tableMapping.ColumnMappings.Add("WETWEIGHT", "WETWEIGHT");
            tableMapping.ColumnMappings.Add("TargetTHC", "TargetTHC");
            tableMapping.ColumnMappings.Add("TargetCBD", "TargetCBD");
            tableMapping.ColumnMappings.Add("CBDVP", "CBDVP");
            tableMapping.ColumnMappings.Add("CBDP", "CBDP");
            tableMapping.ColumnMappings.Add("CBGP", "CBGP");
            tableMapping.ColumnMappings.Add("THCVP", "THCVP");
            tableMapping.ColumnMappings.Add("CBDAP", "CBDAP");
            tableMapping.ColumnMappings.Add("CBNP", "CBNP");
            tableMapping.ColumnMappings.Add("CBGAP", "CBGAP");
            tableMapping.ColumnMappings.Add("D9THCP", "D9THCP");
            tableMapping.ColumnMappings.Add("D8THCP", "D8THCP");
            tableMapping.ColumnMappings.Add("THCAP", "THCAP");
            tableMapping.ColumnMappings.Add("CBCP", "CBCP");
            tableMapping.ColumnMappings.Add("METHOD", "METHOD");
            tableMapping.ColumnMappings.Add("TEST", "TEST");
            tableMapping.ColumnMappings.Add("TotalTHC", "TotalTHC");
            tableMapping.ColumnMappings.Add("TotalCBD", "TotalCBD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PotencyDATA] ([SampleId], [PotencyID], [CBDV], [CBD], [CBG], [THCV], [CBDA], [CBN], [CBGA], [D9THC], [D8THC], [THCA], [CBC], [DRYWEIGHT], [HPLCWEIGHT], [WETWEIGHT], [TargetTHC], [TargetCBD], [CBDVP], [CBDP], [CBGP], [THCVP], [CBDAP], [CBNP], [CBGAP], [D9THCP], [D8THCP], [THCAP], [CBCP], [METHOD], [TEST], [TotalTHC], [TotalCBD]) VALUES (@SampleId, @PotencyID, @CBDV, @CBD, @CBG, @THCV, @CBDA, @CBN, @CBGA, @D9THC, @D8THC, @THCA, @CBC, @DRYWEIGHT, @HPLCWEIGHT, @WETWEIGHT, @TargetTHC, @TargetCBD, @CBDVP, @CBDP, @CBGP, @THCVP, @CBDAP, @CBNP, @CBGAP, @D9THCP, @D8THCP, @THCAP, @CBCP, @METHOD, @TEST, @TotalTHC, @TotalCBD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PotencyID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PotencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBDV", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBDV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THCV", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBDA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBGA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBGA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D9THC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D9THC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D8THC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D8THC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THCA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THCA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRYWEIGHT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DRYWEIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HPLCWEIGHT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HPLCWEIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WETWEIGHT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WETWEIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TargetTHC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TargetTHC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TargetCBD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TargetCBD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBDVP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBDVP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBDP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBGP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBGP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THCVP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THCVP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBDAP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBDAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBNP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBGAP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBGAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D9THCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D9THCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D8THCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D8THCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THCAP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THCAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METHOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "METHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEST", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalTHC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalTHC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCBD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCBD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, SampleId, PotencyID, CBDV, CBD, CBG, THCV, CBDA, CBN, CBGA, D9THC, D8THC, THCA, CBC, DRYWEIGHT, HPLCWEIGHT, WETWEIGHT, TargetTHC, TargetCBD, CBDVP, CBDP, CBGP, THCVP, CBDAP, CBNP, CBGAP, D9THCP, D8THCP, THCAP, CBCP, METHOD, TEST, TotalTHC, TotalCBD FROM dbo.PotencyDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.PotencyDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.PotencyDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.PotencyDATADataTable dataTable = new fullDATASET.PotencyDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.PotencyDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "PotencyDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SampleId, 
                    string PotencyID, 
                    global::System.Nullable<double> CBDV, 
                    global::System.Nullable<double> CBD, 
                    global::System.Nullable<double> CBG, 
                    global::System.Nullable<double> THCV, 
                    global::System.Nullable<double> CBDA, 
                    global::System.Nullable<double> CBN, 
                    global::System.Nullable<double> CBGA, 
                    global::System.Nullable<double> D9THC, 
                    global::System.Nullable<double> D8THC, 
                    global::System.Nullable<double> THCA, 
                    global::System.Nullable<double> CBC, 
                    global::System.Nullable<double> DRYWEIGHT, 
                    global::System.Nullable<double> HPLCWEIGHT, 
                    global::System.Nullable<double> WETWEIGHT, 
                    global::System.Nullable<double> TargetTHC, 
                    global::System.Nullable<double> TargetCBD, 
                    string CBDVP, 
                    string CBDP, 
                    string CBGP, 
                    string THCVP, 
                    string CBDAP, 
                    string CBNP, 
                    string CBGAP, 
                    string D9THCP, 
                    string D8THCP, 
                    string THCAP, 
                    string CBCP, 
                    string METHOD, 
                    string TEST, 
                    string TotalTHC, 
                    string TotalCBD) {
            if ((SampleId == null)) {
                throw new global::System.ArgumentNullException("SampleId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SampleId));
            }
            if ((PotencyID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PotencyID));
            }
            if ((CBDV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(CBDV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CBD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(CBD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CBG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(CBG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((THCV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(THCV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CBDA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(CBDA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CBN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(CBN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CBGA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(CBGA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((D9THC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(D9THC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((D8THC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(D8THC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((THCA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(THCA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CBC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(CBC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DRYWEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(DRYWEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((HPLCWEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(HPLCWEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((WETWEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(WETWEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TargetTHC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(TargetTHC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TargetCBD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(TargetCBD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((CBDVP == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CBDVP));
            }
            if ((CBDP == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(CBDP));
            }
            if ((CBGP == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CBGP));
            }
            if ((THCVP == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(THCVP));
            }
            if ((CBDAP == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CBDAP));
            }
            if ((CBNP == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(CBNP));
            }
            if ((CBGAP == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(CBGAP));
            }
            if ((D9THCP == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(D9THCP));
            }
            if ((D8THCP == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(D8THCP));
            }
            if ((THCAP == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(THCAP));
            }
            if ((CBCP == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(CBCP));
            }
            if ((METHOD == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(METHOD));
            }
            if ((TEST == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(TEST));
            }
            if ((TotalTHC == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(TotalTHC));
            }
            if ((TotalCBD == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(TotalCBD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SolventsDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SolventsDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SolventsDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("SampleID", "SampleID");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("SolventInputWeight", "SolventInputWeight");
            tableMapping.ColumnMappings.Add("Dichloroethane", "Dichloroethane");
            tableMapping.ColumnMappings.Add("Benzene", "Benzene");
            tableMapping.ColumnMappings.Add("Chloroform", "Chloroform");
            tableMapping.ColumnMappings.Add("EthyleneOxide", "EthyleneOxide");
            tableMapping.ColumnMappings.Add("MethyleneChloride", "MethyleneChloride");
            tableMapping.ColumnMappings.Add("Trichloroethylene", "Trichloroethylene");
            tableMapping.ColumnMappings.Add("Acetone", "Acetone");
            tableMapping.ColumnMappings.Add("Acetonitrile", "Acetonitrile");
            tableMapping.ColumnMappings.Add("Butane", "Butane");
            tableMapping.ColumnMappings.Add("Ethanol", "Ethanol");
            tableMapping.ColumnMappings.Add("EthylAcetate", "EthylAcetate");
            tableMapping.ColumnMappings.Add("EthylEther", "EthylEther");
            tableMapping.ColumnMappings.Add("Heptane", "Heptane");
            tableMapping.ColumnMappings.Add("Hexane", "Hexane");
            tableMapping.ColumnMappings.Add("IsopropylAlcohol", "IsopropylAlcohol");
            tableMapping.ColumnMappings.Add("Methanol", "Methanol");
            tableMapping.ColumnMappings.Add("Pentane", "Pentane");
            tableMapping.ColumnMappings.Add("Propane", "Propane");
            tableMapping.ColumnMappings.Add("Toluene", "Toluene");
            tableMapping.ColumnMappings.Add("orthoXylene", "orthoXylene");
            tableMapping.ColumnMappings.Add("metaXylene", "metaXylene");
            tableMapping.ColumnMappings.Add("paraXylene", "paraXylene");
            tableMapping.ColumnMappings.Add("Isobutane", "Isobutane");
            tableMapping.ColumnMappings.Add("nHexane", "nHexane");
            tableMapping.ColumnMappings.Add("DiethylEther", "DiethylEther");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SolventsDATA] WHERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_GCMSID = 1 AND [GCMSID] IS NULL) OR ([GCMSID] = @Original_GCMSID)) AND ((@IsNull_SolventInputWeight = 1 AND [SolventInputWeight] IS NULL) OR ([SolventInputWeight] = @Original_SolventInputWeight)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SolventInputWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SolventInputWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SolventsDATA] ([Date], [SampleID], [GCMSID], [SolventInputWeight], [Dichloroethane], [Benzene], [Chloroform], [EthyleneOxide], [MethyleneChloride], [Trichloroethylene], [Acetone], [Acetonitrile], [Butane], [Ethanol], [EthylAcetate], [EthylEther], [Heptane], [Hexane], [IsopropylAlcohol], [Methanol], [Pentane], [Propane], [Toluene], [orthoXylene], [metaXylene], [paraXylene], [Isobutane], [nHexane], [DiethylEther]) VALUES (@Date, @SampleID, @GCMSID, @SolventInputWeight, @Dichloroethane, @Benzene, @Chloroform, @EthyleneOxide, @MethyleneChloride, @Trichloroethylene, @Acetone, @Acetonitrile, @Butane, @Ethanol, @EthylAcetate, @EthylEther, @Heptane, @Hexane, @IsopropylAlcohol, @Methanol, @Pentane, @Propane, @Toluene, @orthoXylene, @metaXylene, @paraXylene, @Isobutane, @nHexane, @DiethylEther);
SELECT ID, Date, SampleID, GCMSID, SolventInputWeight, Dichloroethane, Benzene, Chloroform, EthyleneOxide, MethyleneChloride, Trichloroethylene, Acetone, Acetonitrile, Butane, Ethanol, EthylAcetate, EthylEther, Heptane, Hexane, IsopropylAlcohol, Methanol, Pentane, Propane, Toluene, orthoXylene, metaXylene, paraXylene, Isobutane, nHexane, DiethylEther FROM SolventsDATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SolventInputWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dichloroethane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichloroethane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Benzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Benzene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chloroform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chloroform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthyleneOxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthyleneOxide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethyleneChloride", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethyleneChloride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trichloroethylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trichloroethylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetonitrile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetonitrile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Butane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Butane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ethanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthylAcetate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthylAcetate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthylEther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthylEther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Heptane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heptane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hexane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsopropylAlcohol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsopropylAlcohol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pentane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Toluene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Toluene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@orthoXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "orthoXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@metaXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "metaXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paraXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paraXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isobutane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isobutane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nHexane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nHexane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiethylEther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiethylEther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SolventsDATA] SET [Date] = @Date, [SampleID] = @SampleID, [GCMSID] " +
                "= @GCMSID, [SolventInputWeight] = @SolventInputWeight, [Dichloroethane] = @Dichl" +
                "oroethane, [Benzene] = @Benzene, [Chloroform] = @Chloroform, [EthyleneOxide] = @" +
                "EthyleneOxide, [MethyleneChloride] = @MethyleneChloride, [Trichloroethylene] = @" +
                "Trichloroethylene, [Acetone] = @Acetone, [Acetonitrile] = @Acetonitrile, [Butane" +
                "] = @Butane, [Ethanol] = @Ethanol, [EthylAcetate] = @EthylAcetate, [EthylEther] " +
                "= @EthylEther, [Heptane] = @Heptane, [Hexane] = @Hexane, [IsopropylAlcohol] = @I" +
                "sopropylAlcohol, [Methanol] = @Methanol, [Pentane] = @Pentane, [Propane] = @Prop" +
                "ane, [Toluene] = @Toluene, [orthoXylene] = @orthoXylene, [metaXylene] = @metaXyl" +
                "ene, [paraXylene] = @paraXylene, [Isobutane] = @Isobutane, [nHexane] = @nHexane," +
                " [DiethylEther] = @DiethylEther WHERE (([ID] = @Original_ID) AND ((@IsNull_Date " +
                "= 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1" +
                " AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_GCM" +
                "SID = 1 AND [GCMSID] IS NULL) OR ([GCMSID] = @Original_GCMSID)) AND ((@IsNull_So" +
                "lventInputWeight = 1 AND [SolventInputWeight] IS NULL) OR ([SolventInputWeight] " +
                "= @Original_SolventInputWeight)));\r\nSELECT ID, Date, SampleID, GCMSID, SolventIn" +
                "putWeight, Dichloroethane, Benzene, Chloroform, EthyleneOxide, MethyleneChloride" +
                ", Trichloroethylene, Acetone, Acetonitrile, Butane, Ethanol, EthylAcetate, Ethyl" +
                "Ether, Heptane, Hexane, IsopropylAlcohol, Methanol, Pentane, Propane, Toluene, o" +
                "rthoXylene, metaXylene, paraXylene, Isobutane, nHexane, DiethylEther FROM Solven" +
                "tsDATA WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SolventInputWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dichloroethane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dichloroethane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Benzene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Benzene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chloroform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chloroform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthyleneOxide", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthyleneOxide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethyleneChloride", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethyleneChloride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trichloroethylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trichloroethylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acetonitrile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Acetonitrile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Butane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Butane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ethanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ethanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthylAcetate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthylAcetate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EthylEther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EthylEther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Heptane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heptane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hexane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hexane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsopropylAlcohol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsopropylAlcohol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Methanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Methanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pentane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pentane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Propane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Propane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Toluene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Toluene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@orthoXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "orthoXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@metaXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "metaXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paraXylene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paraXylene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isobutane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isobutane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nHexane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nHexane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiethylEther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiethylEther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SolventInputWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SolventInputWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SolventInputWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, Date, SampleID, GCMSID, SolventInputWeight, Dichloroethane, Benzene, Chloroform, EthyleneOxide, MethyleneChloride, Trichloroethylene, Acetone, Acetonitrile, Butane, Ethanol, EthylAcetate, EthylEther, Heptane, Hexane, IsopropylAlcohol, Methanol, Pentane, Propane, Toluene, orthoXylene, metaXylene, paraXylene, Isobutane, nHexane, DiethylEther FROM dbo.SolventsDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.SolventsDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.SolventsDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.SolventsDATADataTable dataTable = new fullDATASET.SolventsDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.SolventsDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "SolventsDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Date, string Original_SampleID, string Original_GCMSID, string Original_SolventInputWeight) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SampleID));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GCMSID));
            }
            if ((Original_SolventInputWeight == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SolventInputWeight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Date, 
                    string SampleID, 
                    string GCMSID, 
                    string SolventInputWeight, 
                    string Dichloroethane, 
                    string Benzene, 
                    string Chloroform, 
                    string EthyleneOxide, 
                    string MethyleneChloride, 
                    string Trichloroethylene, 
                    string Acetone, 
                    string Acetonitrile, 
                    string Butane, 
                    string Ethanol, 
                    string EthylAcetate, 
                    string EthylEther, 
                    string Heptane, 
                    string Hexane, 
                    string IsopropylAlcohol, 
                    string Methanol, 
                    string Pentane, 
                    string Propane, 
                    string Toluene, 
                    string orthoXylene, 
                    string metaXylene, 
                    string paraXylene, 
                    string Isobutane, 
                    string nHexane, 
                    string DiethylEther) {
            if ((Date == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((GCMSID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GCMSID));
            }
            if ((SolventInputWeight == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SolventInputWeight));
            }
            if ((Dichloroethane == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Dichloroethane));
            }
            if ((Benzene == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Benzene));
            }
            if ((Chloroform == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Chloroform));
            }
            if ((EthyleneOxide == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EthyleneOxide));
            }
            if ((MethyleneChloride == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MethyleneChloride));
            }
            if ((Trichloroethylene == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Trichloroethylene));
            }
            if ((Acetone == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Acetone));
            }
            if ((Acetonitrile == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Acetonitrile));
            }
            if ((Butane == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Butane));
            }
            if ((Ethanol == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Ethanol));
            }
            if ((EthylAcetate == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EthylAcetate));
            }
            if ((EthylEther == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(EthylEther));
            }
            if ((Heptane == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Heptane));
            }
            if ((Hexane == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Hexane));
            }
            if ((IsopropylAlcohol == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(IsopropylAlcohol));
            }
            if ((Methanol == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Methanol));
            }
            if ((Pentane == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Pentane));
            }
            if ((Propane == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Propane));
            }
            if ((Toluene == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Toluene));
            }
            if ((orthoXylene == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(orthoXylene));
            }
            if ((metaXylene == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(metaXylene));
            }
            if ((paraXylene == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(paraXylene));
            }
            if ((Isobutane == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Isobutane));
            }
            if ((nHexane == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(nHexane));
            }
            if ((DiethylEther == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(DiethylEther));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string GCMSID, 
                    string SolventInputWeight, 
                    string Dichloroethane, 
                    string Benzene, 
                    string Chloroform, 
                    string EthyleneOxide, 
                    string MethyleneChloride, 
                    string Trichloroethylene, 
                    string Acetone, 
                    string Acetonitrile, 
                    string Butane, 
                    string Ethanol, 
                    string EthylAcetate, 
                    string EthylEther, 
                    string Heptane, 
                    string Hexane, 
                    string IsopropylAlcohol, 
                    string Methanol, 
                    string Pentane, 
                    string Propane, 
                    string Toluene, 
                    string orthoXylene, 
                    string metaXylene, 
                    string paraXylene, 
                    string Isobutane, 
                    string nHexane, 
                    string DiethylEther, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_GCMSID, 
                    string Original_SolventInputWeight, 
                    int ID) {
            if ((Date == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GCMSID));
            }
            if ((SolventInputWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SolventInputWeight));
            }
            if ((Dichloroethane == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Dichloroethane));
            }
            if ((Benzene == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Benzene));
            }
            if ((Chloroform == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Chloroform));
            }
            if ((EthyleneOxide == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EthyleneOxide));
            }
            if ((MethyleneChloride == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MethyleneChloride));
            }
            if ((Trichloroethylene == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Trichloroethylene));
            }
            if ((Acetone == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Acetone));
            }
            if ((Acetonitrile == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Acetonitrile));
            }
            if ((Butane == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Butane));
            }
            if ((Ethanol == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Ethanol));
            }
            if ((EthylAcetate == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EthylAcetate));
            }
            if ((EthylEther == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(EthylEther));
            }
            if ((Heptane == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Heptane));
            }
            if ((Hexane == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Hexane));
            }
            if ((IsopropylAlcohol == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(IsopropylAlcohol));
            }
            if ((Methanol == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Methanol));
            }
            if ((Pentane == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Pentane));
            }
            if ((Propane == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Propane));
            }
            if ((Toluene == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Toluene));
            }
            if ((orthoXylene == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(orthoXylene));
            }
            if ((metaXylene == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(metaXylene));
            }
            if ((paraXylene == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(paraXylene));
            }
            if ((Isobutane == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Isobutane));
            }
            if ((nHexane == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(nHexane));
            }
            if ((DiethylEther == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(DiethylEther));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_SampleID));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_GCMSID));
            }
            if ((Original_SolventInputWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_SolventInputWeight));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string GCMSID, 
                    string SolventInputWeight, 
                    string Dichloroethane, 
                    string Benzene, 
                    string Chloroform, 
                    string EthyleneOxide, 
                    string MethyleneChloride, 
                    string Trichloroethylene, 
                    string Acetone, 
                    string Acetonitrile, 
                    string Butane, 
                    string Ethanol, 
                    string EthylAcetate, 
                    string EthylEther, 
                    string Heptane, 
                    string Hexane, 
                    string IsopropylAlcohol, 
                    string Methanol, 
                    string Pentane, 
                    string Propane, 
                    string Toluene, 
                    string orthoXylene, 
                    string metaXylene, 
                    string paraXylene, 
                    string Isobutane, 
                    string nHexane, 
                    string DiethylEther, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_GCMSID, 
                    string Original_SolventInputWeight) {
            return this.Update(Date, SampleID, GCMSID, SolventInputWeight, Dichloroethane, Benzene, Chloroform, EthyleneOxide, MethyleneChloride, Trichloroethylene, Acetone, Acetonitrile, Butane, Ethanol, EthylAcetate, EthylEther, Heptane, Hexane, IsopropylAlcohol, Methanol, Pentane, Propane, Toluene, orthoXylene, metaXylene, paraXylene, Isobutane, nHexane, DiethylEther, Original_ID, Original_Date, Original_SampleID, Original_GCMSID, Original_SolventInputWeight, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class terpenesDATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public terpenesDATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "terpenesDATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("SampleID", "SampleID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("TerpWT", "TerpWT");
            tableMapping.ColumnMappings.Add("aPinene", "aPinene");
            tableMapping.ColumnMappings.Add("Camphene", "Camphene");
            tableMapping.ColumnMappings.Add("bMyrcene", "bMyrcene");
            tableMapping.ColumnMappings.Add("bPinene", "bPinene");
            tableMapping.ColumnMappings.Add("d3Carene", "d3Carene");
            tableMapping.ColumnMappings.Add("aTerpinene", "aTerpinene");
            tableMapping.ColumnMappings.Add("Ocimene", "Ocimene");
            tableMapping.ColumnMappings.Add("Limonene", "Limonene");
            tableMapping.ColumnMappings.Add("pCymene", "pCymene");
            tableMapping.ColumnMappings.Add("yTerpinene", "yTerpinene");
            tableMapping.ColumnMappings.Add("Terpinolene", "Terpinolene");
            tableMapping.ColumnMappings.Add("Linalool", "Linalool");
            tableMapping.ColumnMappings.Add("Isopulegol", "Isopulegol");
            tableMapping.ColumnMappings.Add("Geraniol", "Geraniol");
            tableMapping.ColumnMappings.Add("bCaryophyllene", "bCaryophyllene");
            tableMapping.ColumnMappings.Add("aHumulene", "aHumulene");
            tableMapping.ColumnMappings.Add("Nerolidol", "Nerolidol");
            tableMapping.ColumnMappings.Add("Guaiol", "Guaiol");
            tableMapping.ColumnMappings.Add("aBisabolol", "aBisabolol");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[terpenesDATA] WHERE (([ID] = @Original_ID) AND ((@IsNull_Date " +
                "= 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1" +
                " AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_Met" +
                "hod = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Te" +
                "chnique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND" +
                " ((@IsNull_GCMSID = 1 AND [GCMSID] IS NULL) OR ([GCMSID] = @Original_GCMSID)) AN" +
                "D ((@IsNull_TerpWT = 1 AND [TerpWT] IS NULL) OR ([TerpWT] = @Original_TerpWT)) A" +
                "ND ((@IsNull_aPinene = 1 AND [aPinene] IS NULL) OR ([aPinene] = @Original_aPinen" +
                "e)) AND ((@IsNull_Camphene = 1 AND [Camphene] IS NULL) OR ([Camphene] = @Origina" +
                "l_Camphene)) AND ((@IsNull_bMyrcene = 1 AND [bMyrcene] IS NULL) OR ([bMyrcene] =" +
                " @Original_bMyrcene)) AND ((@IsNull_bPinene = 1 AND [bPinene] IS NULL) OR ([bPin" +
                "ene] = @Original_bPinene)) AND ((@IsNull_d3Carene = 1 AND [d3Carene] IS NULL) OR" +
                " ([d3Carene] = @Original_d3Carene)) AND ((@IsNull_aTerpinene = 1 AND [aTerpinene" +
                "] IS NULL) OR ([aTerpinene] = @Original_aTerpinene)) AND ((@IsNull_Ocimene = 1 A" +
                "ND [Ocimene] IS NULL) OR ([Ocimene] = @Original_Ocimene)) AND ((@IsNull_Limonene" +
                " = 1 AND [Limonene] IS NULL) OR ([Limonene] = @Original_Limonene)) AND ((@IsNull" +
                "_pCymene = 1 AND [pCymene] IS NULL) OR ([pCymene] = @Original_pCymene)) AND ((@I" +
                "sNull_yTerpinene = 1 AND [yTerpinene] IS NULL) OR ([yTerpinene] = @Original_yTer" +
                "pinene)) AND ((@IsNull_Terpinolene = 1 AND [Terpinolene] IS NULL) OR ([Terpinole" +
                "ne] = @Original_Terpinolene)) AND ((@IsNull_Linalool = 1 AND [Linalool] IS NULL)" +
                " OR ([Linalool] = @Original_Linalool)) AND ((@IsNull_Isopulegol = 1 AND [Isopule" +
                "gol] IS NULL) OR ([Isopulegol] = @Original_Isopulegol)) AND ((@IsNull_Geraniol =" +
                " 1 AND [Geraniol] IS NULL) OR ([Geraniol] = @Original_Geraniol)) AND ((@IsNull_b" +
                "Caryophyllene = 1 AND [bCaryophyllene] IS NULL) OR ([bCaryophyllene] = @Original" +
                "_bCaryophyllene)) AND ((@IsNull_aHumulene = 1 AND [aHumulene] IS NULL) OR ([aHum" +
                "ulene] = @Original_aHumulene)) AND ((@IsNull_Nerolidol = 1 AND [Nerolidol] IS NU" +
                "LL) OR ([Nerolidol] = @Original_Nerolidol)) AND ((@IsNull_Guaiol = 1 AND [Guaiol" +
                "] IS NULL) OR ([Guaiol] = @Original_Guaiol)) AND ((@IsNull_aBisabolol = 1 AND [a" +
                "Bisabolol] IS NULL) OR ([aBisabolol] = @Original_aBisabolol)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TerpWT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TerpWT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aPinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Camphene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Camphene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bMyrcene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bMyrcene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bPinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_d3Carene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_d3Carene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aTerpinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ocimene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ocimene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Limonene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Limonene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pCymene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pCymene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_yTerpinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_yTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Terpinolene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Terpinolene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Linalool", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Linalool", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Isopulegol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Isopulegol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Geraniol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Geraniol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bCaryophyllene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bCaryophyllene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aHumulene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aHumulene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nerolidol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nerolidol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Guaiol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guaiol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aBisabolol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aBisabolol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[terpenesDATA] ([Date], [SampleID], [Method], [Technique], [GCMSID], [TerpWT], [aPinene], [Camphene], [bMyrcene], [bPinene], [d3Carene], [aTerpinene], [Ocimene], [Limonene], [pCymene], [yTerpinene], [Terpinolene], [Linalool], [Isopulegol], [Geraniol], [bCaryophyllene], [aHumulene], [Nerolidol], [Guaiol], [aBisabolol]) VALUES (@Date, @SampleID, @Method, @Technique, @GCMSID, @TerpWT, @aPinene, @Camphene, @bMyrcene, @bPinene, @d3Carene, @aTerpinene, @Ocimene, @Limonene, @pCymene, @yTerpinene, @Terpinolene, @Linalool, @Isopulegol, @Geraniol, @bCaryophyllene, @aHumulene, @Nerolidol, @Guaiol, @aBisabolol);
SELECT ID, Date, SampleID, Method, Technique, GCMSID, TerpWT, aPinene, Camphene, bMyrcene, bPinene, d3Carene, aTerpinene, Ocimene, Limonene, pCymene, yTerpinene, Terpinolene, Linalool, Isopulegol, Geraniol, bCaryophyllene, aHumulene, Nerolidol, Guaiol, aBisabolol FROM terpenesDATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TerpWT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Camphene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bMyrcene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@d3Carene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ocimene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Limonene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCymene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Terpinolene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Linalool", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isopulegol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Geraniol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bCaryophyllene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aHumulene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nerolidol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guaiol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aBisabolol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[terpenesDATA] SET [Date] = @Date, [SampleID] = @SampleID, [Method] " +
                "= @Method, [Technique] = @Technique, [GCMSID] = @GCMSID, [TerpWT] = @TerpWT, [aP" +
                "inene] = @aPinene, [Camphene] = @Camphene, [bMyrcene] = @bMyrcene, [bPinene] = @" +
                "bPinene, [d3Carene] = @d3Carene, [aTerpinene] = @aTerpinene, [Ocimene] = @Ocimen" +
                "e, [Limonene] = @Limonene, [pCymene] = @pCymene, [yTerpinene] = @yTerpinene, [Te" +
                "rpinolene] = @Terpinolene, [Linalool] = @Linalool, [Isopulegol] = @Isopulegol, [" +
                "Geraniol] = @Geraniol, [bCaryophyllene] = @bCaryophyllene, [aHumulene] = @aHumul" +
                "ene, [Nerolidol] = @Nerolidol, [Guaiol] = @Guaiol, [aBisabolol] = @aBisabolol WH" +
                "ERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date]" +
                " = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([Samp" +
                "leID] = @Original_SampleID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR (" +
                "[Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NUL" +
                "L) OR ([Technique] = @Original_Technique)) AND ((@IsNull_GCMSID = 1 AND [GCMSID]" +
                " IS NULL) OR ([GCMSID] = @Original_GCMSID)) AND ((@IsNull_TerpWT = 1 AND [TerpWT" +
                "] IS NULL) OR ([TerpWT] = @Original_TerpWT)) AND ((@IsNull_aPinene = 1 AND [aPin" +
                "ene] IS NULL) OR ([aPinene] = @Original_aPinene)) AND ((@IsNull_Camphene = 1 AND" +
                " [Camphene] IS NULL) OR ([Camphene] = @Original_Camphene)) AND ((@IsNull_bMyrcen" +
                "e = 1 AND [bMyrcene] IS NULL) OR ([bMyrcene] = @Original_bMyrcene)) AND ((@IsNul" +
                "l_bPinene = 1 AND [bPinene] IS NULL) OR ([bPinene] = @Original_bPinene)) AND ((@" +
                "IsNull_d3Carene = 1 AND [d3Carene] IS NULL) OR ([d3Carene] = @Original_d3Carene)" +
                ") AND ((@IsNull_aTerpinene = 1 AND [aTerpinene] IS NULL) OR ([aTerpinene] = @Ori" +
                "ginal_aTerpinene)) AND ((@IsNull_Ocimene = 1 AND [Ocimene] IS NULL) OR ([Ocimene" +
                "] = @Original_Ocimene)) AND ((@IsNull_Limonene = 1 AND [Limonene] IS NULL) OR ([" +
                "Limonene] = @Original_Limonene)) AND ((@IsNull_pCymene = 1 AND [pCymene] IS NULL" +
                ") OR ([pCymene] = @Original_pCymene)) AND ((@IsNull_yTerpinene = 1 AND [yTerpine" +
                "ne] IS NULL) OR ([yTerpinene] = @Original_yTerpinene)) AND ((@IsNull_Terpinolene" +
                " = 1 AND [Terpinolene] IS NULL) OR ([Terpinolene] = @Original_Terpinolene)) AND " +
                "((@IsNull_Linalool = 1 AND [Linalool] IS NULL) OR ([Linalool] = @Original_Linalo" +
                "ol)) AND ((@IsNull_Isopulegol = 1 AND [Isopulegol] IS NULL) OR ([Isopulegol] = @" +
                "Original_Isopulegol)) AND ((@IsNull_Geraniol = 1 AND [Geraniol] IS NULL) OR ([Ge" +
                "raniol] = @Original_Geraniol)) AND ((@IsNull_bCaryophyllene = 1 AND [bCaryophyll" +
                "ene] IS NULL) OR ([bCaryophyllene] = @Original_bCaryophyllene)) AND ((@IsNull_aH" +
                "umulene = 1 AND [aHumulene] IS NULL) OR ([aHumulene] = @Original_aHumulene)) AND" +
                " ((@IsNull_Nerolidol = 1 AND [Nerolidol] IS NULL) OR ([Nerolidol] = @Original_Ne" +
                "rolidol)) AND ((@IsNull_Guaiol = 1 AND [Guaiol] IS NULL) OR ([Guaiol] = @Origina" +
                "l_Guaiol)) AND ((@IsNull_aBisabolol = 1 AND [aBisabolol] IS NULL) OR ([aBisabolo" +
                "l] = @Original_aBisabolol)));\r\nSELECT ID, Date, SampleID, Method, Technique, GCM" +
                "SID, TerpWT, aPinene, Camphene, bMyrcene, bPinene, d3Carene, aTerpinene, Ocimene" +
                ", Limonene, pCymene, yTerpinene, Terpinolene, Linalool, Isopulegol, Geraniol, bC" +
                "aryophyllene, aHumulene, Nerolidol, Guaiol, aBisabolol FROM terpenesDATA WHERE (" +
                "ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TerpWT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Camphene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bMyrcene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@d3Carene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ocimene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Limonene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCymene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Terpinolene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Linalool", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isopulegol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Geraniol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bCaryophyllene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aHumulene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nerolidol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guaiol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aBisabolol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GCMSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GCMSID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GCMSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TerpWT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TerpWT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TerpWT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aPinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Camphene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Camphene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Camphene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bMyrcene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bMyrcene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bMyrcene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bPinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bPinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bPinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_d3Carene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_d3Carene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "d3Carene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aTerpinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aTerpinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ocimene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ocimene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ocimene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Limonene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Limonene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limonene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pCymene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pCymene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pCymene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_yTerpinene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_yTerpinene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yTerpinene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Terpinolene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Terpinolene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Terpinolene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Linalool", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Linalool", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Linalool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Isopulegol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Isopulegol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isopulegol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Geraniol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Geraniol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Geraniol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bCaryophyllene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bCaryophyllene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bCaryophyllene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aHumulene", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aHumulene", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aHumulene", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nerolidol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nerolidol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nerolidol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Guaiol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guaiol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guaiol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aBisabolol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aBisabolol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aBisabolol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, Date, SampleID, Method, Technique, GCMSID, TerpWT, aPinene, Camphene, bMyrcene, bPinene, d3Carene, aTerpinene, Ocimene, Limonene, pCymene, yTerpinene, Terpinolene, Linalool, Isopulegol, Geraniol, bCaryophyllene, aHumulene, Nerolidol, Guaiol, aBisabolol FROM dbo.terpenesDATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.terpenesDATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.terpenesDATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.terpenesDATADataTable dataTable = new fullDATASET.terpenesDATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.terpenesDATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "terpenesDATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_GCMSID, 
                    string Original_TerpWT, 
                    string Original_aPinene, 
                    string Original_Camphene, 
                    string Original_bMyrcene, 
                    string Original_bPinene, 
                    string Original_d3Carene, 
                    string Original_aTerpinene, 
                    string Original_Ocimene, 
                    string Original_Limonene, 
                    string Original_pCymene, 
                    string Original_yTerpinene, 
                    string Original_Terpinolene, 
                    string Original_Linalool, 
                    string Original_Isopulegol, 
                    string Original_Geraniol, 
                    string Original_bCaryophyllene, 
                    string Original_aHumulene, 
                    string Original_Nerolidol, 
                    string Original_Guaiol, 
                    string Original_aBisabolol) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Technique));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_GCMSID));
            }
            if ((Original_TerpWT == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_TerpWT));
            }
            if ((Original_aPinene == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_aPinene));
            }
            if ((Original_Camphene == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Camphene));
            }
            if ((Original_bMyrcene == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_bMyrcene));
            }
            if ((Original_bPinene == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_bPinene));
            }
            if ((Original_d3Carene == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_d3Carene));
            }
            if ((Original_aTerpinene == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_aTerpinene));
            }
            if ((Original_Ocimene == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Ocimene));
            }
            if ((Original_Limonene == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Limonene));
            }
            if ((Original_pCymene == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_pCymene));
            }
            if ((Original_yTerpinene == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_yTerpinene));
            }
            if ((Original_Terpinolene == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Terpinolene));
            }
            if ((Original_Linalool == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Linalool));
            }
            if ((Original_Isopulegol == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Isopulegol));
            }
            if ((Original_Geraniol == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_Geraniol));
            }
            if ((Original_bCaryophyllene == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_bCaryophyllene));
            }
            if ((Original_aHumulene == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_aHumulene));
            }
            if ((Original_Nerolidol == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_Nerolidol));
            }
            if ((Original_Guaiol == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Guaiol));
            }
            if ((Original_aBisabolol == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_aBisabolol));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Date, 
                    string SampleID, 
                    string Method, 
                    string Technique, 
                    string GCMSID, 
                    string TerpWT, 
                    string aPinene, 
                    string Camphene, 
                    string bMyrcene, 
                    string bPinene, 
                    string d3Carene, 
                    string aTerpinene, 
                    string Ocimene, 
                    string Limonene, 
                    string pCymene, 
                    string yTerpinene, 
                    string Terpinolene, 
                    string Linalool, 
                    string Isopulegol, 
                    string Geraniol, 
                    string bCaryophyllene, 
                    string aHumulene, 
                    string Nerolidol, 
                    string Guaiol, 
                    string aBisabolol) {
            if ((Date == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((GCMSID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GCMSID));
            }
            if ((TerpWT == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TerpWT));
            }
            if ((aPinene == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(aPinene));
            }
            if ((Camphene == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Camphene));
            }
            if ((bMyrcene == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(bMyrcene));
            }
            if ((bPinene == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(bPinene));
            }
            if ((d3Carene == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(d3Carene));
            }
            if ((aTerpinene == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(aTerpinene));
            }
            if ((Ocimene == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Ocimene));
            }
            if ((Limonene == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Limonene));
            }
            if ((pCymene == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(pCymene));
            }
            if ((yTerpinene == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(yTerpinene));
            }
            if ((Terpinolene == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Terpinolene));
            }
            if ((Linalool == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Linalool));
            }
            if ((Isopulegol == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Isopulegol));
            }
            if ((Geraniol == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Geraniol));
            }
            if ((bCaryophyllene == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(bCaryophyllene));
            }
            if ((aHumulene == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(aHumulene));
            }
            if ((Nerolidol == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Nerolidol));
            }
            if ((Guaiol == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Guaiol));
            }
            if ((aBisabolol == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(aBisabolol));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string Method, 
                    string Technique, 
                    string GCMSID, 
                    string TerpWT, 
                    string aPinene, 
                    string Camphene, 
                    string bMyrcene, 
                    string bPinene, 
                    string d3Carene, 
                    string aTerpinene, 
                    string Ocimene, 
                    string Limonene, 
                    string pCymene, 
                    string yTerpinene, 
                    string Terpinolene, 
                    string Linalool, 
                    string Isopulegol, 
                    string Geraniol, 
                    string bCaryophyllene, 
                    string aHumulene, 
                    string Nerolidol, 
                    string Guaiol, 
                    string aBisabolol, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_GCMSID, 
                    string Original_TerpWT, 
                    string Original_aPinene, 
                    string Original_Camphene, 
                    string Original_bMyrcene, 
                    string Original_bPinene, 
                    string Original_d3Carene, 
                    string Original_aTerpinene, 
                    string Original_Ocimene, 
                    string Original_Limonene, 
                    string Original_pCymene, 
                    string Original_yTerpinene, 
                    string Original_Terpinolene, 
                    string Original_Linalool, 
                    string Original_Isopulegol, 
                    string Original_Geraniol, 
                    string Original_bCaryophyllene, 
                    string Original_aHumulene, 
                    string Original_Nerolidol, 
                    string Original_Guaiol, 
                    string Original_aBisabolol, 
                    int ID) {
            if ((Date == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GCMSID));
            }
            if ((TerpWT == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TerpWT));
            }
            if ((aPinene == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(aPinene));
            }
            if ((Camphene == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Camphene));
            }
            if ((bMyrcene == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(bMyrcene));
            }
            if ((bPinene == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(bPinene));
            }
            if ((d3Carene == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(d3Carene));
            }
            if ((aTerpinene == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(aTerpinene));
            }
            if ((Ocimene == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Ocimene));
            }
            if ((Limonene == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Limonene));
            }
            if ((pCymene == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(pCymene));
            }
            if ((yTerpinene == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(yTerpinene));
            }
            if ((Terpinolene == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Terpinolene));
            }
            if ((Linalool == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Linalool));
            }
            if ((Isopulegol == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Isopulegol));
            }
            if ((Geraniol == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Geraniol));
            }
            if ((bCaryophyllene == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(bCaryophyllene));
            }
            if ((aHumulene == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(aHumulene));
            }
            if ((Nerolidol == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Nerolidol));
            }
            if ((Guaiol == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Guaiol));
            }
            if ((aBisabolol == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(aBisabolol));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Technique));
            }
            if ((Original_GCMSID == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_GCMSID));
            }
            if ((Original_TerpWT == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_TerpWT));
            }
            if ((Original_aPinene == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_aPinene));
            }
            if ((Original_Camphene == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Camphene));
            }
            if ((Original_bMyrcene == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_bMyrcene));
            }
            if ((Original_bPinene == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_bPinene));
            }
            if ((Original_d3Carene == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_d3Carene));
            }
            if ((Original_aTerpinene == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_aTerpinene));
            }
            if ((Original_Ocimene == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Ocimene));
            }
            if ((Original_Limonene == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Limonene));
            }
            if ((Original_pCymene == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_pCymene));
            }
            if ((Original_yTerpinene == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_yTerpinene));
            }
            if ((Original_Terpinolene == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_Terpinolene));
            }
            if ((Original_Linalool == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Linalool));
            }
            if ((Original_Isopulegol == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_Isopulegol));
            }
            if ((Original_Geraniol == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Geraniol));
            }
            if ((Original_bCaryophyllene == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_bCaryophyllene));
            }
            if ((Original_aHumulene == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_aHumulene));
            }
            if ((Original_Nerolidol == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Nerolidol));
            }
            if ((Original_Guaiol == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_Guaiol));
            }
            if ((Original_aBisabolol == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_aBisabolol));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Date, 
                    string SampleID, 
                    string Method, 
                    string Technique, 
                    string GCMSID, 
                    string TerpWT, 
                    string aPinene, 
                    string Camphene, 
                    string bMyrcene, 
                    string bPinene, 
                    string d3Carene, 
                    string aTerpinene, 
                    string Ocimene, 
                    string Limonene, 
                    string pCymene, 
                    string yTerpinene, 
                    string Terpinolene, 
                    string Linalool, 
                    string Isopulegol, 
                    string Geraniol, 
                    string bCaryophyllene, 
                    string aHumulene, 
                    string Nerolidol, 
                    string Guaiol, 
                    string aBisabolol, 
                    int Original_ID, 
                    string Original_Date, 
                    string Original_SampleID, 
                    string Original_Method, 
                    string Original_Technique, 
                    string Original_GCMSID, 
                    string Original_TerpWT, 
                    string Original_aPinene, 
                    string Original_Camphene, 
                    string Original_bMyrcene, 
                    string Original_bPinene, 
                    string Original_d3Carene, 
                    string Original_aTerpinene, 
                    string Original_Ocimene, 
                    string Original_Limonene, 
                    string Original_pCymene, 
                    string Original_yTerpinene, 
                    string Original_Terpinolene, 
                    string Original_Linalool, 
                    string Original_Isopulegol, 
                    string Original_Geraniol, 
                    string Original_bCaryophyllene, 
                    string Original_aHumulene, 
                    string Original_Nerolidol, 
                    string Original_Guaiol, 
                    string Original_aBisabolol) {
            return this.Update(Date, SampleID, Method, Technique, GCMSID, TerpWT, aPinene, Camphene, bMyrcene, bPinene, d3Carene, aTerpinene, Ocimene, Limonene, pCymene, yTerpinene, Terpinolene, Linalool, Isopulegol, Geraniol, bCaryophyllene, aHumulene, Nerolidol, Guaiol, aBisabolol, Original_ID, Original_Date, Original_SampleID, Original_Method, Original_Technique, Original_GCMSID, Original_TerpWT, Original_aPinene, Original_Camphene, Original_bMyrcene, Original_bPinene, Original_d3Carene, Original_aTerpinene, Original_Ocimene, Original_Limonene, Original_pCymene, Original_yTerpinene, Original_Terpinolene, Original_Linalool, Original_Isopulegol, Original_Geraniol, Original_bCaryophyllene, Original_aHumulene, Original_Nerolidol, Original_Guaiol, Original_aBisabolol, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class wADATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public wADATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "wADATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("SampleID", "SampleID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("Aw", "Aw");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[wADATA] WHERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_Aw = 1 AND [Aw] IS NULL) OR ([Aw] = @Original_Aw)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[wADATA] ([Date], [SampleID], [Method], [Technique], [Aw]) VALU" +
                "ES (@Date, @SampleID, @Method, @Technique, @Aw);\r\nSELECT ID, Date, SampleID, Met" +
                "hod, Technique, Aw FROM wADATA WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[wADATA] SET [Date] = @Date, [SampleID] = @SampleID, [Method] = @Method, [Technique] = @Technique, [Aw] = @Aw WHERE (([ID] = @Original_ID) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_SampleID = 1 AND [SampleID] IS NULL) OR ([SampleID] = @Original_SampleID)) AND ((@IsNull_Method = 1 AND [Method] IS NULL) OR ([Method] = @Original_Method)) AND ((@IsNull_Technique = 1 AND [Technique] IS NULL) OR ([Technique] = @Original_Technique)) AND ((@IsNull_Aw = 1 AND [Aw] IS NULL) OR ([Aw] = @Original_Aw)));
SELECT ID, Date, SampleID, Method, Technique, Aw FROM wADATA WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SampleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SampleID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Method", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Method", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Method", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Technique", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Technique", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Technique", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Date, SampleID, Method, Technique, Aw FROM dbo.wADATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.wADATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.wADATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.wADATADataTable dataTable = new fullDATASET.wADATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET.wADATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(fullDATASET dataSet) {
            return this.Adapter.Update(dataSet, "wADATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Date, string Original_SampleID, string Original_Method, string Original_Technique, string Original_Aw) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Technique));
            }
            if ((Original_Aw == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Aw));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Date, string SampleID, string Method, string Technique, string Aw) {
            if ((Date == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((Aw == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Aw));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Date, string SampleID, string Method, string Technique, string Aw, int Original_ID, string Original_Date, string Original_SampleID, string Original_Method, string Original_Technique, string Original_Aw, int ID) {
            if ((Date == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SampleID));
            }
            if ((Method == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Method));
            }
            if ((Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Technique));
            }
            if ((Aw == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Aw));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            if ((Original_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Date));
            }
            if ((Original_SampleID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SampleID));
            }
            if ((Original_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Method));
            }
            if ((Original_Technique == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Technique));
            }
            if ((Original_Aw == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Aw));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Date, string SampleID, string Method, string Technique, string Aw, int Original_ID, string Original_Date, string Original_SampleID, string Original_Method, string Original_Technique, string Original_Aw) {
            return this.Update(Date, SampleID, Method, Technique, Aw, Original_ID, Original_Date, Original_SampleID, Original_Method, Original_Technique, Original_Aw, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dataDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public dataDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dataDT";
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("PotencyID", "PotencyID");
            tableMapping.ColumnMappings.Add("CBDVP", "CBDVP");
            tableMapping.ColumnMappings.Add("CBDP", "CBDP");
            tableMapping.ColumnMappings.Add("CBGP", "CBGP");
            tableMapping.ColumnMappings.Add("THCVP", "THCVP");
            tableMapping.ColumnMappings.Add("CBDAP", "CBDAP");
            tableMapping.ColumnMappings.Add("CBNP", "CBNP");
            tableMapping.ColumnMappings.Add("CBGAP", "CBGAP");
            tableMapping.ColumnMappings.Add("D9THCP", "D9THCP");
            tableMapping.ColumnMappings.Add("D8THCP", "D8THCP");
            tableMapping.ColumnMappings.Add("THCAP", "THCAP");
            tableMapping.ColumnMappings.Add("CBCP", "CBCP");
            tableMapping.ColumnMappings.Add("TEST", "TEST");
            tableMapping.ColumnMappings.Add("TotalTHC", "TotalTHC");
            tableMapping.ColumnMappings.Add("TotalCBD", "TotalCBD");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("METHOD", "METHOD");
            tableMapping.ColumnMappings.Add("WETWEIGHT", "WETWEIGHT");
            tableMapping.ColumnMappings.Add("CBDV", "CBDV");
            tableMapping.ColumnMappings.Add("CBD", "CBD");
            tableMapping.ColumnMappings.Add("CBG", "CBG");
            tableMapping.ColumnMappings.Add("THCV", "THCV");
            tableMapping.ColumnMappings.Add("CBDA", "CBDA");
            tableMapping.ColumnMappings.Add("CBN", "CBN");
            tableMapping.ColumnMappings.Add("CBGA", "CBGA");
            tableMapping.ColumnMappings.Add("D9THC", "D9THC");
            tableMapping.ColumnMappings.Add("D8THC", "D8THC");
            tableMapping.ColumnMappings.Add("THCA", "THCA");
            tableMapping.ColumnMappings.Add("CBC", "CBC");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, indexDATA.Remarks, indexDATA.SampleImage, PotencyDATA.PotencyID, PotencyDATA.CBDVP, PotencyDATA.CBDP, 
                  PotencyDATA.CBGP, PotencyDATA.THCVP, PotencyDATA.CBDAP, PotencyDATA.CBNP, PotencyDATA.CBGAP, PotencyDATA.D9THCP, PotencyDATA.D8THCP, 
                  PotencyDATA.THCAP, PotencyDATA.CBCP, PotencyDATA.METHOD, PotencyDATA.TEST, PotencyDATA.TotalTHC, PotencyDATA.TotalCBD, PotencyDATA.WETWEIGHT, 
                  PotencyDATA.CBDV, PotencyDATA.CBD, PotencyDATA.CBG, PotencyDATA.THCV, PotencyDATA.CBDA, PotencyDATA.CBN, PotencyDATA.CBGA, PotencyDATA.D9THC, 
                  PotencyDATA.D8THC, PotencyDATA.THCA, PotencyDATA.CBC
FROM     indexDATA INNER JOIN
                  PotencyDATA ON indexDATA.ID = PotencyDATA.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.dataDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.dataDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.dataDTDataTable dataTable = new fullDATASET.dataDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PestiDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PestiDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PestiDT";
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("LCMSID", "LCMSID");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("PestInputWt", "PestInputWt");
            tableMapping.ColumnMappings.Add("Abamectin", "Abamectin");
            tableMapping.ColumnMappings.Add("Acephate", "Acephate");
            tableMapping.ColumnMappings.Add("Acequinocyl", "Acequinocyl");
            tableMapping.ColumnMappings.Add("Acetamiprid", "Acetamiprid");
            tableMapping.ColumnMappings.Add("Aldicarb", "Aldicarb");
            tableMapping.ColumnMappings.Add("Azoxystrobin", "Azoxystrobin");
            tableMapping.ColumnMappings.Add("Bifenazate", "Bifenazate");
            tableMapping.ColumnMappings.Add("Bifenthrin", "Bifenthrin");
            tableMapping.ColumnMappings.Add("Boscalid", "Boscalid");
            tableMapping.ColumnMappings.Add("Captan", "Captan");
            tableMapping.ColumnMappings.Add("Carbaryl", "Carbaryl");
            tableMapping.ColumnMappings.Add("Carbofuran", "Carbofuran");
            tableMapping.ColumnMappings.Add("Chlorantranilprole", "Chlorantranilprole");
            tableMapping.ColumnMappings.Add("Chlordane", "Chlordane");
            tableMapping.ColumnMappings.Add("Chlorfenapyr", "Chlorfenapyr");
            tableMapping.ColumnMappings.Add("Chlorpyrifos", "Chlorpyrifos");
            tableMapping.ColumnMappings.Add("Clofentezine", "Clofentezine");
            tableMapping.ColumnMappings.Add("Coumaphos", "Coumaphos");
            tableMapping.ColumnMappings.Add("Cyfluthrin", "Cyfluthrin");
            tableMapping.ColumnMappings.Add("Cypermethrin", "Cypermethrin");
            tableMapping.ColumnMappings.Add("Daminozide", "Daminozide");
            tableMapping.ColumnMappings.Add("Dichlorvos", "Dichlorvos");
            tableMapping.ColumnMappings.Add("Diazinon", "Diazinon");
            tableMapping.ColumnMappings.Add("Dimethoate", "Dimethoate");
            tableMapping.ColumnMappings.Add("Dimethomorph", "Dimethomorph");
            tableMapping.ColumnMappings.Add("Ethoprophos", "Ethoprophos");
            tableMapping.ColumnMappings.Add("Etofenprox", "Etofenprox");
            tableMapping.ColumnMappings.Add("Etoxazole", "Etoxazole");
            tableMapping.ColumnMappings.Add("Fenhexamid", "Fenhexamid");
            tableMapping.ColumnMappings.Add("Fenoxycarb", "Fenoxycarb");
            tableMapping.ColumnMappings.Add("Fenpyroximate", "Fenpyroximate");
            tableMapping.ColumnMappings.Add("Fipronil", "Fipronil");
            tableMapping.ColumnMappings.Add("Flonicamid", "Flonicamid");
            tableMapping.ColumnMappings.Add("Fludioxonil", "Fludioxonil");
            tableMapping.ColumnMappings.Add("Hexythiazox", "Hexythiazox");
            tableMapping.ColumnMappings.Add("Imazalil", "Imazalil");
            tableMapping.ColumnMappings.Add("Imidacloprid", "Imidacloprid");
            tableMapping.ColumnMappings.Add("KresoximMethyl", "KresoximMethyl");
            tableMapping.ColumnMappings.Add("Malathion", "Malathion");
            tableMapping.ColumnMappings.Add("Metalaxyl", "Metalaxyl");
            tableMapping.ColumnMappings.Add("Methiocarb", "Methiocarb");
            tableMapping.ColumnMappings.Add("Methomyl", "Methomyl");
            tableMapping.ColumnMappings.Add("MethylParathion", "MethylParathion");
            tableMapping.ColumnMappings.Add("Mevinphos", "Mevinphos");
            tableMapping.ColumnMappings.Add("Myclobutanil", "Myclobutanil");
            tableMapping.ColumnMappings.Add("Naled", "Naled");
            tableMapping.ColumnMappings.Add("Oxamyl", "Oxamyl");
            tableMapping.ColumnMappings.Add("Pentachloronitrobenzene", "Pentachloronitrobenzene");
            tableMapping.ColumnMappings.Add("Permethrins", "Permethrins");
            tableMapping.ColumnMappings.Add("Phosmet", "Phosmet");
            tableMapping.ColumnMappings.Add("PiperonylButoxide", "PiperonylButoxide");
            tableMapping.ColumnMappings.Add("Prallethrin", "Prallethrin");
            tableMapping.ColumnMappings.Add("Propiconazole", "Propiconazole");
            tableMapping.ColumnMappings.Add("Propoxur", "Propoxur");
            tableMapping.ColumnMappings.Add("Pyrethrins", "Pyrethrins");
            tableMapping.ColumnMappings.Add("Pyridaben", "Pyridaben");
            tableMapping.ColumnMappings.Add("SpinetoramJ", "SpinetoramJ");
            tableMapping.ColumnMappings.Add("SpinetoramL", "SpinetoramL");
            tableMapping.ColumnMappings.Add("SpinosadA", "SpinosadA");
            tableMapping.ColumnMappings.Add("SpinosadD", "SpinosadD");
            tableMapping.ColumnMappings.Add("Spiromesifen", "Spiromesifen");
            tableMapping.ColumnMappings.Add("Spirotetramat", "Spirotetramat");
            tableMapping.ColumnMappings.Add("Spiroxamine", "Spiroxamine");
            tableMapping.ColumnMappings.Add("Tebuconazole", "Tebuconazole");
            tableMapping.ColumnMappings.Add("Thiacloprid", "Thiacloprid");
            tableMapping.ColumnMappings.Add("Thiamethoxam", "Thiamethoxam");
            tableMapping.ColumnMappings.Add("Trifloxystrobin", "Trifloxystrobin");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Paclobutrazol", "Paclobutrazol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER," +
                " indexDATA.EMAIL, indexDATA.SAMPLENAME, indexDATA.SAMPLETYPE, \r\n                " +
                "  indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOC" +
                "ATION, indexDATA.BATCHID, indexDATA.BATCHSIZE, \r\n                  indexDATA.SAM" +
                "PLESIZE, indexDATA.Remarks, indexDATA.SampleImage, PesticidesDATA.LCMSID, Pestic" +
                "idesDATA.GCMSID, PesticidesDATA.PestInputWt, \r\n                  PesticidesDATA." +
                "Abamectin, PesticidesDATA.Acephate, PesticidesDATA.Acequinocyl, PesticidesDATA.A" +
                "cetamiprid, PesticidesDATA.Aldicarb, PesticidesDATA.Azoxystrobin, \r\n            " +
                "      PesticidesDATA.Bifenazate, PesticidesDATA.Bifenthrin, PesticidesDATA.Bosca" +
                "lid, PesticidesDATA.Captan, PesticidesDATA.Carbaryl, PesticidesDATA.Carbofuran, " +
                "\r\n                  PesticidesDATA.Chlorantranilprole, PesticidesDATA.Chlordane," +
                " PesticidesDATA.Chlorfenapyr, PesticidesDATA.Chlorpyrifos, PesticidesDATA.Clofen" +
                "tezine, \r\n                  PesticidesDATA.Coumaphos, PesticidesDATA.Cyfluthrin," +
                " PesticidesDATA.Cypermethrin, PesticidesDATA.Daminozide, PesticidesDATA.Dichlorv" +
                "os, PesticidesDATA.Diazinon, \r\n                  PesticidesDATA.Dimethoate, Pest" +
                "icidesDATA.Dimethomorph, PesticidesDATA.Ethoprophos, PesticidesDATA.Etofenprox, " +
                "PesticidesDATA.Etoxazole, \r\n                  PesticidesDATA.Fenhexamid, Pestici" +
                "desDATA.Fenoxycarb, PesticidesDATA.Fenpyroximate, PesticidesDATA.Fipronil, Pesti" +
                "cidesDATA.Flonicamid, PesticidesDATA.Fludioxonil, \r\n                  Pesticides" +
                "DATA.Hexythiazox, PesticidesDATA.Imazalil, PesticidesDATA.Imidacloprid, Pesticid" +
                "esDATA.KresoximMethyl, PesticidesDATA.Malathion, PesticidesDATA.Metalaxyl, \r\n   " +
                "               PesticidesDATA.Methiocarb, PesticidesDATA.Methomyl, PesticidesDAT" +
                "A.MethylParathion, PesticidesDATA.Mevinphos, PesticidesDATA.Myclobutanil, Pestic" +
                "idesDATA.Naled, \r\n                  PesticidesDATA.Oxamyl, PesticidesDATA.Pentac" +
                "hloronitrobenzene, PesticidesDATA.Permethrins, PesticidesDATA.Phosmet, Pesticide" +
                "sDATA.PiperonylButoxide, \r\n                  PesticidesDATA.Prallethrin, Pestici" +
                "desDATA.Propiconazole, PesticidesDATA.Propoxur, PesticidesDATA.Pyrethrins, Pesti" +
                "cidesDATA.Pyridaben, PesticidesDATA.SpinetoramJ, \r\n                  PesticidesD" +
                "ATA.SpinetoramL, PesticidesDATA.SpinosadA, PesticidesDATA.SpinosadD, PesticidesD" +
                "ATA.Spiromesifen, PesticidesDATA.Spirotetramat, \r\n                  PesticidesDA" +
                "TA.Spiroxamine, PesticidesDATA.Tebuconazole, PesticidesDATA.Thiacloprid, Pestici" +
                "desDATA.Thiamethoxam, PesticidesDATA.Trifloxystrobin, indexDATA.ID, \r\n          " +
                "        PesticidesDATA.Paclobutrazol\r\nFROM     indexDATA INNER JOIN\r\n           " +
                "       PesticidesDATA ON indexDATA.ID = PesticidesDATA.Id AND indexDATA.ID = Pes" +
                "ticidesDATA.Id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.PestiDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.PestiDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.PestiDTDataTable dataTable = new fullDATASET.PestiDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SolventDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SolventDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SolventDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("SolventInputWeight", "SolventInputWeight");
            tableMapping.ColumnMappings.Add("Dichloroethane", "Dichloroethane");
            tableMapping.ColumnMappings.Add("Benzene", "Benzene");
            tableMapping.ColumnMappings.Add("Chloroform", "Chloroform");
            tableMapping.ColumnMappings.Add("EthyleneOxide", "EthyleneOxide");
            tableMapping.ColumnMappings.Add("MethyleneChloride", "MethyleneChloride");
            tableMapping.ColumnMappings.Add("Trichloroethylene", "Trichloroethylene");
            tableMapping.ColumnMappings.Add("Acetone", "Acetone");
            tableMapping.ColumnMappings.Add("Acetonitrile", "Acetonitrile");
            tableMapping.ColumnMappings.Add("Butane", "Butane");
            tableMapping.ColumnMappings.Add("Ethanol", "Ethanol");
            tableMapping.ColumnMappings.Add("EthylAcetate", "EthylAcetate");
            tableMapping.ColumnMappings.Add("EthylEther", "EthylEther");
            tableMapping.ColumnMappings.Add("Heptane", "Heptane");
            tableMapping.ColumnMappings.Add("Hexane", "Hexane");
            tableMapping.ColumnMappings.Add("IsopropylAlcohol", "IsopropylAlcohol");
            tableMapping.ColumnMappings.Add("Methanol", "Methanol");
            tableMapping.ColumnMappings.Add("Pentane", "Pentane");
            tableMapping.ColumnMappings.Add("Propane", "Propane");
            tableMapping.ColumnMappings.Add("Toluene", "Toluene");
            tableMapping.ColumnMappings.Add("orthoXylene", "orthoXylene");
            tableMapping.ColumnMappings.Add("metaXylene", "metaXylene");
            tableMapping.ColumnMappings.Add("paraXylene", "paraXylene");
            tableMapping.ColumnMappings.Add("Isobutane", "Isobutane");
            tableMapping.ColumnMappings.Add("nHexane", "nHexane");
            tableMapping.ColumnMappings.Add("DiethylEther", "DiethylEther");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, SolventsDATA.SolventInputWeight, SolventsDATA.Dichloroethane, SolventsDATA.Benzene, SolventsDATA.Chloroform, 
                  SolventsDATA.EthyleneOxide, SolventsDATA.MethyleneChloride, SolventsDATA.Trichloroethylene, SolventsDATA.Acetone, SolventsDATA.Acetonitrile, 
                  SolventsDATA.Butane, SolventsDATA.Ethanol, SolventsDATA.EthylAcetate, SolventsDATA.EthylEther, SolventsDATA.Heptane, SolventsDATA.Hexane, 
                  SolventsDATA.IsopropylAlcohol, SolventsDATA.Methanol, SolventsDATA.Pentane, SolventsDATA.Propane, SolventsDATA.Toluene, SolventsDATA.orthoXylene, 
                  SolventsDATA.metaXylene, SolventsDATA.paraXylene, SolventsDATA.Isobutane, SolventsDATA.nHexane, SolventsDATA.DiethylEther
FROM     indexDATA INNER JOIN
                  SolventsDATA ON indexDATA.ID = SolventsDATA.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.SolventDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.SolventDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.SolventDTDataTable dataTable = new fullDATASET.SolventDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class metalsDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public metalsDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "metalsDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("AASID", "AASID");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("MetalsWeight", "MetalsWeight");
            tableMapping.ColumnMappings.Add("Arsenic", "Arsenic");
            tableMapping.ColumnMappings.Add("Cadmium", "Cadmium");
            tableMapping.ColumnMappings.Add("Lead", "Lead");
            tableMapping.ColumnMappings.Add("Mercury", "Mercury");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, indexDATA.Remarks, metalsDATA.AASID, metalsDATA.Method, metalsDATA.Technique, metalsDATA.MetalsWeight, 
                  metalsDATA.Arsenic, metalsDATA.Cadmium, metalsDATA.Lead, metalsDATA.Mercury
FROM     indexDATA INNER JOIN
                  metalsDATA ON indexDATA.ID = metalsDATA.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.metalsDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.metalsDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.metalsDTDataTable dataTable = new fullDATASET.metalsDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class microbialDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public microbialDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "microbialDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("MicrobialWeight", "MicrobialWeight");
            tableMapping.ColumnMappings.Add("Aspergillus", "Aspergillus");
            tableMapping.ColumnMappings.Add("ShigaToxin", "ShigaToxin");
            tableMapping.ColumnMappings.Add("Salmonella", "Salmonella");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, microbialDATA.Method, microbialDATA.Technique, microbialDATA.MicrobialWeight, microbialDATA.Aspergillus, 
                  microbialDATA.ShigaToxin, microbialDATA.Salmonella
FROM     indexDATA INNER JOIN
                  microbialDATA ON indexDATA.ID = microbialDATA.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.microbialDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.microbialDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.microbialDTDataTable dataTable = new fullDATASET.microbialDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mycotoxinDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public mycotoxinDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mycotoxinDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("LCMSID", "LCMSID");
            tableMapping.ColumnMappings.Add("MycoWeight", "MycoWeight");
            tableMapping.ColumnMappings.Add("AB1", "AB1");
            tableMapping.ColumnMappings.Add("AB2", "AB2");
            tableMapping.ColumnMappings.Add("AG1", "AG1");
            tableMapping.ColumnMappings.Add("AG2", "AG2");
            tableMapping.ColumnMappings.Add("OTA", "OTA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.*, mycotoxinsDATA.Method, mycotoxinsDATA.Technique, mycotoxinsDATA.LCMSID, mycotoxinsDATA.MycoWeight, mycotoxinsDATA.AB1, mycotoxinsDATA.AB2, 
                  mycotoxinsDATA.AG1, mycotoxinsDATA.AG2, mycotoxinsDATA.OTA
FROM     indexDATA INNER JOIN
                  mycotoxinsDATA ON indexDATA.ID = mycotoxinsDATA.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.mycotoxinDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.mycotoxinDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.mycotoxinDTDataTable dataTable = new fullDATASET.mycotoxinDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class wADTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public wADTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "wADT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("Aw", "Aw");
            tableMapping.ColumnMappings.Add("address", "address");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, indexDATA.Remarks, indexDATA.SampleImage, wADATA.Method, wADATA.Technique, wADATA.Aw, 
                  customerDATA.address
FROM     indexDATA INNER JOIN
                  wADATA ON indexDATA.ID = wADATA.ID INNER JOIN
                  customerDATA ON indexDATA.ID = customerDATA.id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.wADTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.wADTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.wADTDataTable dataTable = new fullDATASET.wADTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TerpeneDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TerpeneDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TerpeneDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("Method", "Method");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("TerpWT", "TerpWT");
            tableMapping.ColumnMappings.Add("aPinene", "aPinene");
            tableMapping.ColumnMappings.Add("Camphene", "Camphene");
            tableMapping.ColumnMappings.Add("bMyrcene", "bMyrcene");
            tableMapping.ColumnMappings.Add("bPinene", "bPinene");
            tableMapping.ColumnMappings.Add("d3Carene", "d3Carene");
            tableMapping.ColumnMappings.Add("aTerpinene", "aTerpinene");
            tableMapping.ColumnMappings.Add("Ocimene", "Ocimene");
            tableMapping.ColumnMappings.Add("Limonene", "Limonene");
            tableMapping.ColumnMappings.Add("pCymene", "pCymene");
            tableMapping.ColumnMappings.Add("yTerpinene", "yTerpinene");
            tableMapping.ColumnMappings.Add("Terpinolene", "Terpinolene");
            tableMapping.ColumnMappings.Add("Linalool", "Linalool");
            tableMapping.ColumnMappings.Add("Isopulegol", "Isopulegol");
            tableMapping.ColumnMappings.Add("Geraniol", "Geraniol");
            tableMapping.ColumnMappings.Add("bCaryophyllene", "bCaryophyllene");
            tableMapping.ColumnMappings.Add("aHumulene", "aHumulene");
            tableMapping.ColumnMappings.Add("Nerolidol", "Nerolidol");
            tableMapping.ColumnMappings.Add("Guaiol", "Guaiol");
            tableMapping.ColumnMappings.Add("aBisabolol", "aBisabolol");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("license", "license");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, indexDATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, 
                  indexDATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE, indexDATA.LOCATION, indexDATA.BATCHID, 
                  indexDATA.BATCHSIZE, indexDATA.SAMPLESIZE, indexDATA.Remarks, indexDATA.SampleImage, terpenesDATA.Method, terpenesDATA.Technique, 
                  terpenesDATA.GCMSID, terpenesDATA.TerpWT, terpenesDATA.aPinene, terpenesDATA.Camphene, terpenesDATA.bMyrcene, terpenesDATA.bPinene, 
                  terpenesDATA.d3Carene, terpenesDATA.aTerpinene, terpenesDATA.Ocimene, terpenesDATA.Limonene, terpenesDATA.pCymene, terpenesDATA.yTerpinene, 
                  terpenesDATA.Terpinolene, terpenesDATA.Linalool, terpenesDATA.Isopulegol, terpenesDATA.Geraniol, terpenesDATA.bCaryophyllene, terpenesDATA.aHumulene, 
                  terpenesDATA.Nerolidol, terpenesDATA.Guaiol, terpenesDATA.aBisabolol, customerDATA.address, customerDATA.license
FROM     indexDATA INNER JOIN
                  terpenesDATA ON indexDATA.ID = terpenesDATA.ID INNER JOIN
                  customerDATA ON indexDATA.ID = customerDATA.id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.TerpeneDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.TerpeneDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.TerpeneDTDataTable dataTable = new fullDATASET.TerpeneDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class complianceDTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public complianceDTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "complianceDT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("SAMPLEID", "SAMPLEID");
            tableMapping.ColumnMappings.Add("CHEMIST", "CHEMIST");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("SAMPLENAME", "SAMPLENAME");
            tableMapping.ColumnMappings.Add("SAMPLETYPE", "SAMPLETYPE");
            tableMapping.ColumnMappings.Add("DISTRIBUTOR", "DISTRIBUTOR");
            tableMapping.ColumnMappings.Add("PRODUCER", "PRODUCER");
            tableMapping.ColumnMappings.Add("SAMPLEDATE", "SAMPLEDATE");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("BATCHID", "BATCHID");
            tableMapping.ColumnMappings.Add("BATCHSIZE", "BATCHSIZE");
            tableMapping.ColumnMappings.Add("SAMPLESIZE", "SAMPLESIZE");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("SampleImage", "SampleImage");
            tableMapping.ColumnMappings.Add("TotalCBD", "TotalCBD");
            tableMapping.ColumnMappings.Add("TotalTHC", "TotalTHC");
            tableMapping.ColumnMappings.Add("TEST", "TEST");
            tableMapping.ColumnMappings.Add("METHOD", "METHOD");
            tableMapping.ColumnMappings.Add("CBCP", "CBCP");
            tableMapping.ColumnMappings.Add("THCAP", "THCAP");
            tableMapping.ColumnMappings.Add("D8THCP", "D8THCP");
            tableMapping.ColumnMappings.Add("D9THCP", "D9THCP");
            tableMapping.ColumnMappings.Add("CBGAP", "CBGAP");
            tableMapping.ColumnMappings.Add("CBNP", "CBNP");
            tableMapping.ColumnMappings.Add("CBDAP", "CBDAP");
            tableMapping.ColumnMappings.Add("THCVP", "THCVP");
            tableMapping.ColumnMappings.Add("CBGP", "CBGP");
            tableMapping.ColumnMappings.Add("CBDP", "CBDP");
            tableMapping.ColumnMappings.Add("CBDVP", "CBDVP");
            tableMapping.ColumnMappings.Add("TargetCBD", "TargetCBD");
            tableMapping.ColumnMappings.Add("TargetTHC", "TargetTHC");
            tableMapping.ColumnMappings.Add("WETWEIGHT", "WETWEIGHT");
            tableMapping.ColumnMappings.Add("HPLCWEIGHT", "HPLCWEIGHT");
            tableMapping.ColumnMappings.Add("DRYWEIGHT", "DRYWEIGHT");
            tableMapping.ColumnMappings.Add("CBC", "CBC");
            tableMapping.ColumnMappings.Add("THCA", "THCA");
            tableMapping.ColumnMappings.Add("D8THC", "D8THC");
            tableMapping.ColumnMappings.Add("D9THC", "D9THC");
            tableMapping.ColumnMappings.Add("CBGA", "CBGA");
            tableMapping.ColumnMappings.Add("CBN", "CBN");
            tableMapping.ColumnMappings.Add("CBDA", "CBDA");
            tableMapping.ColumnMappings.Add("THCV", "THCV");
            tableMapping.ColumnMappings.Add("CBD", "CBD");
            tableMapping.ColumnMappings.Add("CBG", "CBG");
            tableMapping.ColumnMappings.Add("CBDV", "CBDV");
            tableMapping.ColumnMappings.Add("PotencyID", "PotencyID");
            tableMapping.ColumnMappings.Add("license", "license");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("LCMSID", "LCMSID");
            tableMapping.ColumnMappings.Add("GCMSID", "GCMSID");
            tableMapping.ColumnMappings.Add("PestInputWt", "PestInputWt");
            tableMapping.ColumnMappings.Add("Abamectin", "Abamectin");
            tableMapping.ColumnMappings.Add("Acephate", "Acephate");
            tableMapping.ColumnMappings.Add("Acequinocyl", "Acequinocyl");
            tableMapping.ColumnMappings.Add("Acetamiprid", "Acetamiprid");
            tableMapping.ColumnMappings.Add("Aldicarb", "Aldicarb");
            tableMapping.ColumnMappings.Add("Azoxystrobin", "Azoxystrobin");
            tableMapping.ColumnMappings.Add("Bifenazate", "Bifenazate");
            tableMapping.ColumnMappings.Add("Bifenthrin", "Bifenthrin");
            tableMapping.ColumnMappings.Add("Boscalid", "Boscalid");
            tableMapping.ColumnMappings.Add("Captan", "Captan");
            tableMapping.ColumnMappings.Add("Carbaryl", "Carbaryl");
            tableMapping.ColumnMappings.Add("Carbofuran", "Carbofuran");
            tableMapping.ColumnMappings.Add("Chlorantranilprole", "Chlorantranilprole");
            tableMapping.ColumnMappings.Add("Chlordane", "Chlordane");
            tableMapping.ColumnMappings.Add("Chlorfenapyr", "Chlorfenapyr");
            tableMapping.ColumnMappings.Add("Chlorpyrifos", "Chlorpyrifos");
            tableMapping.ColumnMappings.Add("Clofentezine", "Clofentezine");
            tableMapping.ColumnMappings.Add("Coumaphos", "Coumaphos");
            tableMapping.ColumnMappings.Add("Cyfluthrin", "Cyfluthrin");
            tableMapping.ColumnMappings.Add("Cypermethrin", "Cypermethrin");
            tableMapping.ColumnMappings.Add("Daminozide", "Daminozide");
            tableMapping.ColumnMappings.Add("Dichlorvos", "Dichlorvos");
            tableMapping.ColumnMappings.Add("Diazinon", "Diazinon");
            tableMapping.ColumnMappings.Add("Dimethoate", "Dimethoate");
            tableMapping.ColumnMappings.Add("Dimethomorph", "Dimethomorph");
            tableMapping.ColumnMappings.Add("Ethoprophos", "Ethoprophos");
            tableMapping.ColumnMappings.Add("Etofenprox", "Etofenprox");
            tableMapping.ColumnMappings.Add("Etoxazole", "Etoxazole");
            tableMapping.ColumnMappings.Add("Fenhexamid", "Fenhexamid");
            tableMapping.ColumnMappings.Add("Fenoxycarb", "Fenoxycarb");
            tableMapping.ColumnMappings.Add("Fenpyroximate", "Fenpyroximate");
            tableMapping.ColumnMappings.Add("Fipronil", "Fipronil");
            tableMapping.ColumnMappings.Add("Flonicamid", "Flonicamid");
            tableMapping.ColumnMappings.Add("Fludioxonil", "Fludioxonil");
            tableMapping.ColumnMappings.Add("Hexythiazox", "Hexythiazox");
            tableMapping.ColumnMappings.Add("Imazalil", "Imazalil");
            tableMapping.ColumnMappings.Add("Imidacloprid", "Imidacloprid");
            tableMapping.ColumnMappings.Add("KresoximMethyl", "KresoximMethyl");
            tableMapping.ColumnMappings.Add("Malathion", "Malathion");
            tableMapping.ColumnMappings.Add("Metalaxyl", "Metalaxyl");
            tableMapping.ColumnMappings.Add("Methiocarb", "Methiocarb");
            tableMapping.ColumnMappings.Add("Methomyl", "Methomyl");
            tableMapping.ColumnMappings.Add("MethylParathion", "MethylParathion");
            tableMapping.ColumnMappings.Add("Mevinphos", "Mevinphos");
            tableMapping.ColumnMappings.Add("Myclobutanil", "Myclobutanil");
            tableMapping.ColumnMappings.Add("Naled", "Naled");
            tableMapping.ColumnMappings.Add("Oxamyl", "Oxamyl");
            tableMapping.ColumnMappings.Add("Pentachloronitrobenzene", "Pentachloronitrobenzene");
            tableMapping.ColumnMappings.Add("Permethrins", "Permethrins");
            tableMapping.ColumnMappings.Add("Phosmet", "Phosmet");
            tableMapping.ColumnMappings.Add("PiperonylButoxide", "PiperonylButoxide");
            tableMapping.ColumnMappings.Add("Prallethrin", "Prallethrin");
            tableMapping.ColumnMappings.Add("Propiconazole", "Propiconazole");
            tableMapping.ColumnMappings.Add("Propoxur", "Propoxur");
            tableMapping.ColumnMappings.Add("Pyrethrins", "Pyrethrins");
            tableMapping.ColumnMappings.Add("Pyridaben", "Pyridaben");
            tableMapping.ColumnMappings.Add("SpinetoramJ", "SpinetoramJ");
            tableMapping.ColumnMappings.Add("SpinetoramL", "SpinetoramL");
            tableMapping.ColumnMappings.Add("SpinosadA", "SpinosadA");
            tableMapping.ColumnMappings.Add("SpinosadD", "SpinosadD");
            tableMapping.ColumnMappings.Add("Spiromesifen", "Spiromesifen");
            tableMapping.ColumnMappings.Add("Spirotetramat", "Spirotetramat");
            tableMapping.ColumnMappings.Add("Spiroxamine", "Spiroxamine");
            tableMapping.ColumnMappings.Add("Tebuconazole", "Tebuconazole");
            tableMapping.ColumnMappings.Add("Thiacloprid", "Thiacloprid");
            tableMapping.ColumnMappings.Add("Thiamethoxam", "Thiamethoxam");
            tableMapping.ColumnMappings.Add("Trifloxystrobin", "Trifloxystrobin");
            tableMapping.ColumnMappings.Add("Paclobutrazol", "Paclobutrazol");
            tableMapping.ColumnMappings.Add("AASID", "AASID");
            tableMapping.ColumnMappings.Add("Technique", "Technique");
            tableMapping.ColumnMappings.Add("MetalsWeight", "MetalsWeight");
            tableMapping.ColumnMappings.Add("Arsenic", "Arsenic");
            tableMapping.ColumnMappings.Add("Cadmium", "Cadmium");
            tableMapping.ColumnMappings.Add("Lead", "Lead");
            tableMapping.ColumnMappings.Add("Mercury", "Mercury");
            tableMapping.ColumnMappings.Add("MicrobialWeight", "MicrobialWeight");
            tableMapping.ColumnMappings.Add("Aspergillus", "Aspergillus");
            tableMapping.ColumnMappings.Add("ShigaToxin", "ShigaToxin");
            tableMapping.ColumnMappings.Add("Salmonella", "Salmonella");
            tableMapping.ColumnMappings.Add("TerpWT", "TerpWT");
            tableMapping.ColumnMappings.Add("aPinene", "aPinene");
            tableMapping.ColumnMappings.Add("Camphene", "Camphene");
            tableMapping.ColumnMappings.Add("bMyrcene", "bMyrcene");
            tableMapping.ColumnMappings.Add("bPinene", "bPinene");
            tableMapping.ColumnMappings.Add("d3Carene", "d3Carene");
            tableMapping.ColumnMappings.Add("aTerpinene", "aTerpinene");
            tableMapping.ColumnMappings.Add("Ocimene", "Ocimene");
            tableMapping.ColumnMappings.Add("Limonene", "Limonene");
            tableMapping.ColumnMappings.Add("pCymene", "pCymene");
            tableMapping.ColumnMappings.Add("yTerpinene", "yTerpinene");
            tableMapping.ColumnMappings.Add("Terpinolene", "Terpinolene");
            tableMapping.ColumnMappings.Add("Linalool", "Linalool");
            tableMapping.ColumnMappings.Add("Isopulegol", "Isopulegol");
            tableMapping.ColumnMappings.Add("Geraniol", "Geraniol");
            tableMapping.ColumnMappings.Add("bCaryophyllene", "bCaryophyllene");
            tableMapping.ColumnMappings.Add("aHumulene", "aHumulene");
            tableMapping.ColumnMappings.Add("Nerolidol", "Nerolidol");
            tableMapping.ColumnMappings.Add("Guaiol", "Guaiol");
            tableMapping.ColumnMappings.Add("aBisabolol", "aBisabolol");
            tableMapping.ColumnMappings.Add("Aw", "Aw");
            tableMapping.ColumnMappings.Add("SampleIdPesticides", "SampleIdPesticides");
            tableMapping.ColumnMappings.Add("MethodMetals", "MethodMetals");
            tableMapping.ColumnMappings.Add("TechniqueMicrobial", "TechniqueMicrobial");
            tableMapping.ColumnMappings.Add("MethodMicrobial", "MethodMicrobial");
            tableMapping.ColumnMappings.Add("MethodTerpenes", "MethodTerpenes");
            tableMapping.ColumnMappings.Add("TechniqueTerpenes", "TechniqueTerpenes");
            tableMapping.ColumnMappings.Add("GCMSIdTerpenes", "GCMSIdTerpenes");
            tableMapping.ColumnMappings.Add("MethodAw", "MethodAw");
            tableMapping.ColumnMappings.Add("TechniqueAw", "TechniqueAw");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LIMS_system_Prototype.Properties.Settings.Default.PrototypeDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT indexDATA.ID, indexDATA.DATE, indexDATA.SAMPLEID, indexDATA.CHEMIST, index" +
                "DATA.CUSTOMER, indexDATA.EMAIL, indexDATA.SAMPLENAME, \r\n                  indexD" +
                "ATA.SAMPLETYPE, indexDATA.DISTRIBUTOR, indexDATA.PRODUCER, indexDATA.SAMPLEDATE," +
                " indexDATA.LOCATION, indexDATA.BATCHID, \r\n                  indexDATA.BATCHSIZE," +
                " indexDATA.SAMPLESIZE, indexDATA.Remarks, indexDATA.SampleImage, PotencyDATA.Tot" +
                "alCBD, PotencyDATA.TotalTHC, PotencyDATA.TEST, \r\n                  PotencyDATA.M" +
                "ETHOD, PotencyDATA.CBCP, PotencyDATA.THCAP, PotencyDATA.D8THCP, PotencyDATA.D9TH" +
                "CP, PotencyDATA.CBGAP, PotencyDATA.CBNP, \r\n                  PotencyDATA.CBDAP, " +
                "PotencyDATA.THCVP, PotencyDATA.CBGP, PotencyDATA.CBDP, PotencyDATA.CBDVP, Potenc" +
                "yDATA.TargetCBD, PotencyDATA.TargetTHC, \r\n                  PotencyDATA.WETWEIGH" +
                "T, PotencyDATA.HPLCWEIGHT, PotencyDATA.DRYWEIGHT, PotencyDATA.CBC, PotencyDATA.T" +
                "HCA, PotencyDATA.D8THC, PotencyDATA.D9THC, \r\n                  PotencyDATA.CBGA," +
                " PotencyDATA.CBN, PotencyDATA.CBDA, PotencyDATA.THCV, PotencyDATA.CBD, PotencyDA" +
                "TA.CBG, PotencyDATA.CBDV, PotencyDATA.PotencyID, \r\n                  customerDAT" +
                "A.license, customerDATA.address, PesticidesDATA.SampleID AS SampleIdPesticides, " +
                "PesticidesDATA.LCMSID, PesticidesDATA.GCMSID, \r\n                  PesticidesDATA" +
                ".PestInputWt, PesticidesDATA.Abamectin, PesticidesDATA.Acephate, PesticidesDATA." +
                "Acequinocyl, PesticidesDATA.Acetamiprid, PesticidesDATA.Aldicarb, \r\n            " +
                "      PesticidesDATA.Azoxystrobin, PesticidesDATA.Bifenazate, PesticidesDATA.Bif" +
                "enthrin, PesticidesDATA.Boscalid, PesticidesDATA.Captan, PesticidesDATA.Carbaryl" +
                ", \r\n                  PesticidesDATA.Carbofuran, PesticidesDATA.Chlorantranilpro" +
                "le, PesticidesDATA.Chlordane, PesticidesDATA.Chlorfenapyr, PesticidesDATA.Chlorp" +
                "yrifos, \r\n                  PesticidesDATA.Clofentezine, PesticidesDATA.Coumapho" +
                "s, PesticidesDATA.Cyfluthrin, PesticidesDATA.Cypermethrin, PesticidesDATA.Damino" +
                "zide, \r\n                  PesticidesDATA.Dichlorvos, PesticidesDATA.Diazinon, Pe" +
                "sticidesDATA.Dimethoate, PesticidesDATA.Dimethomorph, PesticidesDATA.Ethoprophos" +
                ", \r\n                  PesticidesDATA.Etofenprox, PesticidesDATA.Etoxazole, Pesti" +
                "cidesDATA.Fenhexamid, PesticidesDATA.Fenoxycarb, PesticidesDATA.Fenpyroximate, P" +
                "esticidesDATA.Fipronil, \r\n                  PesticidesDATA.Flonicamid, Pesticide" +
                "sDATA.Fludioxonil, PesticidesDATA.Hexythiazox, PesticidesDATA.Imazalil, Pesticid" +
                "esDATA.Imidacloprid, \r\n                  PesticidesDATA.KresoximMethyl, Pesticid" +
                "esDATA.Malathion, PesticidesDATA.Metalaxyl, PesticidesDATA.Methiocarb, Pesticide" +
                "sDATA.Methomyl, \r\n                  PesticidesDATA.MethylParathion, PesticidesDA" +
                "TA.Mevinphos, PesticidesDATA.Myclobutanil, PesticidesDATA.Naled, PesticidesDATA." +
                "Oxamyl, \r\n                  PesticidesDATA.Pentachloronitrobenzene, PesticidesDA" +
                "TA.Permethrins, PesticidesDATA.Phosmet, PesticidesDATA.PiperonylButoxide, Pestic" +
                "idesDATA.Prallethrin, \r\n                  PesticidesDATA.Propiconazole, Pesticid" +
                "esDATA.Propoxur, PesticidesDATA.Pyrethrins, PesticidesDATA.Pyridaben, Pesticides" +
                "DATA.SpinetoramJ, \r\n                  PesticidesDATA.SpinetoramL, PesticidesDATA" +
                ".SpinosadA, PesticidesDATA.SpinosadD, PesticidesDATA.Spiromesifen, PesticidesDAT" +
                "A.Spirotetramat, \r\n                  PesticidesDATA.Spiroxamine, PesticidesDATA." +
                "Tebuconazole, PesticidesDATA.Thiacloprid, PesticidesDATA.Thiamethoxam, Pesticide" +
                "sDATA.Trifloxystrobin, \r\n                  PesticidesDATA.Paclobutrazol, metalsD" +
                "ATA.AASID, metalsDATA.Method AS MethodMetals, metalsDATA.Technique, metalsDATA.M" +
                "etalsWeight, metalsDATA.Arsenic, \r\n                  metalsDATA.Cadmium, metalsD" +
                "ATA.Lead, metalsDATA.Mercury, microbialDATA.Technique AS TechniqueMicrobial, mic" +
                "robialDATA.Method AS MethodMicrobial, \r\n                  microbialDATA.Microbia" +
                "lWeight, microbialDATA.Aspergillus, microbialDATA.ShigaToxin, microbialDATA.Salm" +
                "onella, terpenesDATA.Method AS MethodTerpenes, \r\n                  terpenesDATA." +
                "Technique AS TechniqueTerpenes, terpenesDATA.GCMSID AS GCMSIdTerpenes, terpenesD" +
                "ATA.TerpWT, terpenesDATA.aPinene, terpenesDATA.Camphene, \r\n                  ter" +
                "penesDATA.bMyrcene, terpenesDATA.bPinene, terpenesDATA.d3Carene, terpenesDATA.aT" +
                "erpinene, terpenesDATA.Ocimene, terpenesDATA.Limonene, \r\n                  terpe" +
                "nesDATA.pCymene, terpenesDATA.yTerpinene, terpenesDATA.Terpinolene, terpenesDATA" +
                ".Linalool, terpenesDATA.Isopulegol, terpenesDATA.Geraniol, \r\n                  t" +
                "erpenesDATA.bCaryophyllene, terpenesDATA.aHumulene, terpenesDATA.Nerolidol, terp" +
                "enesDATA.Guaiol, terpenesDATA.aBisabolol, wADATA.Method AS MethodAw, \r\n         " +
                "         wADATA.Technique AS TechniqueAw, wADATA.Aw\r\nFROM     indexDATA INNER JO" +
                "IN\r\n                  customerDATA ON indexDATA.ID = customerDATA.id INNER JOIN\r" +
                "\n                  PesticidesDATA ON indexDATA.ID = PesticidesDATA.Id INNER JOIN" +
                "\r\n                  metalsDATA ON indexDATA.ID = metalsDATA.ID INNER JOIN\r\n     " +
                "             microbialDATA ON indexDATA.ID = microbialDATA.ID INNER JOIN\r\n      " +
                "            mycotoxinsDATA ON indexDATA.ID = mycotoxinsDATA.ID INNER JOIN\r\n     " +
                "             SolventsDATA ON indexDATA.ID = SolventsDATA.ID INNER JOIN\r\n        " +
                "          terpenesDATA ON indexDATA.ID = terpenesDATA.ID INNER JOIN\r\n           " +
                "       wADATA ON indexDATA.ID = wADATA.ID CROSS JOIN\r\n                  PotencyD" +
                "ATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(fullDATASET.complianceDTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual fullDATASET.complianceDTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            fullDATASET.complianceDTDataTable dataTable = new fullDATASET.complianceDTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private customerDATATableAdapter _customerDATATableAdapter;
        
        private indexDATATableAdapter _indexDATATableAdapter;
        
        private metalsDATATableAdapter _metalsDATATableAdapter;
        
        private microbialDATATableAdapter _microbialDATATableAdapter;
        
        private mycotoxinsDATATableAdapter _mycotoxinsDATATableAdapter;
        
        private PesticidesDATATableAdapter _pesticidesDATATableAdapter;
        
        private PotencyDATATableAdapter _potencyDATATableAdapter;
        
        private SolventsDATATableAdapter _solventsDATATableAdapter;
        
        private terpenesDATATableAdapter _terpenesDATATableAdapter;
        
        private wADATATableAdapter _wADATATableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public customerDATATableAdapter customerDATATableAdapter {
            get {
                return this._customerDATATableAdapter;
            }
            set {
                this._customerDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public indexDATATableAdapter indexDATATableAdapter {
            get {
                return this._indexDATATableAdapter;
            }
            set {
                this._indexDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public metalsDATATableAdapter metalsDATATableAdapter {
            get {
                return this._metalsDATATableAdapter;
            }
            set {
                this._metalsDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public microbialDATATableAdapter microbialDATATableAdapter {
            get {
                return this._microbialDATATableAdapter;
            }
            set {
                this._microbialDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public mycotoxinsDATATableAdapter mycotoxinsDATATableAdapter {
            get {
                return this._mycotoxinsDATATableAdapter;
            }
            set {
                this._mycotoxinsDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PesticidesDATATableAdapter PesticidesDATATableAdapter {
            get {
                return this._pesticidesDATATableAdapter;
            }
            set {
                this._pesticidesDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PotencyDATATableAdapter PotencyDATATableAdapter {
            get {
                return this._potencyDATATableAdapter;
            }
            set {
                this._potencyDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SolventsDATATableAdapter SolventsDATATableAdapter {
            get {
                return this._solventsDATATableAdapter;
            }
            set {
                this._solventsDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public terpenesDATATableAdapter terpenesDATATableAdapter {
            get {
                return this._terpenesDATATableAdapter;
            }
            set {
                this._terpenesDATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public wADATATableAdapter wADATATableAdapter {
            get {
                return this._wADATATableAdapter;
            }
            set {
                this._wADATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._customerDATATableAdapter != null) 
                            && (this._customerDATATableAdapter.Connection != null))) {
                    return this._customerDATATableAdapter.Connection;
                }
                if (((this._indexDATATableAdapter != null) 
                            && (this._indexDATATableAdapter.Connection != null))) {
                    return this._indexDATATableAdapter.Connection;
                }
                if (((this._metalsDATATableAdapter != null) 
                            && (this._metalsDATATableAdapter.Connection != null))) {
                    return this._metalsDATATableAdapter.Connection;
                }
                if (((this._microbialDATATableAdapter != null) 
                            && (this._microbialDATATableAdapter.Connection != null))) {
                    return this._microbialDATATableAdapter.Connection;
                }
                if (((this._mycotoxinsDATATableAdapter != null) 
                            && (this._mycotoxinsDATATableAdapter.Connection != null))) {
                    return this._mycotoxinsDATATableAdapter.Connection;
                }
                if (((this._pesticidesDATATableAdapter != null) 
                            && (this._pesticidesDATATableAdapter.Connection != null))) {
                    return this._pesticidesDATATableAdapter.Connection;
                }
                if (((this._potencyDATATableAdapter != null) 
                            && (this._potencyDATATableAdapter.Connection != null))) {
                    return this._potencyDATATableAdapter.Connection;
                }
                if (((this._solventsDATATableAdapter != null) 
                            && (this._solventsDATATableAdapter.Connection != null))) {
                    return this._solventsDATATableAdapter.Connection;
                }
                if (((this._terpenesDATATableAdapter != null) 
                            && (this._terpenesDATATableAdapter.Connection != null))) {
                    return this._terpenesDATATableAdapter.Connection;
                }
                if (((this._wADATATableAdapter != null) 
                            && (this._wADATATableAdapter.Connection != null))) {
                    return this._wADATATableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._customerDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._indexDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._metalsDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._microbialDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mycotoxinsDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pesticidesDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._potencyDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._solventsDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._terpenesDATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wADATATableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(fullDATASET dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._customerDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.customerDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customerDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wADATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.wADATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wADATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._solventsDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SolventsDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._solventsDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._potencyDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PotencyDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._potencyDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pesticidesDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PesticidesDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pesticidesDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mycotoxinsDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.mycotoxinsDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mycotoxinsDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._microbialDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.microbialDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._microbialDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._metalsDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.metalsDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._metalsDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._indexDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.indexDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._indexDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._terpenesDATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.terpenesDATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._terpenesDATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(fullDATASET dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._customerDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.customerDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customerDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wADATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.wADATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wADATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._solventsDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SolventsDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._solventsDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._potencyDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PotencyDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._potencyDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pesticidesDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PesticidesDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pesticidesDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mycotoxinsDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.mycotoxinsDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mycotoxinsDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._microbialDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.microbialDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._microbialDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._metalsDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.metalsDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._metalsDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._indexDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.indexDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._indexDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._terpenesDATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.terpenesDATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._terpenesDATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(fullDATASET dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._terpenesDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.terpenesDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._terpenesDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._indexDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.indexDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._indexDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._metalsDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.metalsDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._metalsDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._microbialDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.microbialDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._microbialDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mycotoxinsDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.mycotoxinsDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mycotoxinsDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pesticidesDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PesticidesDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pesticidesDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._potencyDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PotencyDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._potencyDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._solventsDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SolventsDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._solventsDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wADATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.wADATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wADATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customerDATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.customerDATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customerDATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(fullDATASET dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._customerDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customerDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._indexDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._indexDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._metalsDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._metalsDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._microbialDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._microbialDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mycotoxinsDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mycotoxinsDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pesticidesDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pesticidesDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._potencyDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._potencyDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._solventsDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._solventsDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._terpenesDATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._terpenesDATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._wADATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wADATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._customerDATATableAdapter != null)) {
                    revertConnections.Add(this._customerDATATableAdapter, this._customerDATATableAdapter.Connection);
                    this._customerDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._customerDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._customerDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customerDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customerDATATableAdapter.Adapter);
                    }
                }
                if ((this._indexDATATableAdapter != null)) {
                    revertConnections.Add(this._indexDATATableAdapter, this._indexDATATableAdapter.Connection);
                    this._indexDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._indexDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._indexDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._indexDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._indexDATATableAdapter.Adapter);
                    }
                }
                if ((this._metalsDATATableAdapter != null)) {
                    revertConnections.Add(this._metalsDATATableAdapter, this._metalsDATATableAdapter.Connection);
                    this._metalsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._metalsDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._metalsDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._metalsDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._metalsDATATableAdapter.Adapter);
                    }
                }
                if ((this._microbialDATATableAdapter != null)) {
                    revertConnections.Add(this._microbialDATATableAdapter, this._microbialDATATableAdapter.Connection);
                    this._microbialDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._microbialDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._microbialDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._microbialDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._microbialDATATableAdapter.Adapter);
                    }
                }
                if ((this._mycotoxinsDATATableAdapter != null)) {
                    revertConnections.Add(this._mycotoxinsDATATableAdapter, this._mycotoxinsDATATableAdapter.Connection);
                    this._mycotoxinsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mycotoxinsDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mycotoxinsDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mycotoxinsDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mycotoxinsDATATableAdapter.Adapter);
                    }
                }
                if ((this._pesticidesDATATableAdapter != null)) {
                    revertConnections.Add(this._pesticidesDATATableAdapter, this._pesticidesDATATableAdapter.Connection);
                    this._pesticidesDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pesticidesDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pesticidesDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pesticidesDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pesticidesDATATableAdapter.Adapter);
                    }
                }
                if ((this._potencyDATATableAdapter != null)) {
                    revertConnections.Add(this._potencyDATATableAdapter, this._potencyDATATableAdapter.Connection);
                    this._potencyDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._potencyDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._potencyDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._potencyDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._potencyDATATableAdapter.Adapter);
                    }
                }
                if ((this._solventsDATATableAdapter != null)) {
                    revertConnections.Add(this._solventsDATATableAdapter, this._solventsDATATableAdapter.Connection);
                    this._solventsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._solventsDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._solventsDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._solventsDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._solventsDATATableAdapter.Adapter);
                    }
                }
                if ((this._terpenesDATATableAdapter != null)) {
                    revertConnections.Add(this._terpenesDATATableAdapter, this._terpenesDATATableAdapter.Connection);
                    this._terpenesDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._terpenesDATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._terpenesDATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._terpenesDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._terpenesDATATableAdapter.Adapter);
                    }
                }
                if ((this._wADATATableAdapter != null)) {
                    revertConnections.Add(this._wADATATableAdapter, this._wADATATableAdapter.Connection);
                    this._wADATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wADATATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wADATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wADATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wADATATableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._customerDATATableAdapter != null)) {
                    this._customerDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._customerDATATableAdapter]));
                    this._customerDATATableAdapter.Transaction = null;
                }
                if ((this._indexDATATableAdapter != null)) {
                    this._indexDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._indexDATATableAdapter]));
                    this._indexDATATableAdapter.Transaction = null;
                }
                if ((this._metalsDATATableAdapter != null)) {
                    this._metalsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._metalsDATATableAdapter]));
                    this._metalsDATATableAdapter.Transaction = null;
                }
                if ((this._microbialDATATableAdapter != null)) {
                    this._microbialDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._microbialDATATableAdapter]));
                    this._microbialDATATableAdapter.Transaction = null;
                }
                if ((this._mycotoxinsDATATableAdapter != null)) {
                    this._mycotoxinsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mycotoxinsDATATableAdapter]));
                    this._mycotoxinsDATATableAdapter.Transaction = null;
                }
                if ((this._pesticidesDATATableAdapter != null)) {
                    this._pesticidesDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pesticidesDATATableAdapter]));
                    this._pesticidesDATATableAdapter.Transaction = null;
                }
                if ((this._potencyDATATableAdapter != null)) {
                    this._potencyDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._potencyDATATableAdapter]));
                    this._potencyDATATableAdapter.Transaction = null;
                }
                if ((this._solventsDATATableAdapter != null)) {
                    this._solventsDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._solventsDATATableAdapter]));
                    this._solventsDATATableAdapter.Transaction = null;
                }
                if ((this._terpenesDATATableAdapter != null)) {
                    this._terpenesDATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._terpenesDATATableAdapter]));
                    this._terpenesDATATableAdapter.Transaction = null;
                }
                if ((this._wADATATableAdapter != null)) {
                    this._wADATATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wADATATableAdapter]));
                    this._wADATATableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591